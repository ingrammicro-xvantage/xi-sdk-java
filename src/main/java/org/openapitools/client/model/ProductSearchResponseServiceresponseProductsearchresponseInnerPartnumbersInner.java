/*
 * Reseller API Documentation
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-11T06:30:19.223435Z[Etc/UTC]")
public class ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner {
  public static final String SERIALIZED_NAME_INGRAMPARTNUMBER = "ingrampartnumber";
  @SerializedName(SERIALIZED_NAME_INGRAMPARTNUMBER)
  private String ingrampartnumber;

  public static final String SERIALIZED_NAME_MANUFACTURERPARTNUMBER = "manufacturerpartnumber";
  @SerializedName(SERIALIZED_NAME_MANUFACTURERPARTNUMBER)
  private String manufacturerpartnumber;

  public static final String SERIALIZED_NAME_UPCCODE = "upccode";
  @SerializedName(SERIALIZED_NAME_UPCCODE)
  private String upccode;

  public static final String SERIALIZED_NAME_PRODUCTDESCRIPTION = "productdescription";
  @SerializedName(SERIALIZED_NAME_PRODUCTDESCRIPTION)
  private String productdescription;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_HASWARRANTY = "haswarranty";
  @SerializedName(SERIALIZED_NAME_HASWARRANTY)
  private String haswarranty;

  public ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner() {
  }

  public ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner ingrampartnumber(String ingrampartnumber) {
    this.ingrampartnumber = ingrampartnumber;
    return this;
  }

   /**
   * Ingram Part Number
   * @return ingrampartnumber
  **/
  @javax.annotation.Nullable
  public String getIngrampartnumber() {
    return ingrampartnumber;
  }

  public void setIngrampartnumber(String ingrampartnumber) {
    this.ingrampartnumber = ingrampartnumber;
  }


  public ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner manufacturerpartnumber(String manufacturerpartnumber) {
    this.manufacturerpartnumber = manufacturerpartnumber;
    return this;
  }

   /**
   * Vendor or Manufacturer Part Number
   * @return manufacturerpartnumber
  **/
  @javax.annotation.Nullable
  public String getManufacturerpartnumber() {
    return manufacturerpartnumber;
  }

  public void setManufacturerpartnumber(String manufacturerpartnumber) {
    this.manufacturerpartnumber = manufacturerpartnumber;
  }


  public ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner upccode(String upccode) {
    this.upccode = upccode;
    return this;
  }

   /**
   * UPC
   * @return upccode
  **/
  @javax.annotation.Nullable
  public String getUpccode() {
    return upccode;
  }

  public void setUpccode(String upccode) {
    this.upccode = upccode;
  }


  public ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner productdescription(String productdescription) {
    this.productdescription = productdescription;
    return this;
  }

   /**
   * Product description
   * @return productdescription
  **/
  @javax.annotation.Nullable
  public String getProductdescription() {
    return productdescription;
  }

  public void setProductdescription(String productdescription) {
    this.productdescription = productdescription;
  }


  public ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nullable
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner haswarranty(String haswarranty) {
    this.haswarranty = haswarranty;
    return this;
  }

   /**
   * Get haswarranty
   * @return haswarranty
  **/
  @javax.annotation.Nullable
  public String getHaswarranty() {
    return haswarranty;
  }

  public void setHaswarranty(String haswarranty) {
    this.haswarranty = haswarranty;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner productSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner = (ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner) o;
    return Objects.equals(this.ingrampartnumber, productSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner.ingrampartnumber) &&
        Objects.equals(this.manufacturerpartnumber, productSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner.manufacturerpartnumber) &&
        Objects.equals(this.upccode, productSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner.upccode) &&
        Objects.equals(this.productdescription, productSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner.productdescription) &&
        Objects.equals(this.currency, productSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner.currency) &&
        Objects.equals(this.haswarranty, productSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner.haswarranty);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ingrampartnumber, manufacturerpartnumber, upccode, productdescription, currency, haswarranty);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner {\n");
    sb.append("    ingrampartnumber: ").append(toIndentedString(ingrampartnumber)).append("\n");
    sb.append("    manufacturerpartnumber: ").append(toIndentedString(manufacturerpartnumber)).append("\n");
    sb.append("    upccode: ").append(toIndentedString(upccode)).append("\n");
    sb.append("    productdescription: ").append(toIndentedString(productdescription)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    haswarranty: ").append(toIndentedString(haswarranty)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ingrampartnumber");
    openapiFields.add("manufacturerpartnumber");
    openapiFields.add("upccode");
    openapiFields.add("productdescription");
    openapiFields.add("currency");
    openapiFields.add("haswarranty");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner is not found in the empty JSON string", ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("ingrampartnumber") != null && !jsonObj.get("ingrampartnumber").isJsonNull()) && !jsonObj.get("ingrampartnumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ingrampartnumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ingrampartnumber").toString()));
      }
      if ((jsonObj.get("manufacturerpartnumber") != null && !jsonObj.get("manufacturerpartnumber").isJsonNull()) && !jsonObj.get("manufacturerpartnumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `manufacturerpartnumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("manufacturerpartnumber").toString()));
      }
      if ((jsonObj.get("upccode") != null && !jsonObj.get("upccode").isJsonNull()) && !jsonObj.get("upccode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `upccode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("upccode").toString()));
      }
      if ((jsonObj.get("productdescription") != null && !jsonObj.get("productdescription").isJsonNull()) && !jsonObj.get("productdescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productdescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productdescription").toString()));
      }
      if ((jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonNull()) && !jsonObj.get("currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency").toString()));
      }
      if ((jsonObj.get("haswarranty") != null && !jsonObj.get("haswarranty").isJsonNull()) && !jsonObj.get("haswarranty").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `haswarranty` to be a primitive type in the JSON string but got `%s`", jsonObj.get("haswarranty").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner>() {
           @Override
           public void write(JsonWriter out, ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner
  * @throws IOException if the JSON string is invalid with respect to ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner
  */
  public static ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner.class);
  }

 /**
  * Convert an instance of ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

