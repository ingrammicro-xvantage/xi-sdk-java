/*
 * Reseller API Documentation
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OrderDeleteRequestServicerequestOrderDeleteRequestDetails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-11T06:39:09.782810Z[Etc/UTC]")
public class OrderDeleteRequestServicerequestOrderDeleteRequestDetails {
  public static final String SERIALIZED_NAME_ENTRY_DATE = "entryDate";
  @SerializedName(SERIALIZED_NAME_ENTRY_DATE)
  private String entryDate;

  public static final String SERIALIZED_NAME_ORDER_BRANCH = "orderBranch";
  @SerializedName(SERIALIZED_NAME_ORDER_BRANCH)
  private String orderBranch;

  public static final String SERIALIZED_NAME_ORDER_NUMBER = "orderNumber";
  @SerializedName(SERIALIZED_NAME_ORDER_NUMBER)
  private String orderNumber;

  public static final String SERIALIZED_NAME_REJECTION_CODE = "rejectionCode";
  @SerializedName(SERIALIZED_NAME_REJECTION_CODE)
  private String rejectionCode;

  public static final String SERIALIZED_NAME_DISTRIBUTION_NUMBER = "distributionNumber";
  @SerializedName(SERIALIZED_NAME_DISTRIBUTION_NUMBER)
  private String distributionNumber;

  public static final String SERIALIZED_NAME_SHIPMENT_NUMBER = "shipmentNumber";
  @SerializedName(SERIALIZED_NAME_SHIPMENT_NUMBER)
  private String shipmentNumber;

  public static final String SERIALIZED_NAME_OPERATOR_I_D = "operatorID";
  @SerializedName(SERIALIZED_NAME_OPERATOR_I_D)
  private String operatorID;

  public OrderDeleteRequestServicerequestOrderDeleteRequestDetails() {
  }

  public OrderDeleteRequestServicerequestOrderDeleteRequestDetails entryDate(String entryDate) {
    this.entryDate = entryDate;
    return this;
  }

   /**
   * Date order entered
   * @return entryDate
  **/
  @javax.annotation.Nonnull
  public String getEntryDate() {
    return entryDate;
  }

  public void setEntryDate(String entryDate) {
    this.entryDate = entryDate;
  }


  public OrderDeleteRequestServicerequestOrderDeleteRequestDetails orderBranch(String orderBranch) {
    this.orderBranch = orderBranch;
    return this;
  }

   /**
   * Ingram Micro&#39;s first 2 numbers of the order number
   * @return orderBranch
  **/
  @javax.annotation.Nonnull
  public String getOrderBranch() {
    return orderBranch;
  }

  public void setOrderBranch(String orderBranch) {
    this.orderBranch = orderBranch;
  }


  public OrderDeleteRequestServicerequestOrderDeleteRequestDetails orderNumber(String orderNumber) {
    this.orderNumber = orderNumber;
    return this;
  }

   /**
   * Ingram Micro&#39;s middle 6 numbers of the order#
   * @return orderNumber
  **/
  @javax.annotation.Nonnull
  public String getOrderNumber() {
    return orderNumber;
  }

  public void setOrderNumber(String orderNumber) {
    this.orderNumber = orderNumber;
  }


  public OrderDeleteRequestServicerequestOrderDeleteRequestDetails rejectionCode(String rejectionCode) {
    this.rejectionCode = rejectionCode;
    return this;
  }

   /**
   * Get rejectionCode
   * @return rejectionCode
  **/
  @javax.annotation.Nullable
  public String getRejectionCode() {
    return rejectionCode;
  }

  public void setRejectionCode(String rejectionCode) {
    this.rejectionCode = rejectionCode;
  }


  public OrderDeleteRequestServicerequestOrderDeleteRequestDetails distributionNumber(String distributionNumber) {
    this.distributionNumber = distributionNumber;
    return this;
  }

   /**
   * Ingram Micro&#39;s suffix number of the order#
   * @return distributionNumber
  **/
  @javax.annotation.Nullable
  public String getDistributionNumber() {
    return distributionNumber;
  }

  public void setDistributionNumber(String distributionNumber) {
    this.distributionNumber = distributionNumber;
  }


  public OrderDeleteRequestServicerequestOrderDeleteRequestDetails shipmentNumber(String shipmentNumber) {
    this.shipmentNumber = shipmentNumber;
    return this;
  }

   /**
   * Ingram Micro&#39;s last number of the order#
   * @return shipmentNumber
  **/
  @javax.annotation.Nullable
  public String getShipmentNumber() {
    return shipmentNumber;
  }

  public void setShipmentNumber(String shipmentNumber) {
    this.shipmentNumber = shipmentNumber;
  }


  public OrderDeleteRequestServicerequestOrderDeleteRequestDetails operatorID(String operatorID) {
    this.operatorID = operatorID;
    return this;
  }

   /**
   * Ingram ID(not required)
   * @return operatorID
  **/
  @javax.annotation.Nullable
  public String getOperatorID() {
    return operatorID;
  }

  public void setOperatorID(String operatorID) {
    this.operatorID = operatorID;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderDeleteRequestServicerequestOrderDeleteRequestDetails orderDeleteRequestServicerequestOrderDeleteRequestDetails = (OrderDeleteRequestServicerequestOrderDeleteRequestDetails) o;
    return Objects.equals(this.entryDate, orderDeleteRequestServicerequestOrderDeleteRequestDetails.entryDate) &&
        Objects.equals(this.orderBranch, orderDeleteRequestServicerequestOrderDeleteRequestDetails.orderBranch) &&
        Objects.equals(this.orderNumber, orderDeleteRequestServicerequestOrderDeleteRequestDetails.orderNumber) &&
        Objects.equals(this.rejectionCode, orderDeleteRequestServicerequestOrderDeleteRequestDetails.rejectionCode) &&
        Objects.equals(this.distributionNumber, orderDeleteRequestServicerequestOrderDeleteRequestDetails.distributionNumber) &&
        Objects.equals(this.shipmentNumber, orderDeleteRequestServicerequestOrderDeleteRequestDetails.shipmentNumber) &&
        Objects.equals(this.operatorID, orderDeleteRequestServicerequestOrderDeleteRequestDetails.operatorID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entryDate, orderBranch, orderNumber, rejectionCode, distributionNumber, shipmentNumber, operatorID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderDeleteRequestServicerequestOrderDeleteRequestDetails {\n");
    sb.append("    entryDate: ").append(toIndentedString(entryDate)).append("\n");
    sb.append("    orderBranch: ").append(toIndentedString(orderBranch)).append("\n");
    sb.append("    orderNumber: ").append(toIndentedString(orderNumber)).append("\n");
    sb.append("    rejectionCode: ").append(toIndentedString(rejectionCode)).append("\n");
    sb.append("    distributionNumber: ").append(toIndentedString(distributionNumber)).append("\n");
    sb.append("    shipmentNumber: ").append(toIndentedString(shipmentNumber)).append("\n");
    sb.append("    operatorID: ").append(toIndentedString(operatorID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("entryDate");
    openapiFields.add("orderBranch");
    openapiFields.add("orderNumber");
    openapiFields.add("rejectionCode");
    openapiFields.add("distributionNumber");
    openapiFields.add("shipmentNumber");
    openapiFields.add("operatorID");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("entryDate");
    openapiRequiredFields.add("orderBranch");
    openapiRequiredFields.add("orderNumber");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to OrderDeleteRequestServicerequestOrderDeleteRequestDetails
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrderDeleteRequestServicerequestOrderDeleteRequestDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderDeleteRequestServicerequestOrderDeleteRequestDetails is not found in the empty JSON string", OrderDeleteRequestServicerequestOrderDeleteRequestDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrderDeleteRequestServicerequestOrderDeleteRequestDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderDeleteRequestServicerequestOrderDeleteRequestDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : OrderDeleteRequestServicerequestOrderDeleteRequestDetails.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("entryDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entryDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entryDate").toString()));
      }
      if (!jsonObj.get("orderBranch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderBranch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderBranch").toString()));
      }
      if (!jsonObj.get("orderNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderNumber").toString()));
      }
      if ((jsonObj.get("rejectionCode") != null && !jsonObj.get("rejectionCode").isJsonNull()) && !jsonObj.get("rejectionCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rejectionCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rejectionCode").toString()));
      }
      if ((jsonObj.get("distributionNumber") != null && !jsonObj.get("distributionNumber").isJsonNull()) && !jsonObj.get("distributionNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `distributionNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("distributionNumber").toString()));
      }
      if ((jsonObj.get("shipmentNumber") != null && !jsonObj.get("shipmentNumber").isJsonNull()) && !jsonObj.get("shipmentNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipmentNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipmentNumber").toString()));
      }
      if ((jsonObj.get("operatorID") != null && !jsonObj.get("operatorID").isJsonNull()) && !jsonObj.get("operatorID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `operatorID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("operatorID").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderDeleteRequestServicerequestOrderDeleteRequestDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderDeleteRequestServicerequestOrderDeleteRequestDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderDeleteRequestServicerequestOrderDeleteRequestDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderDeleteRequestServicerequestOrderDeleteRequestDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderDeleteRequestServicerequestOrderDeleteRequestDetails>() {
           @Override
           public void write(JsonWriter out, OrderDeleteRequestServicerequestOrderDeleteRequestDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderDeleteRequestServicerequestOrderDeleteRequestDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OrderDeleteRequestServicerequestOrderDeleteRequestDetails given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OrderDeleteRequestServicerequestOrderDeleteRequestDetails
  * @throws IOException if the JSON string is invalid with respect to OrderDeleteRequestServicerequestOrderDeleteRequestDetails
  */
  public static OrderDeleteRequestServicerequestOrderDeleteRequestDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderDeleteRequestServicerequestOrderDeleteRequestDetails.class);
  }

 /**
  * Convert an instance of OrderDeleteRequestServicerequestOrderDeleteRequestDetails to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

