/*
 * Reseller API Documentation
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.OrderCreateRequestOrdercreaterequestOrdercreatedetailsExtendedspecsInner;
import org.openapitools.client.model.OrderCreateRequestOrdercreaterequestOrdercreatedetailsLinesInner;
import org.openapitools.client.model.OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OrderCreateRequestOrdercreaterequestOrdercreatedetails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-11T06:39:09.782810Z[Etc/UTC]")
public class OrderCreateRequestOrdercreaterequestOrdercreatedetails {
  public static final String SERIALIZED_NAME_CUSTOMERPONUMBER = "customerponumber";
  @SerializedName(SERIALIZED_NAME_CUSTOMERPONUMBER)
  private String customerponumber;

  /**
   * Order Type - Standard orders, Direct ship orders
   */
  @JsonAdapter(OrdertypeEnum.Adapter.class)
  public enum OrdertypeEnum {
    STANDARD("Standard"),
    
    DIRECT_SHIP("Direct Ship");

    private String value;

    OrdertypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OrdertypeEnum fromValue(String value) {
      for (OrdertypeEnum b : OrdertypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<OrdertypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OrdertypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OrdertypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return OrdertypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      OrdertypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ORDERTYPE = "ordertype";
  @SerializedName(SERIALIZED_NAME_ORDERTYPE)
  private OrdertypeEnum ordertype;

  public static final String SERIALIZED_NAME_ENDUSERORDERNUMBER = "enduserordernumber";
  @SerializedName(SERIALIZED_NAME_ENDUSERORDERNUMBER)
  private String enduserordernumber;

  public static final String SERIALIZED_NAME_BILLTOSUFFIX = "billtosuffix";
  @SerializedName(SERIALIZED_NAME_BILLTOSUFFIX)
  private String billtosuffix;

  public static final String SERIALIZED_NAME_SHIPTOSUFFIX = "shiptosuffix";
  @SerializedName(SERIALIZED_NAME_SHIPTOSUFFIX)
  private String shiptosuffix;

  public static final String SERIALIZED_NAME_SHIPTOADDRESS = "shiptoaddress";
  @SerializedName(SERIALIZED_NAME_SHIPTOADDRESS)
  private OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress shiptoaddress;

  public static final String SERIALIZED_NAME_CARRIERCODE = "carriercode";
  @SerializedName(SERIALIZED_NAME_CARRIERCODE)
  private String carriercode;

  public static final String SERIALIZED_NAME_THIRDPARTYFREIGHTACCOUNTNUMBER = "thirdpartyfreightaccountnumber";
  @SerializedName(SERIALIZED_NAME_THIRDPARTYFREIGHTACCOUNTNUMBER)
  private String thirdpartyfreightaccountnumber;

  public static final String SERIALIZED_NAME_SPECIALBIDNUMBER = "specialbidnumber";
  @SerializedName(SERIALIZED_NAME_SPECIALBIDNUMBER)
  private String specialbidnumber;

  public static final String SERIALIZED_NAME_LINES = "lines";
  @SerializedName(SERIALIZED_NAME_LINES)
  private List<OrderCreateRequestOrdercreaterequestOrdercreatedetailsLinesInner> lines = new ArrayList<>();

  public static final String SERIALIZED_NAME_EXTENDEDSPECS = "extendedspecs";
  @SerializedName(SERIALIZED_NAME_EXTENDEDSPECS)
  private List<OrderCreateRequestOrdercreaterequestOrdercreatedetailsExtendedspecsInner> extendedspecs;

  public OrderCreateRequestOrdercreaterequestOrdercreatedetails() {
  }

  public OrderCreateRequestOrdercreaterequestOrdercreatedetails customerponumber(String customerponumber) {
    this.customerponumber = customerponumber;
    return this;
  }

   /**
   * The customers unique Purchase Order number. Keep it unique to retrieve order information
   * @return customerponumber
  **/
  @javax.annotation.Nonnull
  public String getCustomerponumber() {
    return customerponumber;
  }

  public void setCustomerponumber(String customerponumber) {
    this.customerponumber = customerponumber;
  }


  public OrderCreateRequestOrdercreaterequestOrdercreatedetails ordertype(OrdertypeEnum ordertype) {
    this.ordertype = ordertype;
    return this;
  }

   /**
   * Order Type - Standard orders, Direct ship orders
   * @return ordertype
  **/
  @javax.annotation.Nonnull
  public OrdertypeEnum getOrdertype() {
    return ordertype;
  }

  public void setOrdertype(OrdertypeEnum ordertype) {
    this.ordertype = ordertype;
  }


  public OrderCreateRequestOrdercreaterequestOrdercreatedetails enduserordernumber(String enduserordernumber) {
    this.enduserordernumber = enduserordernumber;
    return this;
  }

   /**
   * Customers End-user PO number
   * @return enduserordernumber
  **/
  @javax.annotation.Nullable
  public String getEnduserordernumber() {
    return enduserordernumber;
  }

  public void setEnduserordernumber(String enduserordernumber) {
    this.enduserordernumber = enduserordernumber;
  }


  public OrderCreateRequestOrdercreaterequestOrdercreatedetails billtosuffix(String billtosuffix) {
    this.billtosuffix = billtosuffix;
    return this;
  }

   /**
   * Designates flooring acct to be used
   * @return billtosuffix
  **/
  @javax.annotation.Nullable
  public String getBilltosuffix() {
    return billtosuffix;
  }

  public void setBilltosuffix(String billtosuffix) {
    this.billtosuffix = billtosuffix;
  }


  public OrderCreateRequestOrdercreaterequestOrdercreatedetails shiptosuffix(String shiptosuffix) {
    this.shiptosuffix = shiptosuffix;
    return this;
  }

   /**
   * Applies to customers with multiple ship to locations (store locations)
   * @return shiptosuffix
  **/
  @javax.annotation.Nullable
  public String getShiptosuffix() {
    return shiptosuffix;
  }

  public void setShiptosuffix(String shiptosuffix) {
    this.shiptosuffix = shiptosuffix;
  }


  public OrderCreateRequestOrdercreaterequestOrdercreatedetails shiptoaddress(OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress shiptoaddress) {
    this.shiptoaddress = shiptoaddress;
    return this;
  }

   /**
   * Get shiptoaddress
   * @return shiptoaddress
  **/
  @javax.annotation.Nonnull
  public OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress getShiptoaddress() {
    return shiptoaddress;
  }

  public void setShiptoaddress(OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress shiptoaddress) {
    this.shiptoaddress = shiptoaddress;
  }


  public OrderCreateRequestOrdercreaterequestOrdercreatedetails carriercode(String carriercode) {
    this.carriercode = carriercode;
    return this;
  }

   /**
   * A customer can dictate what carrier to use for their shipment (Ingram 2-digit carrier code is required). Our recommendation is leave this field blank which will allow Ingram Micro to choose the best carrier to gain the best freight rates.
   * @return carriercode
  **/
  @javax.annotation.Nullable
  public String getCarriercode() {
    return carriercode;
  }

  public void setCarriercode(String carriercode) {
    this.carriercode = carriercode;
  }


  public OrderCreateRequestOrdercreaterequestOrdercreatedetails thirdpartyfreightaccountnumber(String thirdpartyfreightaccountnumber) {
    this.thirdpartyfreightaccountnumber = thirdpartyfreightaccountnumber;
    return this;
  }

   /**
   * Refers to a third-party freight account number for charging freight against. The account number should be passed within this field and the appropriate carrier code should be supplied within the carrier code tags. Prior to sending your request containing the third-party account number, it must be first entered into our system. Your Ingram Micro Sales Representative can action this for you. If submitted within an order without this preapproval the third-party account number will be ignored.  Note: USA partners- For FedEx Air only (carrier codes F1, FO, F2, FG.), please send three leading zeros before your third-party freight account number (i.e.: 000999999999.) 
   * @return thirdpartyfreightaccountnumber
  **/
  @javax.annotation.Nullable
  public String getThirdpartyfreightaccountnumber() {
    return thirdpartyfreightaccountnumber;
  }

  public void setThirdpartyfreightaccountnumber(String thirdpartyfreightaccountnumber) {
    this.thirdpartyfreightaccountnumber = thirdpartyfreightaccountnumber;
  }


  public OrderCreateRequestOrdercreaterequestOrdercreatedetails specialbidnumber(String specialbidnumber) {
    this.specialbidnumber = specialbidnumber;
    return this;
  }

   /**
   * This is the special quote number given to a customer either by a vendor for special pricing or by Ingram Micro. To receive the special pricing assigned to this number it must be included on the order.
   * @return specialbidnumber
  **/
  @javax.annotation.Nullable
  public String getSpecialbidnumber() {
    return specialbidnumber;
  }

  public void setSpecialbidnumber(String specialbidnumber) {
    this.specialbidnumber = specialbidnumber;
  }


  public OrderCreateRequestOrdercreaterequestOrdercreatedetails lines(List<OrderCreateRequestOrdercreaterequestOrdercreatedetailsLinesInner> lines) {
    this.lines = lines;
    return this;
  }

  public OrderCreateRequestOrdercreaterequestOrdercreatedetails addLinesItem(OrderCreateRequestOrdercreaterequestOrdercreatedetailsLinesInner linesItem) {
    if (this.lines == null) {
      this.lines = new ArrayList<>();
    }
    this.lines.add(linesItem);
    return this;
  }

   /**
   * Get lines
   * @return lines
  **/
  @javax.annotation.Nonnull
  public List<OrderCreateRequestOrdercreaterequestOrdercreatedetailsLinesInner> getLines() {
    return lines;
  }

  public void setLines(List<OrderCreateRequestOrdercreaterequestOrdercreatedetailsLinesInner> lines) {
    this.lines = lines;
  }


  public OrderCreateRequestOrdercreaterequestOrdercreatedetails extendedspecs(List<OrderCreateRequestOrdercreaterequestOrdercreatedetailsExtendedspecsInner> extendedspecs) {
    this.extendedspecs = extendedspecs;
    return this;
  }

  public OrderCreateRequestOrdercreaterequestOrdercreatedetails addExtendedspecsItem(OrderCreateRequestOrdercreaterequestOrdercreatedetailsExtendedspecsInner extendedspecsItem) {
    if (this.extendedspecs == null) {
      this.extendedspecs = new ArrayList<>();
    }
    this.extendedspecs.add(extendedspecsItem);
    return this;
  }

   /**
   * Get extendedspecs
   * @return extendedspecs
  **/
  @javax.annotation.Nullable
  public List<OrderCreateRequestOrdercreaterequestOrdercreatedetailsExtendedspecsInner> getExtendedspecs() {
    return extendedspecs;
  }

  public void setExtendedspecs(List<OrderCreateRequestOrdercreaterequestOrdercreatedetailsExtendedspecsInner> extendedspecs) {
    this.extendedspecs = extendedspecs;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderCreateRequestOrdercreaterequestOrdercreatedetails orderCreateRequestOrdercreaterequestOrdercreatedetails = (OrderCreateRequestOrdercreaterequestOrdercreatedetails) o;
    return Objects.equals(this.customerponumber, orderCreateRequestOrdercreaterequestOrdercreatedetails.customerponumber) &&
        Objects.equals(this.ordertype, orderCreateRequestOrdercreaterequestOrdercreatedetails.ordertype) &&
        Objects.equals(this.enduserordernumber, orderCreateRequestOrdercreaterequestOrdercreatedetails.enduserordernumber) &&
        Objects.equals(this.billtosuffix, orderCreateRequestOrdercreaterequestOrdercreatedetails.billtosuffix) &&
        Objects.equals(this.shiptosuffix, orderCreateRequestOrdercreaterequestOrdercreatedetails.shiptosuffix) &&
        Objects.equals(this.shiptoaddress, orderCreateRequestOrdercreaterequestOrdercreatedetails.shiptoaddress) &&
        Objects.equals(this.carriercode, orderCreateRequestOrdercreaterequestOrdercreatedetails.carriercode) &&
        Objects.equals(this.thirdpartyfreightaccountnumber, orderCreateRequestOrdercreaterequestOrdercreatedetails.thirdpartyfreightaccountnumber) &&
        Objects.equals(this.specialbidnumber, orderCreateRequestOrdercreaterequestOrdercreatedetails.specialbidnumber) &&
        Objects.equals(this.lines, orderCreateRequestOrdercreaterequestOrdercreatedetails.lines) &&
        Objects.equals(this.extendedspecs, orderCreateRequestOrdercreaterequestOrdercreatedetails.extendedspecs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerponumber, ordertype, enduserordernumber, billtosuffix, shiptosuffix, shiptoaddress, carriercode, thirdpartyfreightaccountnumber, specialbidnumber, lines, extendedspecs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderCreateRequestOrdercreaterequestOrdercreatedetails {\n");
    sb.append("    customerponumber: ").append(toIndentedString(customerponumber)).append("\n");
    sb.append("    ordertype: ").append(toIndentedString(ordertype)).append("\n");
    sb.append("    enduserordernumber: ").append(toIndentedString(enduserordernumber)).append("\n");
    sb.append("    billtosuffix: ").append(toIndentedString(billtosuffix)).append("\n");
    sb.append("    shiptosuffix: ").append(toIndentedString(shiptosuffix)).append("\n");
    sb.append("    shiptoaddress: ").append(toIndentedString(shiptoaddress)).append("\n");
    sb.append("    carriercode: ").append(toIndentedString(carriercode)).append("\n");
    sb.append("    thirdpartyfreightaccountnumber: ").append(toIndentedString(thirdpartyfreightaccountnumber)).append("\n");
    sb.append("    specialbidnumber: ").append(toIndentedString(specialbidnumber)).append("\n");
    sb.append("    lines: ").append(toIndentedString(lines)).append("\n");
    sb.append("    extendedspecs: ").append(toIndentedString(extendedspecs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("customerponumber");
    openapiFields.add("ordertype");
    openapiFields.add("enduserordernumber");
    openapiFields.add("billtosuffix");
    openapiFields.add("shiptosuffix");
    openapiFields.add("shiptoaddress");
    openapiFields.add("carriercode");
    openapiFields.add("thirdpartyfreightaccountnumber");
    openapiFields.add("specialbidnumber");
    openapiFields.add("lines");
    openapiFields.add("extendedspecs");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("customerponumber");
    openapiRequiredFields.add("ordertype");
    openapiRequiredFields.add("shiptoaddress");
    openapiRequiredFields.add("lines");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to OrderCreateRequestOrdercreaterequestOrdercreatedetails
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrderCreateRequestOrdercreaterequestOrdercreatedetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderCreateRequestOrdercreaterequestOrdercreatedetails is not found in the empty JSON string", OrderCreateRequestOrdercreaterequestOrdercreatedetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrderCreateRequestOrdercreaterequestOrdercreatedetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderCreateRequestOrdercreaterequestOrdercreatedetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : OrderCreateRequestOrdercreaterequestOrdercreatedetails.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("customerponumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerponumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerponumber").toString()));
      }
      if (!jsonObj.get("ordertype").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ordertype` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ordertype").toString()));
      }
      // validate the required field `ordertype`
      OrdertypeEnum.validateJsonElement(jsonObj.get("ordertype"));
      if ((jsonObj.get("enduserordernumber") != null && !jsonObj.get("enduserordernumber").isJsonNull()) && !jsonObj.get("enduserordernumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `enduserordernumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("enduserordernumber").toString()));
      }
      if ((jsonObj.get("billtosuffix") != null && !jsonObj.get("billtosuffix").isJsonNull()) && !jsonObj.get("billtosuffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billtosuffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billtosuffix").toString()));
      }
      if ((jsonObj.get("shiptosuffix") != null && !jsonObj.get("shiptosuffix").isJsonNull()) && !jsonObj.get("shiptosuffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shiptosuffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shiptosuffix").toString()));
      }
      // validate the required field `shiptoaddress`
      OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress.validateJsonElement(jsonObj.get("shiptoaddress"));
      if ((jsonObj.get("carriercode") != null && !jsonObj.get("carriercode").isJsonNull()) && !jsonObj.get("carriercode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carriercode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carriercode").toString()));
      }
      if ((jsonObj.get("thirdpartyfreightaccountnumber") != null && !jsonObj.get("thirdpartyfreightaccountnumber").isJsonNull()) && !jsonObj.get("thirdpartyfreightaccountnumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thirdpartyfreightaccountnumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thirdpartyfreightaccountnumber").toString()));
      }
      if ((jsonObj.get("specialbidnumber") != null && !jsonObj.get("specialbidnumber").isJsonNull()) && !jsonObj.get("specialbidnumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `specialbidnumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("specialbidnumber").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("lines").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `lines` to be an array in the JSON string but got `%s`", jsonObj.get("lines").toString()));
      }

      JsonArray jsonArraylines = jsonObj.getAsJsonArray("lines");
      // validate the required field `lines` (array)
      for (int i = 0; i < jsonArraylines.size(); i++) {
        OrderCreateRequestOrdercreaterequestOrdercreatedetailsLinesInner.validateJsonElement(jsonArraylines.get(i));
      };
      if (jsonObj.get("extendedspecs") != null && !jsonObj.get("extendedspecs").isJsonNull()) {
        JsonArray jsonArrayextendedspecs = jsonObj.getAsJsonArray("extendedspecs");
        if (jsonArrayextendedspecs != null) {
          // ensure the json data is an array
          if (!jsonObj.get("extendedspecs").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `extendedspecs` to be an array in the JSON string but got `%s`", jsonObj.get("extendedspecs").toString()));
          }

          // validate the optional field `extendedspecs` (array)
          for (int i = 0; i < jsonArrayextendedspecs.size(); i++) {
            OrderCreateRequestOrdercreaterequestOrdercreatedetailsExtendedspecsInner.validateJsonElement(jsonArrayextendedspecs.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderCreateRequestOrdercreaterequestOrdercreatedetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderCreateRequestOrdercreaterequestOrdercreatedetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderCreateRequestOrdercreaterequestOrdercreatedetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderCreateRequestOrdercreaterequestOrdercreatedetails.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderCreateRequestOrdercreaterequestOrdercreatedetails>() {
           @Override
           public void write(JsonWriter out, OrderCreateRequestOrdercreaterequestOrdercreatedetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderCreateRequestOrdercreaterequestOrdercreatedetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OrderCreateRequestOrdercreaterequestOrdercreatedetails given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OrderCreateRequestOrdercreaterequestOrdercreatedetails
  * @throws IOException if the JSON string is invalid with respect to OrderCreateRequestOrdercreaterequestOrdercreatedetails
  */
  public static OrderCreateRequestOrdercreaterequestOrdercreatedetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderCreateRequestOrdercreaterequestOrdercreatedetails.class);
  }

 /**
  * Convert an instance of OrderCreateRequestOrdercreaterequestOrdercreatedetails to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

