/*
 * Reseller API Documentation
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.client.model.OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInnerPackagedetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-11T06:30:19.223435Z[Etc/UTC]")
public class OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner {
  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private BigDecimal quantity;

  public static final String SERIALIZED_NAME_SHIPMENTDATE = "shipmentdate";
  @SerializedName(SERIALIZED_NAME_SHIPMENTDATE)
  private String shipmentdate;

  public static final String SERIALIZED_NAME_SHIPFROMWAREHOUSEID = "shipfromwarehouseid";
  @SerializedName(SERIALIZED_NAME_SHIPFROMWAREHOUSEID)
  private String shipfromwarehouseid;

  public static final String SERIALIZED_NAME_WAREHOUSENAME = "warehousename";
  @SerializedName(SERIALIZED_NAME_WAREHOUSENAME)
  private String warehousename;

  public static final String SERIALIZED_NAME_INVOICENUMBER = "invoicenumber";
  @SerializedName(SERIALIZED_NAME_INVOICENUMBER)
  private String invoicenumber;

  public static final String SERIALIZED_NAME_INVOICEDATE = "invoicedate";
  @SerializedName(SERIALIZED_NAME_INVOICEDATE)
  private String invoicedate;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_STATUSDESCRIPTION = "statusdescription";
  @SerializedName(SERIALIZED_NAME_STATUSDESCRIPTION)
  private String statusdescription;

  public static final String SERIALIZED_NAME_SHIPPEDDATE = "shippeddate";
  @SerializedName(SERIALIZED_NAME_SHIPPEDDATE)
  private String shippeddate;

  public static final String SERIALIZED_NAME_HOLDREASONCODEDESCRIPTION = "holdreasoncodedescription";
  @SerializedName(SERIALIZED_NAME_HOLDREASONCODEDESCRIPTION)
  private String holdreasoncodedescription;

  public static final String SERIALIZED_NAME_PONUMBER = "ponumber";
  @SerializedName(SERIALIZED_NAME_PONUMBER)
  private String ponumber;

  public static final String SERIALIZED_NAME_CARRIERTYPE = "carriertype";
  @SerializedName(SERIALIZED_NAME_CARRIERTYPE)
  private String carriertype;

  public static final String SERIALIZED_NAME_CARRIERCODE = "carriercode";
  @SerializedName(SERIALIZED_NAME_CARRIERCODE)
  private String carriercode;

  public static final String SERIALIZED_NAME_CARRIERNAME = "carriername";
  @SerializedName(SERIALIZED_NAME_CARRIERNAME)
  private String carriername;

  public static final String SERIALIZED_NAME_PRONUMBER = "pronumber";
  @SerializedName(SERIALIZED_NAME_PRONUMBER)
  private String pronumber;

  public static final String SERIALIZED_NAME_PACKAGEDETAILS = "packagedetails";
  @SerializedName(SERIALIZED_NAME_PACKAGEDETAILS)
  private OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInnerPackagedetails packagedetails;

  public OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner() {
  }

  public OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner quantity(BigDecimal quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * quantity shipped
   * @return quantity
  **/
  @javax.annotation.Nullable
  public BigDecimal getQuantity() {
    return quantity;
  }

  public void setQuantity(BigDecimal quantity) {
    this.quantity = quantity;
  }


  public OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner shipmentdate(String shipmentdate) {
    this.shipmentdate = shipmentdate;
    return this;
  }

   /**
   * date of shipment
   * @return shipmentdate
  **/
  @javax.annotation.Nullable
  public String getShipmentdate() {
    return shipmentdate;
  }

  public void setShipmentdate(String shipmentdate) {
    this.shipmentdate = shipmentdate;
  }


  public OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner shipfromwarehouseid(String shipfromwarehouseid) {
    this.shipfromwarehouseid = shipfromwarehouseid;
    return this;
  }

   /**
   * Warehouse product was shipped from
   * @return shipfromwarehouseid
  **/
  @javax.annotation.Nullable
  public String getShipfromwarehouseid() {
    return shipfromwarehouseid;
  }

  public void setShipfromwarehouseid(String shipfromwarehouseid) {
    this.shipfromwarehouseid = shipfromwarehouseid;
  }


  public OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner warehousename(String warehousename) {
    this.warehousename = warehousename;
    return this;
  }

   /**
   * name of the warehouse
   * @return warehousename
  **/
  @javax.annotation.Nullable
  public String getWarehousename() {
    return warehousename;
  }

  public void setWarehousename(String warehousename) {
    this.warehousename = warehousename;
  }


  public OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner invoicenumber(String invoicenumber) {
    this.invoicenumber = invoicenumber;
    return this;
  }

   /**
   * Invoice Number
   * @return invoicenumber
  **/
  @javax.annotation.Nullable
  public String getInvoicenumber() {
    return invoicenumber;
  }

  public void setInvoicenumber(String invoicenumber) {
    this.invoicenumber = invoicenumber;
  }


  public OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner invoicedate(String invoicedate) {
    this.invoicedate = invoicedate;
    return this;
  }

   /**
   * date on the invoice generated
   * @return invoicedate
  **/
  @javax.annotation.Nullable
  public String getInvoicedate() {
    return invoicedate;
  }

  public void setInvoicedate(String invoicedate) {
    this.invoicedate = invoicedate;
  }


  public OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner status(String status) {
    this.status = status;
    return this;
  }

   /**
   * code for current Status of the order
   * @return status
  **/
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner statusdescription(String statusdescription) {
    this.statusdescription = statusdescription;
    return this;
  }

   /**
   * Description of status
   * @return statusdescription
  **/
  @javax.annotation.Nullable
  public String getStatusdescription() {
    return statusdescription;
  }

  public void setStatusdescription(String statusdescription) {
    this.statusdescription = statusdescription;
  }


  public OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner shippeddate(String shippeddate) {
    this.shippeddate = shippeddate;
    return this;
  }

   /**
   * date of shipment
   * @return shippeddate
  **/
  @javax.annotation.Nullable
  public String getShippeddate() {
    return shippeddate;
  }

  public void setShippeddate(String shippeddate) {
    this.shippeddate = shippeddate;
  }


  public OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner holdreasoncodedescription(String holdreasoncodedescription) {
    this.holdreasoncodedescription = holdreasoncodedescription;
    return this;
  }

   /**
   * Description of the code if the order is on hold
   * @return holdreasoncodedescription
  **/
  @javax.annotation.Nullable
  public String getHoldreasoncodedescription() {
    return holdreasoncodedescription;
  }

  public void setHoldreasoncodedescription(String holdreasoncodedescription) {
    this.holdreasoncodedescription = holdreasoncodedescription;
  }


  public OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner ponumber(String ponumber) {
    this.ponumber = ponumber;
    return this;
  }

   /**
   * Ingram PO Number to vendors for direct ship orders
   * @return ponumber
  **/
  @javax.annotation.Nullable
  public String getPonumber() {
    return ponumber;
  }

  public void setPonumber(String ponumber) {
    this.ponumber = ponumber;
  }


  public OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner carriertype(String carriertype) {
    this.carriertype = carriertype;
    return this;
  }

   /**
   * Helps to determine shipment type. for e.g. LTL is used for heavy shipment. SML is used for light shipment
   * @return carriertype
  **/
  @javax.annotation.Nullable
  public String getCarriertype() {
    return carriertype;
  }

  public void setCarriertype(String carriertype) {
    this.carriertype = carriertype;
  }


  public OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner carriercode(String carriercode) {
    this.carriercode = carriercode;
    return this;
  }

   /**
   * 
   * @return carriercode
  **/
  @javax.annotation.Nullable
  public String getCarriercode() {
    return carriercode;
  }

  public void setCarriercode(String carriercode) {
    this.carriercode = carriercode;
  }


  public OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner carriername(String carriername) {
    this.carriername = carriername;
    return this;
  }

   /**
   * Name of the carrier. If carriername is LTL then the tracking info is in the \&quot;pronumber\&quot; data field
   * @return carriername
  **/
  @javax.annotation.Nullable
  public String getCarriername() {
    return carriername;
  }

  public void setCarriername(String carriername) {
    this.carriername = carriername;
  }


  public OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner pronumber(String pronumber) {
    this.pronumber = pronumber;
    return this;
  }

   /**
   * 
   * @return pronumber
  **/
  @javax.annotation.Nullable
  public String getPronumber() {
    return pronumber;
  }

  public void setPronumber(String pronumber) {
    this.pronumber = pronumber;
  }


  public OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner packagedetails(OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInnerPackagedetails packagedetails) {
    this.packagedetails = packagedetails;
    return this;
  }

   /**
   * Get packagedetails
   * @return packagedetails
  **/
  @javax.annotation.Nullable
  public OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInnerPackagedetails getPackagedetails() {
    return packagedetails;
  }

  public void setPackagedetails(OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInnerPackagedetails packagedetails) {
    this.packagedetails = packagedetails;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner orderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner = (OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner) o;
    return Objects.equals(this.quantity, orderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.quantity) &&
        Objects.equals(this.shipmentdate, orderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.shipmentdate) &&
        Objects.equals(this.shipfromwarehouseid, orderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.shipfromwarehouseid) &&
        Objects.equals(this.warehousename, orderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.warehousename) &&
        Objects.equals(this.invoicenumber, orderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.invoicenumber) &&
        Objects.equals(this.invoicedate, orderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.invoicedate) &&
        Objects.equals(this.status, orderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.status) &&
        Objects.equals(this.statusdescription, orderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.statusdescription) &&
        Objects.equals(this.shippeddate, orderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.shippeddate) &&
        Objects.equals(this.holdreasoncodedescription, orderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.holdreasoncodedescription) &&
        Objects.equals(this.ponumber, orderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.ponumber) &&
        Objects.equals(this.carriertype, orderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.carriertype) &&
        Objects.equals(this.carriercode, orderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.carriercode) &&
        Objects.equals(this.carriername, orderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.carriername) &&
        Objects.equals(this.pronumber, orderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.pronumber) &&
        Objects.equals(this.packagedetails, orderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.packagedetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(quantity, shipmentdate, shipfromwarehouseid, warehousename, invoicenumber, invoicedate, status, statusdescription, shippeddate, holdreasoncodedescription, ponumber, carriertype, carriercode, carriername, pronumber, packagedetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner {\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    shipmentdate: ").append(toIndentedString(shipmentdate)).append("\n");
    sb.append("    shipfromwarehouseid: ").append(toIndentedString(shipfromwarehouseid)).append("\n");
    sb.append("    warehousename: ").append(toIndentedString(warehousename)).append("\n");
    sb.append("    invoicenumber: ").append(toIndentedString(invoicenumber)).append("\n");
    sb.append("    invoicedate: ").append(toIndentedString(invoicedate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusdescription: ").append(toIndentedString(statusdescription)).append("\n");
    sb.append("    shippeddate: ").append(toIndentedString(shippeddate)).append("\n");
    sb.append("    holdreasoncodedescription: ").append(toIndentedString(holdreasoncodedescription)).append("\n");
    sb.append("    ponumber: ").append(toIndentedString(ponumber)).append("\n");
    sb.append("    carriertype: ").append(toIndentedString(carriertype)).append("\n");
    sb.append("    carriercode: ").append(toIndentedString(carriercode)).append("\n");
    sb.append("    carriername: ").append(toIndentedString(carriername)).append("\n");
    sb.append("    pronumber: ").append(toIndentedString(pronumber)).append("\n");
    sb.append("    packagedetails: ").append(toIndentedString(packagedetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("quantity");
    openapiFields.add("shipmentdate");
    openapiFields.add("shipfromwarehouseid");
    openapiFields.add("warehousename");
    openapiFields.add("invoicenumber");
    openapiFields.add("invoicedate");
    openapiFields.add("status");
    openapiFields.add("statusdescription");
    openapiFields.add("shippeddate");
    openapiFields.add("holdreasoncodedescription");
    openapiFields.add("ponumber");
    openapiFields.add("carriertype");
    openapiFields.add("carriercode");
    openapiFields.add("carriername");
    openapiFields.add("pronumber");
    openapiFields.add("packagedetails");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner is not found in the empty JSON string", OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("shipmentdate") != null && !jsonObj.get("shipmentdate").isJsonNull()) && !jsonObj.get("shipmentdate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipmentdate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipmentdate").toString()));
      }
      if ((jsonObj.get("shipfromwarehouseid") != null && !jsonObj.get("shipfromwarehouseid").isJsonNull()) && !jsonObj.get("shipfromwarehouseid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipfromwarehouseid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipfromwarehouseid").toString()));
      }
      if ((jsonObj.get("warehousename") != null && !jsonObj.get("warehousename").isJsonNull()) && !jsonObj.get("warehousename").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `warehousename` to be a primitive type in the JSON string but got `%s`", jsonObj.get("warehousename").toString()));
      }
      if ((jsonObj.get("invoicenumber") != null && !jsonObj.get("invoicenumber").isJsonNull()) && !jsonObj.get("invoicenumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `invoicenumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("invoicenumber").toString()));
      }
      if ((jsonObj.get("invoicedate") != null && !jsonObj.get("invoicedate").isJsonNull()) && !jsonObj.get("invoicedate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `invoicedate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("invoicedate").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("statusdescription") != null && !jsonObj.get("statusdescription").isJsonNull()) && !jsonObj.get("statusdescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `statusdescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("statusdescription").toString()));
      }
      if ((jsonObj.get("shippeddate") != null && !jsonObj.get("shippeddate").isJsonNull()) && !jsonObj.get("shippeddate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shippeddate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shippeddate").toString()));
      }
      if ((jsonObj.get("holdreasoncodedescription") != null && !jsonObj.get("holdreasoncodedescription").isJsonNull()) && !jsonObj.get("holdreasoncodedescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `holdreasoncodedescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("holdreasoncodedescription").toString()));
      }
      if ((jsonObj.get("ponumber") != null && !jsonObj.get("ponumber").isJsonNull()) && !jsonObj.get("ponumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ponumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ponumber").toString()));
      }
      if ((jsonObj.get("carriertype") != null && !jsonObj.get("carriertype").isJsonNull()) && !jsonObj.get("carriertype").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carriertype` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carriertype").toString()));
      }
      if ((jsonObj.get("carriercode") != null && !jsonObj.get("carriercode").isJsonNull()) && !jsonObj.get("carriercode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carriercode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carriercode").toString()));
      }
      if ((jsonObj.get("carriername") != null && !jsonObj.get("carriername").isJsonNull()) && !jsonObj.get("carriername").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carriername` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carriername").toString()));
      }
      if ((jsonObj.get("pronumber") != null && !jsonObj.get("pronumber").isJsonNull()) && !jsonObj.get("pronumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pronumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pronumber").toString()));
      }
      // validate the optional field `packagedetails`
      if (jsonObj.get("packagedetails") != null && !jsonObj.get("packagedetails").isJsonNull()) {
        OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInnerPackagedetails.validateJsonElement(jsonObj.get("packagedetails"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner>() {
           @Override
           public void write(JsonWriter out, OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner
  * @throws IOException if the JSON string is invalid with respect to OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner
  */
  public static OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.class);
  }

 /**
  * Convert an instance of OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

