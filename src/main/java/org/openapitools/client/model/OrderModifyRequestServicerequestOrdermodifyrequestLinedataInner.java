/*
 * Reseller API Documentation
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-11T06:30:19.223435Z[Etc/UTC]")
public class OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner {
  public static final String SERIALIZED_NAME_ADDLINEORUPDATELINE = "addlineorupdateline";
  @SerializedName(SERIALIZED_NAME_ADDLINEORUPDATELINE)
  private String addlineorupdateline;

  public static final String SERIALIZED_NAME_LINENUMBER = "linenumber";
  @SerializedName(SERIALIZED_NAME_LINENUMBER)
  private String linenumber;

  public static final String SERIALIZED_NAME_CUSTOMERLINENUMBER = "customerlinenumber";
  @SerializedName(SERIALIZED_NAME_CUSTOMERLINENUMBER)
  private String customerlinenumber;

  public static final String SERIALIZED_NAME_INGRAMPARTNUMBER = "ingrampartnumber";
  @SerializedName(SERIALIZED_NAME_INGRAMPARTNUMBER)
  private String ingrampartnumber;

  public static final String SERIALIZED_NAME_QUANTITYORDERED = "quantityordered";
  @SerializedName(SERIALIZED_NAME_QUANTITYORDERED)
  private Integer quantityordered;

  public static final String SERIALIZED_NAME_CUSTOMERPARTNUMBER = "customerpartnumber";
  @SerializedName(SERIALIZED_NAME_CUSTOMERPARTNUMBER)
  private String customerpartnumber;

  public static final String SERIALIZED_NAME_LINETYPE = "linetype";
  @SerializedName(SERIALIZED_NAME_LINETYPE)
  private String linetype;

  public OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner() {
  }

  public OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner addlineorupdateline(String addlineorupdateline) {
    this.addlineorupdateline = addlineorupdateline;
    return this;
  }

   /**
   * Get addlineorupdateline
   * @return addlineorupdateline
  **/
  @javax.annotation.Nullable
  public String getAddlineorupdateline() {
    return addlineorupdateline;
  }

  public void setAddlineorupdateline(String addlineorupdateline) {
    this.addlineorupdateline = addlineorupdateline;
  }


  public OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner linenumber(String linenumber) {
    this.linenumber = linenumber;
    return this;
  }

   /**
   * Get linenumber
   * @return linenumber
  **/
  @javax.annotation.Nullable
  public String getLinenumber() {
    return linenumber;
  }

  public void setLinenumber(String linenumber) {
    this.linenumber = linenumber;
  }


  public OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner customerlinenumber(String customerlinenumber) {
    this.customerlinenumber = customerlinenumber;
    return this;
  }

   /**
   * Get customerlinenumber
   * @return customerlinenumber
  **/
  @javax.annotation.Nullable
  public String getCustomerlinenumber() {
    return customerlinenumber;
  }

  public void setCustomerlinenumber(String customerlinenumber) {
    this.customerlinenumber = customerlinenumber;
  }


  public OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner ingrampartnumber(String ingrampartnumber) {
    this.ingrampartnumber = ingrampartnumber;
    return this;
  }

   /**
   * Get ingrampartnumber
   * @return ingrampartnumber
  **/
  @javax.annotation.Nullable
  public String getIngrampartnumber() {
    return ingrampartnumber;
  }

  public void setIngrampartnumber(String ingrampartnumber) {
    this.ingrampartnumber = ingrampartnumber;
  }


  public OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner quantityordered(Integer quantityordered) {
    this.quantityordered = quantityordered;
    return this;
  }

   /**
   * Get quantityordered
   * @return quantityordered
  **/
  @javax.annotation.Nullable
  public Integer getQuantityordered() {
    return quantityordered;
  }

  public void setQuantityordered(Integer quantityordered) {
    this.quantityordered = quantityordered;
  }


  public OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner customerpartnumber(String customerpartnumber) {
    this.customerpartnumber = customerpartnumber;
    return this;
  }

   /**
   * Get customerpartnumber
   * @return customerpartnumber
  **/
  @javax.annotation.Nullable
  public String getCustomerpartnumber() {
    return customerpartnumber;
  }

  public void setCustomerpartnumber(String customerpartnumber) {
    this.customerpartnumber = customerpartnumber;
  }


  public OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner linetype(String linetype) {
    this.linetype = linetype;
    return this;
  }

   /**
   * Get linetype
   * @return linetype
  **/
  @javax.annotation.Nullable
  public String getLinetype() {
    return linetype;
  }

  public void setLinetype(String linetype) {
    this.linetype = linetype;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner orderModifyRequestServicerequestOrdermodifyrequestLinedataInner = (OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner) o;
    return Objects.equals(this.addlineorupdateline, orderModifyRequestServicerequestOrdermodifyrequestLinedataInner.addlineorupdateline) &&
        Objects.equals(this.linenumber, orderModifyRequestServicerequestOrdermodifyrequestLinedataInner.linenumber) &&
        Objects.equals(this.customerlinenumber, orderModifyRequestServicerequestOrdermodifyrequestLinedataInner.customerlinenumber) &&
        Objects.equals(this.ingrampartnumber, orderModifyRequestServicerequestOrdermodifyrequestLinedataInner.ingrampartnumber) &&
        Objects.equals(this.quantityordered, orderModifyRequestServicerequestOrdermodifyrequestLinedataInner.quantityordered) &&
        Objects.equals(this.customerpartnumber, orderModifyRequestServicerequestOrdermodifyrequestLinedataInner.customerpartnumber) &&
        Objects.equals(this.linetype, orderModifyRequestServicerequestOrdermodifyrequestLinedataInner.linetype);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addlineorupdateline, linenumber, customerlinenumber, ingrampartnumber, quantityordered, customerpartnumber, linetype);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner {\n");
    sb.append("    addlineorupdateline: ").append(toIndentedString(addlineorupdateline)).append("\n");
    sb.append("    linenumber: ").append(toIndentedString(linenumber)).append("\n");
    sb.append("    customerlinenumber: ").append(toIndentedString(customerlinenumber)).append("\n");
    sb.append("    ingrampartnumber: ").append(toIndentedString(ingrampartnumber)).append("\n");
    sb.append("    quantityordered: ").append(toIndentedString(quantityordered)).append("\n");
    sb.append("    customerpartnumber: ").append(toIndentedString(customerpartnumber)).append("\n");
    sb.append("    linetype: ").append(toIndentedString(linetype)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("addlineorupdateline");
    openapiFields.add("linenumber");
    openapiFields.add("customerlinenumber");
    openapiFields.add("ingrampartnumber");
    openapiFields.add("quantityordered");
    openapiFields.add("customerpartnumber");
    openapiFields.add("linetype");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner is not found in the empty JSON string", OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("addlineorupdateline") != null && !jsonObj.get("addlineorupdateline").isJsonNull()) && !jsonObj.get("addlineorupdateline").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addlineorupdateline` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addlineorupdateline").toString()));
      }
      if ((jsonObj.get("linenumber") != null && !jsonObj.get("linenumber").isJsonNull()) && !jsonObj.get("linenumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `linenumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("linenumber").toString()));
      }
      if ((jsonObj.get("customerlinenumber") != null && !jsonObj.get("customerlinenumber").isJsonNull()) && !jsonObj.get("customerlinenumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerlinenumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerlinenumber").toString()));
      }
      if ((jsonObj.get("ingrampartnumber") != null && !jsonObj.get("ingrampartnumber").isJsonNull()) && !jsonObj.get("ingrampartnumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ingrampartnumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ingrampartnumber").toString()));
      }
      if ((jsonObj.get("customerpartnumber") != null && !jsonObj.get("customerpartnumber").isJsonNull()) && !jsonObj.get("customerpartnumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerpartnumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerpartnumber").toString()));
      }
      if ((jsonObj.get("linetype") != null && !jsonObj.get("linetype").isJsonNull()) && !jsonObj.get("linetype").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `linetype` to be a primitive type in the JSON string but got `%s`", jsonObj.get("linetype").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner>() {
           @Override
           public void write(JsonWriter out, OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner
  * @throws IOException if the JSON string is invalid with respect to OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner
  */
  public static OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner.class);
  }

 /**
  * Convert an instance of OrderModifyRequestServicerequestOrdermodifyrequestLinedataInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

