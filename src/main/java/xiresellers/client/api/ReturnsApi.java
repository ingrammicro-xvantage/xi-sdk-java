/*
 * XI Sdk Resellers
 * For Ingram Micro Resellers. Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package xiresellers.client.api;

import xiresellers.client.ApiCallback;
import xiresellers.client.ApiClient;
import xiresellers.client.ApiException;
import xiresellers.client.ApiResponse;
import xiresellers.client.Configuration;
import xiresellers.client.Pair;
import xiresellers.client.ProgressRequestBody;
import xiresellers.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import xiresellers.client.model.GetResellerV6ValidateQuote500Response;
import xiresellers.client.model.PostRenewalssearch400Response;
import xiresellers.client.model.ReturnsCreateRequest;
import xiresellers.client.model.ReturnsCreateResponse;
import xiresellers.client.model.ReturnsDetailsResponse;
import xiresellers.client.model.ReturnsSearchResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ReturnsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ReturnsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ReturnsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for getResellersV6Returnsdetails
     * @param imCustomerNumber Your unique Ingram Micro customer number. (required)
     * @param imCountryCode Two-character ISO country code. (required)
     * @param imCorrelationID Unique transaction number to identify each transaction across all the systems. (required)
     * @param caseRequestNumber A unique return request number. (required)
     * @param imSenderID Unique value used to identify the sender of the transaction. Example: MyCompany (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getResellersV6ReturnsdetailsCall(String imCustomerNumber, String imCountryCode, String imCorrelationID, String caseRequestNumber, String imSenderID, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/resellers/v6/returns/{caseRequestNumber}"
            .replace("{" + "caseRequestNumber" + "}", localVarApiClient.escapeString(caseRequestNumber.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (imCustomerNumber != null) {
            localVarHeaderParams.put("IM-CustomerNumber", localVarApiClient.parameterToString(imCustomerNumber));
        }

        if (imCountryCode != null) {
            localVarHeaderParams.put("IM-CountryCode", localVarApiClient.parameterToString(imCountryCode));
        }

        if (imCorrelationID != null) {
            localVarHeaderParams.put("IM-CorrelationID", localVarApiClient.parameterToString(imCorrelationID));
        }

        if (imSenderID != null) {
            localVarHeaderParams.put("IM-SenderID", localVarApiClient.parameterToString(imSenderID));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "application" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getResellersV6ReturnsdetailsValidateBeforeCall(String imCustomerNumber, String imCountryCode, String imCorrelationID, String caseRequestNumber, String imSenderID, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'imCustomerNumber' is set
        if (imCustomerNumber == null) {
            throw new ApiException("Missing the required parameter 'imCustomerNumber' when calling getResellersV6Returnsdetails(Async)");
        }

        // verify the required parameter 'imCountryCode' is set
        if (imCountryCode == null) {
            throw new ApiException("Missing the required parameter 'imCountryCode' when calling getResellersV6Returnsdetails(Async)");
        }

        // verify the required parameter 'imCorrelationID' is set
        if (imCorrelationID == null) {
            throw new ApiException("Missing the required parameter 'imCorrelationID' when calling getResellersV6Returnsdetails(Async)");
        }

        // verify the required parameter 'caseRequestNumber' is set
        if (caseRequestNumber == null) {
            throw new ApiException("Missing the required parameter 'caseRequestNumber' when calling getResellersV6Returnsdetails(Async)");
        }

        return getResellersV6ReturnsdetailsCall(imCustomerNumber, imCountryCode, imCorrelationID, caseRequestNumber, imSenderID, _callback);

    }

    /**
     * Returns Details
     * The Returns Details API will retrieve all the details related to the specific caseRequestNumber.
     * @param imCustomerNumber Your unique Ingram Micro customer number. (required)
     * @param imCountryCode Two-character ISO country code. (required)
     * @param imCorrelationID Unique transaction number to identify each transaction across all the systems. (required)
     * @param caseRequestNumber A unique return request number. (required)
     * @param imSenderID Unique value used to identify the sender of the transaction. Example: MyCompany (optional)
     * @return ReturnsDetailsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public ReturnsDetailsResponse getResellersV6Returnsdetails(String imCustomerNumber, String imCountryCode, String imCorrelationID, String caseRequestNumber, String imSenderID) throws ApiException {
        ApiResponse<ReturnsDetailsResponse> localVarResp = getResellersV6ReturnsdetailsWithHttpInfo(imCustomerNumber, imCountryCode, imCorrelationID, caseRequestNumber, imSenderID);
        return localVarResp.getData();
    }

    /**
     * Returns Details
     * The Returns Details API will retrieve all the details related to the specific caseRequestNumber.
     * @param imCustomerNumber Your unique Ingram Micro customer number. (required)
     * @param imCountryCode Two-character ISO country code. (required)
     * @param imCorrelationID Unique transaction number to identify each transaction across all the systems. (required)
     * @param caseRequestNumber A unique return request number. (required)
     * @param imSenderID Unique value used to identify the sender of the transaction. Example: MyCompany (optional)
     * @return ApiResponse&lt;ReturnsDetailsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ReturnsDetailsResponse> getResellersV6ReturnsdetailsWithHttpInfo(String imCustomerNumber, String imCountryCode, String imCorrelationID, String caseRequestNumber, String imSenderID) throws ApiException {
        okhttp3.Call localVarCall = getResellersV6ReturnsdetailsValidateBeforeCall(imCustomerNumber, imCountryCode, imCorrelationID, caseRequestNumber, imSenderID, null);
        Type localVarReturnType = new TypeToken<ReturnsDetailsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Returns Details (asynchronously)
     * The Returns Details API will retrieve all the details related to the specific caseRequestNumber.
     * @param imCustomerNumber Your unique Ingram Micro customer number. (required)
     * @param imCountryCode Two-character ISO country code. (required)
     * @param imCorrelationID Unique transaction number to identify each transaction across all the systems. (required)
     * @param caseRequestNumber A unique return request number. (required)
     * @param imSenderID Unique value used to identify the sender of the transaction. Example: MyCompany (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getResellersV6ReturnsdetailsAsync(String imCustomerNumber, String imCountryCode, String imCorrelationID, String caseRequestNumber, String imSenderID, final ApiCallback<ReturnsDetailsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = getResellersV6ReturnsdetailsValidateBeforeCall(imCustomerNumber, imCountryCode, imCorrelationID, caseRequestNumber, imSenderID, _callback);
        Type localVarReturnType = new TypeToken<ReturnsDetailsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getResellersV6Returnssearch
     * @param imCustomerNumber Your unique Ingram Micro customer number. (required)
     * @param imCountryCode Two-character ISO country code. (required)
     * @param imCorrelationID Unique transaction number to identify each transaction across all the systems. (required)
     * @param imSenderID Unique value used to identify the sender of the transaction. Example: MyCompany (optional)
     * @param caseRequestNumber A unique return request number. (optional)
     * @param invoiceNumber The Invoice number for the order. (optional)
     * @param returnClaimId A unique return claim Id. (optional)
     * @param referenceNumber The reference number for the return. (optional)
     * @param ingramPartNumber Unique IngramMicro part number. (optional)
     * @param vendorPartNumber The vendor&#39;s part number. (optional)
     * @param returnStatusIn Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided. (optional)
     * @param claimStatusIn Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided. (optional)
     * @param createdOnBt The date on which the return request was created.  (optional)
     * @param modifiedOnBt The date on which the return request was last updated. (optional)
     * @param returnReasonIn Comma separated Pre-defined value. test, (EW) Express Warehousing, (AR) Account Receivables, (BB) Buy Back, (BE) Stock Balance Exception, (BO) Bill Only, (CE) Credit Dept Use - Credit Exception, (CF) Configuration Fee, (CS ) Customer Service Discretion, (CS1) Customer Service Discretion CS Error, (DE) Defective Exception, (DF) Defective Items, (DI) Direct Credit, (DM) Damaged from Carrier, (DN) Damaged Without Product, (DT) Direct/ Special Order, (DT1) Direct Ship billed, not shipped., (FO) Freight Out, (FX) No-Scan, (IN) Incomplete, (LS) Lost Shipment, (MN) Minimum Order Fee Credit, (OS) Over Shipment, (PR) Pricing Error, (RF) Refusal Credit, (RI) Re-Invoice, (RP) Return For Repair, (RT) Return Not Credited, (RTD) RCN, (SB) Stock Balance, (SD) Sales Discretion, (SH) Incorrect Shipping And Handling, (SS) Short Shipment, (SSK) Short Ship kit, (SW) Sales Writeoff, (TE) Opened Return, (TR) Training Refund, (TX) Tax Credit, (WS) Wrong Sales Sealed, (WW) Wrong Warehouse, (FS) Warehouse Failed Serial# Capture, Latin America Vebdor Credits, Select Source, ITAD - Trade-in Credit, Withholding Tax (optional)
     * @param page Number of page. (optional)
     * @param size The submitted pagesize, default is 25 (optional)
     * @param sort Refers to the column selected to apply the sorting criteria. (optional)
     * @param sortingColumnName The column name which will be sorted on. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getResellersV6ReturnssearchCall(String imCustomerNumber, String imCountryCode, String imCorrelationID, String imSenderID, String caseRequestNumber, String invoiceNumber, String returnClaimId, String referenceNumber, String ingramPartNumber, String vendorPartNumber, String returnStatusIn, String claimStatusIn, String createdOnBt, String modifiedOnBt, String returnReasonIn, String page, String size, String sort, String sortingColumnName, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/resellers/v6/returns/search";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (caseRequestNumber != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("caseRequestNumber", caseRequestNumber));
        }

        if (invoiceNumber != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("invoiceNumber", invoiceNumber));
        }

        if (returnClaimId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("returnClaimId", returnClaimId));
        }

        if (referenceNumber != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("referenceNumber", referenceNumber));
        }

        if (ingramPartNumber != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ingramPartNumber", ingramPartNumber));
        }

        if (vendorPartNumber != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("vendorPartNumber", vendorPartNumber));
        }

        if (returnStatusIn != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("returnStatus-in", returnStatusIn));
        }

        if (claimStatusIn != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("claimStatus-in", claimStatusIn));
        }

        if (createdOnBt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("createdOn-bt", createdOnBt));
        }

        if (modifiedOnBt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("modifiedOn-bt", modifiedOnBt));
        }

        if (returnReasonIn != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("returnReason-in", returnReasonIn));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (size != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("size", size));
        }

        if (sort != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort", sort));
        }

        if (sortingColumnName != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sortingColumnName", sortingColumnName));
        }

        if (imCustomerNumber != null) {
            localVarHeaderParams.put("IM-CustomerNumber", localVarApiClient.parameterToString(imCustomerNumber));
        }

        if (imCountryCode != null) {
            localVarHeaderParams.put("IM-CountryCode", localVarApiClient.parameterToString(imCountryCode));
        }

        if (imCorrelationID != null) {
            localVarHeaderParams.put("IM-CorrelationID", localVarApiClient.parameterToString(imCorrelationID));
        }

        if (imSenderID != null) {
            localVarHeaderParams.put("IM-SenderID", localVarApiClient.parameterToString(imSenderID));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "application" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getResellersV6ReturnssearchValidateBeforeCall(String imCustomerNumber, String imCountryCode, String imCorrelationID, String imSenderID, String caseRequestNumber, String invoiceNumber, String returnClaimId, String referenceNumber, String ingramPartNumber, String vendorPartNumber, String returnStatusIn, String claimStatusIn, String createdOnBt, String modifiedOnBt, String returnReasonIn, String page, String size, String sort, String sortingColumnName, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'imCustomerNumber' is set
        if (imCustomerNumber == null) {
            throw new ApiException("Missing the required parameter 'imCustomerNumber' when calling getResellersV6Returnssearch(Async)");
        }

        // verify the required parameter 'imCountryCode' is set
        if (imCountryCode == null) {
            throw new ApiException("Missing the required parameter 'imCountryCode' when calling getResellersV6Returnssearch(Async)");
        }

        // verify the required parameter 'imCorrelationID' is set
        if (imCorrelationID == null) {
            throw new ApiException("Missing the required parameter 'imCorrelationID' when calling getResellersV6Returnssearch(Async)");
        }

        return getResellersV6ReturnssearchCall(imCustomerNumber, imCountryCode, imCorrelationID, imSenderID, caseRequestNumber, invoiceNumber, returnClaimId, referenceNumber, ingramPartNumber, vendorPartNumber, returnStatusIn, claimStatusIn, createdOnBt, modifiedOnBt, returnReasonIn, page, size, sort, sortingColumnName, _callback);

    }

    /**
     * Returns Search
     * The Returns Search API, by default, will retrieve all the returns that are associated with the customer’s account. The customer will be able to search returns using the query parameters. The Returns Search response will return the following information:  returnClaimId, caseRequestNumber, createdOn, referenceNumber, and returnReason.
     * @param imCustomerNumber Your unique Ingram Micro customer number. (required)
     * @param imCountryCode Two-character ISO country code. (required)
     * @param imCorrelationID Unique transaction number to identify each transaction across all the systems. (required)
     * @param imSenderID Unique value used to identify the sender of the transaction. Example: MyCompany (optional)
     * @param caseRequestNumber A unique return request number. (optional)
     * @param invoiceNumber The Invoice number for the order. (optional)
     * @param returnClaimId A unique return claim Id. (optional)
     * @param referenceNumber The reference number for the return. (optional)
     * @param ingramPartNumber Unique IngramMicro part number. (optional)
     * @param vendorPartNumber The vendor&#39;s part number. (optional)
     * @param returnStatusIn Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided. (optional)
     * @param claimStatusIn Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided. (optional)
     * @param createdOnBt The date on which the return request was created.  (optional)
     * @param modifiedOnBt The date on which the return request was last updated. (optional)
     * @param returnReasonIn Comma separated Pre-defined value. test, (EW) Express Warehousing, (AR) Account Receivables, (BB) Buy Back, (BE) Stock Balance Exception, (BO) Bill Only, (CE) Credit Dept Use - Credit Exception, (CF) Configuration Fee, (CS ) Customer Service Discretion, (CS1) Customer Service Discretion CS Error, (DE) Defective Exception, (DF) Defective Items, (DI) Direct Credit, (DM) Damaged from Carrier, (DN) Damaged Without Product, (DT) Direct/ Special Order, (DT1) Direct Ship billed, not shipped., (FO) Freight Out, (FX) No-Scan, (IN) Incomplete, (LS) Lost Shipment, (MN) Minimum Order Fee Credit, (OS) Over Shipment, (PR) Pricing Error, (RF) Refusal Credit, (RI) Re-Invoice, (RP) Return For Repair, (RT) Return Not Credited, (RTD) RCN, (SB) Stock Balance, (SD) Sales Discretion, (SH) Incorrect Shipping And Handling, (SS) Short Shipment, (SSK) Short Ship kit, (SW) Sales Writeoff, (TE) Opened Return, (TR) Training Refund, (TX) Tax Credit, (WS) Wrong Sales Sealed, (WW) Wrong Warehouse, (FS) Warehouse Failed Serial# Capture, Latin America Vebdor Credits, Select Source, ITAD - Trade-in Credit, Withholding Tax (optional)
     * @param page Number of page. (optional)
     * @param size The submitted pagesize, default is 25 (optional)
     * @param sort Refers to the column selected to apply the sorting criteria. (optional)
     * @param sortingColumnName The column name which will be sorted on. (optional)
     * @return ReturnsSearchResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public ReturnsSearchResponse getResellersV6Returnssearch(String imCustomerNumber, String imCountryCode, String imCorrelationID, String imSenderID, String caseRequestNumber, String invoiceNumber, String returnClaimId, String referenceNumber, String ingramPartNumber, String vendorPartNumber, String returnStatusIn, String claimStatusIn, String createdOnBt, String modifiedOnBt, String returnReasonIn, String page, String size, String sort, String sortingColumnName) throws ApiException {
        ApiResponse<ReturnsSearchResponse> localVarResp = getResellersV6ReturnssearchWithHttpInfo(imCustomerNumber, imCountryCode, imCorrelationID, imSenderID, caseRequestNumber, invoiceNumber, returnClaimId, referenceNumber, ingramPartNumber, vendorPartNumber, returnStatusIn, claimStatusIn, createdOnBt, modifiedOnBt, returnReasonIn, page, size, sort, sortingColumnName);
        return localVarResp.getData();
    }

    /**
     * Returns Search
     * The Returns Search API, by default, will retrieve all the returns that are associated with the customer’s account. The customer will be able to search returns using the query parameters. The Returns Search response will return the following information:  returnClaimId, caseRequestNumber, createdOn, referenceNumber, and returnReason.
     * @param imCustomerNumber Your unique Ingram Micro customer number. (required)
     * @param imCountryCode Two-character ISO country code. (required)
     * @param imCorrelationID Unique transaction number to identify each transaction across all the systems. (required)
     * @param imSenderID Unique value used to identify the sender of the transaction. Example: MyCompany (optional)
     * @param caseRequestNumber A unique return request number. (optional)
     * @param invoiceNumber The Invoice number for the order. (optional)
     * @param returnClaimId A unique return claim Id. (optional)
     * @param referenceNumber The reference number for the return. (optional)
     * @param ingramPartNumber Unique IngramMicro part number. (optional)
     * @param vendorPartNumber The vendor&#39;s part number. (optional)
     * @param returnStatusIn Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided. (optional)
     * @param claimStatusIn Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided. (optional)
     * @param createdOnBt The date on which the return request was created.  (optional)
     * @param modifiedOnBt The date on which the return request was last updated. (optional)
     * @param returnReasonIn Comma separated Pre-defined value. test, (EW) Express Warehousing, (AR) Account Receivables, (BB) Buy Back, (BE) Stock Balance Exception, (BO) Bill Only, (CE) Credit Dept Use - Credit Exception, (CF) Configuration Fee, (CS ) Customer Service Discretion, (CS1) Customer Service Discretion CS Error, (DE) Defective Exception, (DF) Defective Items, (DI) Direct Credit, (DM) Damaged from Carrier, (DN) Damaged Without Product, (DT) Direct/ Special Order, (DT1) Direct Ship billed, not shipped., (FO) Freight Out, (FX) No-Scan, (IN) Incomplete, (LS) Lost Shipment, (MN) Minimum Order Fee Credit, (OS) Over Shipment, (PR) Pricing Error, (RF) Refusal Credit, (RI) Re-Invoice, (RP) Return For Repair, (RT) Return Not Credited, (RTD) RCN, (SB) Stock Balance, (SD) Sales Discretion, (SH) Incorrect Shipping And Handling, (SS) Short Shipment, (SSK) Short Ship kit, (SW) Sales Writeoff, (TE) Opened Return, (TR) Training Refund, (TX) Tax Credit, (WS) Wrong Sales Sealed, (WW) Wrong Warehouse, (FS) Warehouse Failed Serial# Capture, Latin America Vebdor Credits, Select Source, ITAD - Trade-in Credit, Withholding Tax (optional)
     * @param page Number of page. (optional)
     * @param size The submitted pagesize, default is 25 (optional)
     * @param sort Refers to the column selected to apply the sorting criteria. (optional)
     * @param sortingColumnName The column name which will be sorted on. (optional)
     * @return ApiResponse&lt;ReturnsSearchResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ReturnsSearchResponse> getResellersV6ReturnssearchWithHttpInfo(String imCustomerNumber, String imCountryCode, String imCorrelationID, String imSenderID, String caseRequestNumber, String invoiceNumber, String returnClaimId, String referenceNumber, String ingramPartNumber, String vendorPartNumber, String returnStatusIn, String claimStatusIn, String createdOnBt, String modifiedOnBt, String returnReasonIn, String page, String size, String sort, String sortingColumnName) throws ApiException {
        okhttp3.Call localVarCall = getResellersV6ReturnssearchValidateBeforeCall(imCustomerNumber, imCountryCode, imCorrelationID, imSenderID, caseRequestNumber, invoiceNumber, returnClaimId, referenceNumber, ingramPartNumber, vendorPartNumber, returnStatusIn, claimStatusIn, createdOnBt, modifiedOnBt, returnReasonIn, page, size, sort, sortingColumnName, null);
        Type localVarReturnType = new TypeToken<ReturnsSearchResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Returns Search (asynchronously)
     * The Returns Search API, by default, will retrieve all the returns that are associated with the customer’s account. The customer will be able to search returns using the query parameters. The Returns Search response will return the following information:  returnClaimId, caseRequestNumber, createdOn, referenceNumber, and returnReason.
     * @param imCustomerNumber Your unique Ingram Micro customer number. (required)
     * @param imCountryCode Two-character ISO country code. (required)
     * @param imCorrelationID Unique transaction number to identify each transaction across all the systems. (required)
     * @param imSenderID Unique value used to identify the sender of the transaction. Example: MyCompany (optional)
     * @param caseRequestNumber A unique return request number. (optional)
     * @param invoiceNumber The Invoice number for the order. (optional)
     * @param returnClaimId A unique return claim Id. (optional)
     * @param referenceNumber The reference number for the return. (optional)
     * @param ingramPartNumber Unique IngramMicro part number. (optional)
     * @param vendorPartNumber The vendor&#39;s part number. (optional)
     * @param returnStatusIn Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided. (optional)
     * @param claimStatusIn Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided. (optional)
     * @param createdOnBt The date on which the return request was created.  (optional)
     * @param modifiedOnBt The date on which the return request was last updated. (optional)
     * @param returnReasonIn Comma separated Pre-defined value. test, (EW) Express Warehousing, (AR) Account Receivables, (BB) Buy Back, (BE) Stock Balance Exception, (BO) Bill Only, (CE) Credit Dept Use - Credit Exception, (CF) Configuration Fee, (CS ) Customer Service Discretion, (CS1) Customer Service Discretion CS Error, (DE) Defective Exception, (DF) Defective Items, (DI) Direct Credit, (DM) Damaged from Carrier, (DN) Damaged Without Product, (DT) Direct/ Special Order, (DT1) Direct Ship billed, not shipped., (FO) Freight Out, (FX) No-Scan, (IN) Incomplete, (LS) Lost Shipment, (MN) Minimum Order Fee Credit, (OS) Over Shipment, (PR) Pricing Error, (RF) Refusal Credit, (RI) Re-Invoice, (RP) Return For Repair, (RT) Return Not Credited, (RTD) RCN, (SB) Stock Balance, (SD) Sales Discretion, (SH) Incorrect Shipping And Handling, (SS) Short Shipment, (SSK) Short Ship kit, (SW) Sales Writeoff, (TE) Opened Return, (TR) Training Refund, (TX) Tax Credit, (WS) Wrong Sales Sealed, (WW) Wrong Warehouse, (FS) Warehouse Failed Serial# Capture, Latin America Vebdor Credits, Select Source, ITAD - Trade-in Credit, Withholding Tax (optional)
     * @param page Number of page. (optional)
     * @param size The submitted pagesize, default is 25 (optional)
     * @param sort Refers to the column selected to apply the sorting criteria. (optional)
     * @param sortingColumnName The column name which will be sorted on. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getResellersV6ReturnssearchAsync(String imCustomerNumber, String imCountryCode, String imCorrelationID, String imSenderID, String caseRequestNumber, String invoiceNumber, String returnClaimId, String referenceNumber, String ingramPartNumber, String vendorPartNumber, String returnStatusIn, String claimStatusIn, String createdOnBt, String modifiedOnBt, String returnReasonIn, String page, String size, String sort, String sortingColumnName, final ApiCallback<ReturnsSearchResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = getResellersV6ReturnssearchValidateBeforeCall(imCustomerNumber, imCountryCode, imCorrelationID, imSenderID, caseRequestNumber, invoiceNumber, returnClaimId, referenceNumber, ingramPartNumber, vendorPartNumber, returnStatusIn, claimStatusIn, createdOnBt, modifiedOnBt, returnReasonIn, page, size, sort, sortingColumnName, _callback);
        Type localVarReturnType = new TypeToken<ReturnsSearchResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for postReturnscreate
     * @param imCustomerNumber Your unique Ingram Micro customer number. (required)
     * @param imCountryCode Two-character ISO country code. (required)
     * @param imCorrelationID Unique transaction number to identify each transaction across all the systems. (required)
     * @param imSenderID Unique value used to identify the sender of the transaction. Example: MyCompany (optional)
     * @param returnsCreateRequest  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Error: Bad Request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call postReturnscreateCall(String imCustomerNumber, String imCountryCode, String imCorrelationID, String imSenderID, ReturnsCreateRequest returnsCreateRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = returnsCreateRequest;

        // create path and map variables
        String localVarPath = "/resellers/v6/returns/create";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (imCustomerNumber != null) {
            localVarHeaderParams.put("IM-CustomerNumber", localVarApiClient.parameterToString(imCustomerNumber));
        }

        if (imCountryCode != null) {
            localVarHeaderParams.put("IM-CountryCode", localVarApiClient.parameterToString(imCountryCode));
        }

        if (imCorrelationID != null) {
            localVarHeaderParams.put("IM-CorrelationID", localVarApiClient.parameterToString(imCorrelationID));
        }

        if (imSenderID != null) {
            localVarHeaderParams.put("IM-SenderID", localVarApiClient.parameterToString(imSenderID));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "application" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call postReturnscreateValidateBeforeCall(String imCustomerNumber, String imCountryCode, String imCorrelationID, String imSenderID, ReturnsCreateRequest returnsCreateRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'imCustomerNumber' is set
        if (imCustomerNumber == null) {
            throw new ApiException("Missing the required parameter 'imCustomerNumber' when calling postReturnscreate(Async)");
        }

        // verify the required parameter 'imCountryCode' is set
        if (imCountryCode == null) {
            throw new ApiException("Missing the required parameter 'imCountryCode' when calling postReturnscreate(Async)");
        }

        // verify the required parameter 'imCorrelationID' is set
        if (imCorrelationID == null) {
            throw new ApiException("Missing the required parameter 'imCorrelationID' when calling postReturnscreate(Async)");
        }

        return postReturnscreateCall(imCustomerNumber, imCountryCode, imCorrelationID, imSenderID, returnsCreateRequest, _callback);

    }

    /**
     * Returns Create
     * Return create endpoint will allow customers to create a return request. In order to create a request, the customer must provide either ingramPartNumber or vendorPartNumber along with other required fields listed below. 
     * @param imCustomerNumber Your unique Ingram Micro customer number. (required)
     * @param imCountryCode Two-character ISO country code. (required)
     * @param imCorrelationID Unique transaction number to identify each transaction across all the systems. (required)
     * @param imSenderID Unique value used to identify the sender of the transaction. Example: MyCompany (optional)
     * @param returnsCreateRequest  (optional)
     * @return ReturnsCreateResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Error: Bad Request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public ReturnsCreateResponse postReturnscreate(String imCustomerNumber, String imCountryCode, String imCorrelationID, String imSenderID, ReturnsCreateRequest returnsCreateRequest) throws ApiException {
        ApiResponse<ReturnsCreateResponse> localVarResp = postReturnscreateWithHttpInfo(imCustomerNumber, imCountryCode, imCorrelationID, imSenderID, returnsCreateRequest);
        return localVarResp.getData();
    }

    /**
     * Returns Create
     * Return create endpoint will allow customers to create a return request. In order to create a request, the customer must provide either ingramPartNumber or vendorPartNumber along with other required fields listed below. 
     * @param imCustomerNumber Your unique Ingram Micro customer number. (required)
     * @param imCountryCode Two-character ISO country code. (required)
     * @param imCorrelationID Unique transaction number to identify each transaction across all the systems. (required)
     * @param imSenderID Unique value used to identify the sender of the transaction. Example: MyCompany (optional)
     * @param returnsCreateRequest  (optional)
     * @return ApiResponse&lt;ReturnsCreateResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Error: Bad Request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ReturnsCreateResponse> postReturnscreateWithHttpInfo(String imCustomerNumber, String imCountryCode, String imCorrelationID, String imSenderID, ReturnsCreateRequest returnsCreateRequest) throws ApiException {
        okhttp3.Call localVarCall = postReturnscreateValidateBeforeCall(imCustomerNumber, imCountryCode, imCorrelationID, imSenderID, returnsCreateRequest, null);
        Type localVarReturnType = new TypeToken<ReturnsCreateResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Returns Create (asynchronously)
     * Return create endpoint will allow customers to create a return request. In order to create a request, the customer must provide either ingramPartNumber or vendorPartNumber along with other required fields listed below. 
     * @param imCustomerNumber Your unique Ingram Micro customer number. (required)
     * @param imCountryCode Two-character ISO country code. (required)
     * @param imCorrelationID Unique transaction number to identify each transaction across all the systems. (required)
     * @param imSenderID Unique value used to identify the sender of the transaction. Example: MyCompany (optional)
     * @param returnsCreateRequest  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Error: Bad Request </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call postReturnscreateAsync(String imCustomerNumber, String imCountryCode, String imCorrelationID, String imSenderID, ReturnsCreateRequest returnsCreateRequest, final ApiCallback<ReturnsCreateResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = postReturnscreateValidateBeforeCall(imCustomerNumber, imCountryCode, imCorrelationID, imSenderID, returnsCreateRequest, _callback);
        Type localVarReturnType = new TypeToken<ReturnsCreateResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
