/*
 * Reseller API
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package xiresellers.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import xiresellers.client.JSON;

/**
 * WarehouseListType
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-22T11:06:29.712836Z[Etc/UTC]")
public class WarehouseListType {
  public static final String SERIALIZED_NAME_WAREHOUSEID = "warehouseid";
  @SerializedName(SERIALIZED_NAME_WAREHOUSEID)
  private String warehouseid;

  public static final String SERIALIZED_NAME_WAREHOUSEDESCRIPTION = "warehousedescription";
  @SerializedName(SERIALIZED_NAME_WAREHOUSEDESCRIPTION)
  private String warehousedescription;

  public static final String SERIALIZED_NAME_AVAILABLEQUANTITY = "availablequantity";
  @SerializedName(SERIALIZED_NAME_AVAILABLEQUANTITY)
  private Integer availablequantity;

  public static final String SERIALIZED_NAME_ONORDERQUANTITY = "onorderquantity";
  @SerializedName(SERIALIZED_NAME_ONORDERQUANTITY)
  private Integer onorderquantity;

  public static final String SERIALIZED_NAME_ONHOLDQUANTITY = "onholdquantity";
  @SerializedName(SERIALIZED_NAME_ONHOLDQUANTITY)
  private Integer onholdquantity;

  public static final String SERIALIZED_NAME_ETADATE = "etadate";
  @SerializedName(SERIALIZED_NAME_ETADATE)
  private String etadate;

  public WarehouseListType() {
  }

  public WarehouseListType warehouseid(String warehouseid) {
    this.warehouseid = warehouseid;
    return this;
  }

   /**
   * 
   * @return warehouseid
  **/
  @javax.annotation.Nullable
  public String getWarehouseid() {
    return warehouseid;
  }

  public void setWarehouseid(String warehouseid) {
    this.warehouseid = warehouseid;
  }


  public WarehouseListType warehousedescription(String warehousedescription) {
    this.warehousedescription = warehousedescription;
    return this;
  }

   /**
   * City of the Ingram Micro warehouse location
   * @return warehousedescription
  **/
  @javax.annotation.Nullable
  public String getWarehousedescription() {
    return warehousedescription;
  }

  public void setWarehousedescription(String warehousedescription) {
    this.warehousedescription = warehousedescription;
  }


  public WarehouseListType availablequantity(Integer availablequantity) {
    this.availablequantity = availablequantity;
    return this;
  }

   /**
   * On hand available quantity
   * @return availablequantity
  **/
  @javax.annotation.Nullable
  public Integer getAvailablequantity() {
    return availablequantity;
  }

  public void setAvailablequantity(Integer availablequantity) {
    this.availablequantity = availablequantity;
  }


  public WarehouseListType onorderquantity(Integer onorderquantity) {
    this.onorderquantity = onorderquantity;
    return this;
  }

   /**
   * On Order quantity
   * @return onorderquantity
  **/
  @javax.annotation.Nullable
  public Integer getOnorderquantity() {
    return onorderquantity;
  }

  public void setOnorderquantity(Integer onorderquantity) {
    this.onorderquantity = onorderquantity;
  }


  public WarehouseListType onholdquantity(Integer onholdquantity) {
    this.onholdquantity = onholdquantity;
    return this;
  }

   /**
   * On hold quantity
   * @return onholdquantity
  **/
  @javax.annotation.Nullable
  public Integer getOnholdquantity() {
    return onholdquantity;
  }

  public void setOnholdquantity(Integer onholdquantity) {
    this.onholdquantity = onholdquantity;
  }


  public WarehouseListType etadate(String etadate) {
    this.etadate = etadate;
    return this;
  }

   /**
   * Get etadate
   * @return etadate
  **/
  @javax.annotation.Nullable
  public String getEtadate() {
    return etadate;
  }

  public void setEtadate(String etadate) {
    this.etadate = etadate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WarehouseListType warehouseListType = (WarehouseListType) o;
    return Objects.equals(this.warehouseid, warehouseListType.warehouseid) &&
        Objects.equals(this.warehousedescription, warehouseListType.warehousedescription) &&
        Objects.equals(this.availablequantity, warehouseListType.availablequantity) &&
        Objects.equals(this.onorderquantity, warehouseListType.onorderquantity) &&
        Objects.equals(this.onholdquantity, warehouseListType.onholdquantity) &&
        Objects.equals(this.etadate, warehouseListType.etadate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(warehouseid, warehousedescription, availablequantity, onorderquantity, onholdquantity, etadate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WarehouseListType {\n");
    sb.append("    warehouseid: ").append(toIndentedString(warehouseid)).append("\n");
    sb.append("    warehousedescription: ").append(toIndentedString(warehousedescription)).append("\n");
    sb.append("    availablequantity: ").append(toIndentedString(availablequantity)).append("\n");
    sb.append("    onorderquantity: ").append(toIndentedString(onorderquantity)).append("\n");
    sb.append("    onholdquantity: ").append(toIndentedString(onholdquantity)).append("\n");
    sb.append("    etadate: ").append(toIndentedString(etadate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("warehouseid");
    openapiFields.add("warehousedescription");
    openapiFields.add("availablequantity");
    openapiFields.add("onorderquantity");
    openapiFields.add("onholdquantity");
    openapiFields.add("etadate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to WarehouseListType
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!WarehouseListType.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WarehouseListType is not found in the empty JSON string", WarehouseListType.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!WarehouseListType.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `WarehouseListType` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("warehouseid") != null && !jsonObj.get("warehouseid").isJsonNull()) && !jsonObj.get("warehouseid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `warehouseid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("warehouseid").toString()));
      }
      if ((jsonObj.get("warehousedescription") != null && !jsonObj.get("warehousedescription").isJsonNull()) && !jsonObj.get("warehousedescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `warehousedescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("warehousedescription").toString()));
      }
      if ((jsonObj.get("etadate") != null && !jsonObj.get("etadate").isJsonNull()) && !jsonObj.get("etadate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `etadate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("etadate").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WarehouseListType.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WarehouseListType' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WarehouseListType> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WarehouseListType.class));

       return (TypeAdapter<T>) new TypeAdapter<WarehouseListType>() {
           @Override
           public void write(JsonWriter out, WarehouseListType value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public WarehouseListType read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of WarehouseListType given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of WarehouseListType
  * @throws IOException if the JSON string is invalid with respect to WarehouseListType
  */
  public static WarehouseListType fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WarehouseListType.class);
  }

 /**
  * Convert an instance of WarehouseListType to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

