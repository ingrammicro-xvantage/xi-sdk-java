/*
 * Reseller API
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package xiresellers.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import xiresellers.client.JSON;

/**
 * OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-19T11:54:36.350241Z[Etc/UTC]")
public class OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress {
  public static final String SERIALIZED_NAME_SUFFIX = "suffix";
  @SerializedName(SERIALIZED_NAME_SUFFIX)
  private String suffix;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ATTENTION = "attention";
  @SerializedName(SERIALIZED_NAME_ATTENTION)
  private String attention;

  public static final String SERIALIZED_NAME_ADDRESSLINE1 = "addressline1";
  @SerializedName(SERIALIZED_NAME_ADDRESSLINE1)
  private String addressline1;

  public static final String SERIALIZED_NAME_ADDRESSLINE2 = "addressline2";
  @SerializedName(SERIALIZED_NAME_ADDRESSLINE2)
  private String addressline2;

  public static final String SERIALIZED_NAME_ADDRESSLINE3 = "addressline3";
  @SerializedName(SERIALIZED_NAME_ADDRESSLINE3)
  private String addressline3;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_POSTALCODE = "postalcode";
  @SerializedName(SERIALIZED_NAME_POSTALCODE)
  private String postalcode;

  public static final String SERIALIZED_NAME_COUNTRYCODE = "countrycode";
  @SerializedName(SERIALIZED_NAME_COUNTRYCODE)
  private String countrycode;

  public OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress() {
  }

  public OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress suffix(String suffix) {
    this.suffix = suffix;
    return this;
  }

   /**
   * Get suffix
   * @return suffix
  **/
  @javax.annotation.Nullable
  public String getSuffix() {
    return suffix;
  }

  public void setSuffix(String suffix) {
    this.suffix = suffix;
  }


  public OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress attention(String attention) {
    this.attention = attention;
    return this;
  }

   /**
   * Get attention
   * @return attention
  **/
  @javax.annotation.Nullable
  public String getAttention() {
    return attention;
  }

  public void setAttention(String attention) {
    this.attention = attention;
  }


  public OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress addressline1(String addressline1) {
    this.addressline1 = addressline1;
    return this;
  }

   /**
   * Get addressline1
   * @return addressline1
  **/
  @javax.annotation.Nullable
  public String getAddressline1() {
    return addressline1;
  }

  public void setAddressline1(String addressline1) {
    this.addressline1 = addressline1;
  }


  public OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress addressline2(String addressline2) {
    this.addressline2 = addressline2;
    return this;
  }

   /**
   * Get addressline2
   * @return addressline2
  **/
  @javax.annotation.Nullable
  public String getAddressline2() {
    return addressline2;
  }

  public void setAddressline2(String addressline2) {
    this.addressline2 = addressline2;
  }


  public OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress addressline3(String addressline3) {
    this.addressline3 = addressline3;
    return this;
  }

   /**
   * Get addressline3
   * @return addressline3
  **/
  @javax.annotation.Nullable
  public String getAddressline3() {
    return addressline3;
  }

  public void setAddressline3(String addressline3) {
    this.addressline3 = addressline3;
  }


  public OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress city(String city) {
    this.city = city;
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @javax.annotation.Nullable
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }


  public OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nullable
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }


  public OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress postalcode(String postalcode) {
    this.postalcode = postalcode;
    return this;
  }

   /**
   * Get postalcode
   * @return postalcode
  **/
  @javax.annotation.Nullable
  public String getPostalcode() {
    return postalcode;
  }

  public void setPostalcode(String postalcode) {
    this.postalcode = postalcode;
  }


  public OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress countrycode(String countrycode) {
    this.countrycode = countrycode;
    return this;
  }

   /**
   * Get countrycode
   * @return countrycode
  **/
  @javax.annotation.Nullable
  public String getCountrycode() {
    return countrycode;
  }

  public void setCountrycode(String countrycode) {
    this.countrycode = countrycode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress orderDetailResponseServiceresponseOrderdetailresponseBilltoaddress = (OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress) o;
    return Objects.equals(this.suffix, orderDetailResponseServiceresponseOrderdetailresponseBilltoaddress.suffix) &&
        Objects.equals(this.name, orderDetailResponseServiceresponseOrderdetailresponseBilltoaddress.name) &&
        Objects.equals(this.attention, orderDetailResponseServiceresponseOrderdetailresponseBilltoaddress.attention) &&
        Objects.equals(this.addressline1, orderDetailResponseServiceresponseOrderdetailresponseBilltoaddress.addressline1) &&
        Objects.equals(this.addressline2, orderDetailResponseServiceresponseOrderdetailresponseBilltoaddress.addressline2) &&
        Objects.equals(this.addressline3, orderDetailResponseServiceresponseOrderdetailresponseBilltoaddress.addressline3) &&
        Objects.equals(this.city, orderDetailResponseServiceresponseOrderdetailresponseBilltoaddress.city) &&
        Objects.equals(this.state, orderDetailResponseServiceresponseOrderdetailresponseBilltoaddress.state) &&
        Objects.equals(this.postalcode, orderDetailResponseServiceresponseOrderdetailresponseBilltoaddress.postalcode) &&
        Objects.equals(this.countrycode, orderDetailResponseServiceresponseOrderdetailresponseBilltoaddress.countrycode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(suffix, name, attention, addressline1, addressline2, addressline3, city, state, postalcode, countrycode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress {\n");
    sb.append("    suffix: ").append(toIndentedString(suffix)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    attention: ").append(toIndentedString(attention)).append("\n");
    sb.append("    addressline1: ").append(toIndentedString(addressline1)).append("\n");
    sb.append("    addressline2: ").append(toIndentedString(addressline2)).append("\n");
    sb.append("    addressline3: ").append(toIndentedString(addressline3)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    postalcode: ").append(toIndentedString(postalcode)).append("\n");
    sb.append("    countrycode: ").append(toIndentedString(countrycode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("suffix");
    openapiFields.add("name");
    openapiFields.add("attention");
    openapiFields.add("addressline1");
    openapiFields.add("addressline2");
    openapiFields.add("addressline3");
    openapiFields.add("city");
    openapiFields.add("state");
    openapiFields.add("postalcode");
    openapiFields.add("countrycode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress is not found in the empty JSON string", OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("suffix") != null && !jsonObj.get("suffix").isJsonNull()) && !jsonObj.get("suffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `suffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("suffix").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("attention") != null && !jsonObj.get("attention").isJsonNull()) && !jsonObj.get("attention").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `attention` to be a primitive type in the JSON string but got `%s`", jsonObj.get("attention").toString()));
      }
      if ((jsonObj.get("addressline1") != null && !jsonObj.get("addressline1").isJsonNull()) && !jsonObj.get("addressline1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressline1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressline1").toString()));
      }
      if ((jsonObj.get("addressline2") != null && !jsonObj.get("addressline2").isJsonNull()) && !jsonObj.get("addressline2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressline2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressline2").toString()));
      }
      if ((jsonObj.get("addressline3") != null && !jsonObj.get("addressline3").isJsonNull()) && !jsonObj.get("addressline3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressline3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressline3").toString()));
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      if ((jsonObj.get("postalcode") != null && !jsonObj.get("postalcode").isJsonNull()) && !jsonObj.get("postalcode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postalcode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postalcode").toString()));
      }
      if ((jsonObj.get("countrycode") != null && !jsonObj.get("countrycode").isJsonNull()) && !jsonObj.get("countrycode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countrycode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countrycode").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress>() {
           @Override
           public void write(JsonWriter out, OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress
  * @throws IOException if the JSON string is invalid with respect to OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress
  */
  public static OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress.class);
  }

 /**
  * Convert an instance of OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

