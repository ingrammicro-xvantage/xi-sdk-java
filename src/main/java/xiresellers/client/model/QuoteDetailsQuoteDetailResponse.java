/*
 * XI SDK Resellers
 * For Resellers. Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package xiresellers.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import xiresellers.client.model.QuoteDetailsQuoteDetailResponseResponsePreamble;
import xiresellers.client.model.QuoteDetailsQuoteDetailResponseRetrieveQuoteResponse;
import xiresellers.client.model.QuoteProductList;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import xiresellers.client.JSON;

/**
 * QuoteDetailsQuoteDetailResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-16T05:46:16.662413Z[Etc/UTC]")
public class QuoteDetailsQuoteDetailResponse {
  public static final String SERIALIZED_NAME_RESPONSE_PREAMBLE = "responsePreamble";
  @SerializedName(SERIALIZED_NAME_RESPONSE_PREAMBLE)
  private QuoteDetailsQuoteDetailResponseResponsePreamble responsePreamble;

  public static final String SERIALIZED_NAME_RETRIEVE_QUOTE_RESPONSE = "retrieveQuoteResponse";
  @SerializedName(SERIALIZED_NAME_RETRIEVE_QUOTE_RESPONSE)
  private QuoteDetailsQuoteDetailResponseRetrieveQuoteResponse retrieveQuoteResponse;

  public static final String SERIALIZED_NAME_QUOTE_PRODUCT_LIST = "quoteProductList";
  @SerializedName(SERIALIZED_NAME_QUOTE_PRODUCT_LIST)
  private List<QuoteProductList> quoteProductList;

  public static final String SERIALIZED_NAME_TOTAL_QUOTE_PRODUCT_COUNT = "totalQuoteProductCount";
  @SerializedName(SERIALIZED_NAME_TOTAL_QUOTE_PRODUCT_COUNT)
  private String totalQuoteProductCount;

  public static final String SERIALIZED_NAME_TOTAL_EXTENDED_MSRP = "totalExtendedMsrp";
  @SerializedName(SERIALIZED_NAME_TOTAL_EXTENDED_MSRP)
  private String totalExtendedMsrp;

  public static final String SERIALIZED_NAME_TOTAL_QUANTITY = "totalQuantity";
  @SerializedName(SERIALIZED_NAME_TOTAL_QUANTITY)
  private Integer totalQuantity;

  public static final String SERIALIZED_NAME_TOTAL_EXTENDED_QUOTE_PRICE = "totalExtendedQuotePrice";
  @SerializedName(SERIALIZED_NAME_TOTAL_EXTENDED_QUOTE_PRICE)
  private String totalExtendedQuotePrice;

  public QuoteDetailsQuoteDetailResponse() {
  }

  public QuoteDetailsQuoteDetailResponse responsePreamble(QuoteDetailsQuoteDetailResponseResponsePreamble responsePreamble) {
    this.responsePreamble = responsePreamble;
    return this;
  }

   /**
   * Get responsePreamble
   * @return responsePreamble
  **/
  @javax.annotation.Nullable
  public QuoteDetailsQuoteDetailResponseResponsePreamble getResponsePreamble() {
    return responsePreamble;
  }

  public void setResponsePreamble(QuoteDetailsQuoteDetailResponseResponsePreamble responsePreamble) {
    this.responsePreamble = responsePreamble;
  }


  public QuoteDetailsQuoteDetailResponse retrieveQuoteResponse(QuoteDetailsQuoteDetailResponseRetrieveQuoteResponse retrieveQuoteResponse) {
    this.retrieveQuoteResponse = retrieveQuoteResponse;
    return this;
  }

   /**
   * Get retrieveQuoteResponse
   * @return retrieveQuoteResponse
  **/
  @javax.annotation.Nullable
  public QuoteDetailsQuoteDetailResponseRetrieveQuoteResponse getRetrieveQuoteResponse() {
    return retrieveQuoteResponse;
  }

  public void setRetrieveQuoteResponse(QuoteDetailsQuoteDetailResponseRetrieveQuoteResponse retrieveQuoteResponse) {
    this.retrieveQuoteResponse = retrieveQuoteResponse;
  }


  public QuoteDetailsQuoteDetailResponse quoteProductList(List<QuoteProductList> quoteProductList) {
    this.quoteProductList = quoteProductList;
    return this;
  }

  public QuoteDetailsQuoteDetailResponse addQuoteProductListItem(QuoteProductList quoteProductListItem) {
    if (this.quoteProductList == null) {
      this.quoteProductList = new ArrayList<>();
    }
    this.quoteProductList.add(quoteProductListItem);
    return this;
  }

   /**
   * Get quoteProductList
   * @return quoteProductList
  **/
  @javax.annotation.Nullable
  public List<QuoteProductList> getQuoteProductList() {
    return quoteProductList;
  }

  public void setQuoteProductList(List<QuoteProductList> quoteProductList) {
    this.quoteProductList = quoteProductList;
  }


  public QuoteDetailsQuoteDetailResponse totalQuoteProductCount(String totalQuoteProductCount) {
    this.totalQuoteProductCount = totalQuoteProductCount;
    return this;
  }

   /**
   * Get totalQuoteProductCount
   * @return totalQuoteProductCount
  **/
  @javax.annotation.Nullable
  public String getTotalQuoteProductCount() {
    return totalQuoteProductCount;
  }

  public void setTotalQuoteProductCount(String totalQuoteProductCount) {
    this.totalQuoteProductCount = totalQuoteProductCount;
  }


  public QuoteDetailsQuoteDetailResponse totalExtendedMsrp(String totalExtendedMsrp) {
    this.totalExtendedMsrp = totalExtendedMsrp;
    return this;
  }

   /**
   * Get totalExtendedMsrp
   * @return totalExtendedMsrp
  **/
  @javax.annotation.Nullable
  public String getTotalExtendedMsrp() {
    return totalExtendedMsrp;
  }

  public void setTotalExtendedMsrp(String totalExtendedMsrp) {
    this.totalExtendedMsrp = totalExtendedMsrp;
  }


  public QuoteDetailsQuoteDetailResponse totalQuantity(Integer totalQuantity) {
    this.totalQuantity = totalQuantity;
    return this;
  }

   /**
   * Get totalQuantity
   * @return totalQuantity
  **/
  @javax.annotation.Nullable
  public Integer getTotalQuantity() {
    return totalQuantity;
  }

  public void setTotalQuantity(Integer totalQuantity) {
    this.totalQuantity = totalQuantity;
  }


  public QuoteDetailsQuoteDetailResponse totalExtendedQuotePrice(String totalExtendedQuotePrice) {
    this.totalExtendedQuotePrice = totalExtendedQuotePrice;
    return this;
  }

   /**
   * Get totalExtendedQuotePrice
   * @return totalExtendedQuotePrice
  **/
  @javax.annotation.Nullable
  public String getTotalExtendedQuotePrice() {
    return totalExtendedQuotePrice;
  }

  public void setTotalExtendedQuotePrice(String totalExtendedQuotePrice) {
    this.totalExtendedQuotePrice = totalExtendedQuotePrice;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QuoteDetailsQuoteDetailResponse quoteDetailsQuoteDetailResponse = (QuoteDetailsQuoteDetailResponse) o;
    return Objects.equals(this.responsePreamble, quoteDetailsQuoteDetailResponse.responsePreamble) &&
        Objects.equals(this.retrieveQuoteResponse, quoteDetailsQuoteDetailResponse.retrieveQuoteResponse) &&
        Objects.equals(this.quoteProductList, quoteDetailsQuoteDetailResponse.quoteProductList) &&
        Objects.equals(this.totalQuoteProductCount, quoteDetailsQuoteDetailResponse.totalQuoteProductCount) &&
        Objects.equals(this.totalExtendedMsrp, quoteDetailsQuoteDetailResponse.totalExtendedMsrp) &&
        Objects.equals(this.totalQuantity, quoteDetailsQuoteDetailResponse.totalQuantity) &&
        Objects.equals(this.totalExtendedQuotePrice, quoteDetailsQuoteDetailResponse.totalExtendedQuotePrice);
  }

  @Override
  public int hashCode() {
    return Objects.hash(responsePreamble, retrieveQuoteResponse, quoteProductList, totalQuoteProductCount, totalExtendedMsrp, totalQuantity, totalExtendedQuotePrice);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuoteDetailsQuoteDetailResponse {\n");
    sb.append("    responsePreamble: ").append(toIndentedString(responsePreamble)).append("\n");
    sb.append("    retrieveQuoteResponse: ").append(toIndentedString(retrieveQuoteResponse)).append("\n");
    sb.append("    quoteProductList: ").append(toIndentedString(quoteProductList)).append("\n");
    sb.append("    totalQuoteProductCount: ").append(toIndentedString(totalQuoteProductCount)).append("\n");
    sb.append("    totalExtendedMsrp: ").append(toIndentedString(totalExtendedMsrp)).append("\n");
    sb.append("    totalQuantity: ").append(toIndentedString(totalQuantity)).append("\n");
    sb.append("    totalExtendedQuotePrice: ").append(toIndentedString(totalExtendedQuotePrice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("responsePreamble");
    openapiFields.add("retrieveQuoteResponse");
    openapiFields.add("quoteProductList");
    openapiFields.add("totalQuoteProductCount");
    openapiFields.add("totalExtendedMsrp");
    openapiFields.add("totalQuantity");
    openapiFields.add("totalExtendedQuotePrice");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to QuoteDetailsQuoteDetailResponse
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!QuoteDetailsQuoteDetailResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in QuoteDetailsQuoteDetailResponse is not found in the empty JSON string", QuoteDetailsQuoteDetailResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!QuoteDetailsQuoteDetailResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `QuoteDetailsQuoteDetailResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `responsePreamble`
      if (jsonObj.get("responsePreamble") != null && !jsonObj.get("responsePreamble").isJsonNull()) {
        QuoteDetailsQuoteDetailResponseResponsePreamble.validateJsonElement(jsonObj.get("responsePreamble"));
      }
      // validate the optional field `retrieveQuoteResponse`
      if (jsonObj.get("retrieveQuoteResponse") != null && !jsonObj.get("retrieveQuoteResponse").isJsonNull()) {
        QuoteDetailsQuoteDetailResponseRetrieveQuoteResponse.validateJsonElement(jsonObj.get("retrieveQuoteResponse"));
      }
      if (jsonObj.get("quoteProductList") != null && !jsonObj.get("quoteProductList").isJsonNull()) {
        JsonArray jsonArrayquoteProductList = jsonObj.getAsJsonArray("quoteProductList");
        if (jsonArrayquoteProductList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("quoteProductList").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `quoteProductList` to be an array in the JSON string but got `%s`", jsonObj.get("quoteProductList").toString()));
          }

          // validate the optional field `quoteProductList` (array)
          for (int i = 0; i < jsonArrayquoteProductList.size(); i++) {
            QuoteProductList.validateJsonElement(jsonArrayquoteProductList.get(i));
          };
        }
      }
      if ((jsonObj.get("totalQuoteProductCount") != null && !jsonObj.get("totalQuoteProductCount").isJsonNull()) && !jsonObj.get("totalQuoteProductCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `totalQuoteProductCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("totalQuoteProductCount").toString()));
      }
      if ((jsonObj.get("totalExtendedMsrp") != null && !jsonObj.get("totalExtendedMsrp").isJsonNull()) && !jsonObj.get("totalExtendedMsrp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `totalExtendedMsrp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("totalExtendedMsrp").toString()));
      }
      if ((jsonObj.get("totalExtendedQuotePrice") != null && !jsonObj.get("totalExtendedQuotePrice").isJsonNull()) && !jsonObj.get("totalExtendedQuotePrice").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `totalExtendedQuotePrice` to be a primitive type in the JSON string but got `%s`", jsonObj.get("totalExtendedQuotePrice").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!QuoteDetailsQuoteDetailResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'QuoteDetailsQuoteDetailResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<QuoteDetailsQuoteDetailResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(QuoteDetailsQuoteDetailResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<QuoteDetailsQuoteDetailResponse>() {
           @Override
           public void write(JsonWriter out, QuoteDetailsQuoteDetailResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public QuoteDetailsQuoteDetailResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of QuoteDetailsQuoteDetailResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of QuoteDetailsQuoteDetailResponse
  * @throws IOException if the JSON string is invalid with respect to QuoteDetailsQuoteDetailResponse
  */
  public static QuoteDetailsQuoteDetailResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, QuoteDetailsQuoteDetailResponse.class);
  }

 /**
  * Convert an instance of QuoteDetailsQuoteDetailResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

