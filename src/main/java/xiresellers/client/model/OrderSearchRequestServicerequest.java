/*
 * Reseller API
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package xiresellers.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import xiresellers.client.model.OrderSearchRequestServicerequestOrderLookupRequest;
import xiresellers.client.model.OrderSearchRequestServicerequestRequestpreamble;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import xiresellers.client.JSON;

/**
 * OrderSearchRequestServicerequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-22T09:48:07.665984Z[Etc/UTC]")
public class OrderSearchRequestServicerequest {
  public static final String SERIALIZED_NAME_REQUESTPREAMBLE = "requestpreamble";
  @SerializedName(SERIALIZED_NAME_REQUESTPREAMBLE)
  private OrderSearchRequestServicerequestRequestpreamble requestpreamble;

  public static final String SERIALIZED_NAME_ORDER_LOOKUP_REQUEST = "orderLookupRequest";
  @SerializedName(SERIALIZED_NAME_ORDER_LOOKUP_REQUEST)
  private OrderSearchRequestServicerequestOrderLookupRequest orderLookupRequest;

  public OrderSearchRequestServicerequest() {
  }

  public OrderSearchRequestServicerequest requestpreamble(OrderSearchRequestServicerequestRequestpreamble requestpreamble) {
    this.requestpreamble = requestpreamble;
    return this;
  }

   /**
   * Get requestpreamble
   * @return requestpreamble
  **/
  @javax.annotation.Nonnull
  public OrderSearchRequestServicerequestRequestpreamble getRequestpreamble() {
    return requestpreamble;
  }

  public void setRequestpreamble(OrderSearchRequestServicerequestRequestpreamble requestpreamble) {
    this.requestpreamble = requestpreamble;
  }


  public OrderSearchRequestServicerequest orderLookupRequest(OrderSearchRequestServicerequestOrderLookupRequest orderLookupRequest) {
    this.orderLookupRequest = orderLookupRequest;
    return this;
  }

   /**
   * Get orderLookupRequest
   * @return orderLookupRequest
  **/
  @javax.annotation.Nullable
  public OrderSearchRequestServicerequestOrderLookupRequest getOrderLookupRequest() {
    return orderLookupRequest;
  }

  public void setOrderLookupRequest(OrderSearchRequestServicerequestOrderLookupRequest orderLookupRequest) {
    this.orderLookupRequest = orderLookupRequest;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderSearchRequestServicerequest orderSearchRequestServicerequest = (OrderSearchRequestServicerequest) o;
    return Objects.equals(this.requestpreamble, orderSearchRequestServicerequest.requestpreamble) &&
        Objects.equals(this.orderLookupRequest, orderSearchRequestServicerequest.orderLookupRequest);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestpreamble, orderLookupRequest);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderSearchRequestServicerequest {\n");
    sb.append("    requestpreamble: ").append(toIndentedString(requestpreamble)).append("\n");
    sb.append("    orderLookupRequest: ").append(toIndentedString(orderLookupRequest)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("requestpreamble");
    openapiFields.add("orderLookupRequest");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("requestpreamble");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to OrderSearchRequestServicerequest
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrderSearchRequestServicerequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderSearchRequestServicerequest is not found in the empty JSON string", OrderSearchRequestServicerequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrderSearchRequestServicerequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderSearchRequestServicerequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : OrderSearchRequestServicerequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `requestpreamble`
      OrderSearchRequestServicerequestRequestpreamble.validateJsonElement(jsonObj.get("requestpreamble"));
      // validate the optional field `orderLookupRequest`
      if (jsonObj.get("orderLookupRequest") != null && !jsonObj.get("orderLookupRequest").isJsonNull()) {
        OrderSearchRequestServicerequestOrderLookupRequest.validateJsonElement(jsonObj.get("orderLookupRequest"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderSearchRequestServicerequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderSearchRequestServicerequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderSearchRequestServicerequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderSearchRequestServicerequest.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderSearchRequestServicerequest>() {
           @Override
           public void write(JsonWriter out, OrderSearchRequestServicerequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderSearchRequestServicerequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OrderSearchRequestServicerequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OrderSearchRequestServicerequest
  * @throws IOException if the JSON string is invalid with respect to OrderSearchRequestServicerequest
  */
  public static OrderSearchRequestServicerequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderSearchRequestServicerequest.class);
  }

 /**
  * Convert an instance of OrderSearchRequestServicerequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

