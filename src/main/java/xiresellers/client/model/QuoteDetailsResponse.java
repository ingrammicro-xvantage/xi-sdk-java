/*
 * XI Sdk Resellers
 * For resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of API's and webhooks to craft a seamless journey for your customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package xiresellers.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import xiresellers.client.model.QuoteDetailsResponseAdditionalAttributesInner;
import xiresellers.client.model.QuoteDetailsResponseEndUserInfo;
import xiresellers.client.model.QuoteDetailsResponseProductsInner;
import xiresellers.client.model.QuoteDetailsResponseProductsInnerPriceExtraFeesDetailsInner;
import xiresellers.client.model.QuoteDetailsResponseResellerInfo;
import xiresellers.client.model.QuoteDetailsResponseShippingInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import xiresellers.client.JSON;

/**
 * QuoteDetailsResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-04T09:04:53.013432Z[Etc/UTC]", comments = "Generator version: 7.9.0")
public class QuoteDetailsResponse {
  public static final String SERIALIZED_NAME_QUOTE_NAME = "quoteName";
  @SerializedName(SERIALIZED_NAME_QUOTE_NAME)
  private String quoteName;

  public static final String SERIALIZED_NAME_QUOTE_NUMBER = "quoteNumber";
  @SerializedName(SERIALIZED_NAME_QUOTE_NUMBER)
  private String quoteNumber;

  public static final String SERIALIZED_NAME_QUOTE_GUID = "quoteGuid";
  @SerializedName(SERIALIZED_NAME_QUOTE_GUID)
  private String quoteGuid;

  public static final String SERIALIZED_NAME_REVISION = "revision";
  @SerializedName(SERIALIZED_NAME_REVISION)
  private String revision;

  public static final String SERIALIZED_NAME_INGRAM_QUOTE_DATE = "ingramQuoteDate";
  @SerializedName(SERIALIZED_NAME_INGRAM_QUOTE_DATE)
  private String ingramQuoteDate;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_DATE = "lastModifiedDate";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_DATE)
  private String lastModifiedDate;

  public static final String SERIALIZED_NAME_INGRAM_QUOTE_EXPIRY_DATE = "ingramQuoteExpiryDate";
  @SerializedName(SERIALIZED_NAME_INGRAM_QUOTE_EXPIRY_DATE)
  private String ingramQuoteExpiryDate;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currencyCode";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_SPECIAL_BID_ID = "specialBidId";
  @SerializedName(SERIALIZED_NAME_SPECIAL_BID_ID)
  private String specialBidId;

  public static final String SERIALIZED_NAME_SPECIAL_BID_EFFECTIVE_DATE = "specialBidEffectiveDate";
  @SerializedName(SERIALIZED_NAME_SPECIAL_BID_EFFECTIVE_DATE)
  private String specialBidEffectiveDate;

  public static final String SERIALIZED_NAME_SPECIAL_BID_EXPIRATION_DATE = "specialBidExpirationDate";
  @SerializedName(SERIALIZED_NAME_SPECIAL_BID_EXPIRATION_DATE)
  private String specialBidExpirationDate;

  public static final String SERIALIZED_NAME_VENDOR_QUOTE_NUMBER = "vendorQuoteNumber";
  @SerializedName(SERIALIZED_NAME_VENDOR_QUOTE_NUMBER)
  private String vendorQuoteNumber;

  public static final String SERIALIZED_NAME_IS_PARTIAL_ORDER_ALLOWED = "isPartialOrderAllowed";
  @SerializedName(SERIALIZED_NAME_IS_PARTIAL_ORDER_ALLOWED)
  private Boolean isPartialOrderAllowed;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_STATUS_REASON = "statusReason";
  @SerializedName(SERIALIZED_NAME_STATUS_REASON)
  private String statusReason;

  public static final String SERIALIZED_NAME_CLOSING_REASON = "closingReason";
  @SerializedName(SERIALIZED_NAME_CLOSING_REASON)
  private String closingReason;

  public static final String SERIALIZED_NAME_DATE_CLOSED = "dateClosed";
  @SerializedName(SERIALIZED_NAME_DATE_CLOSED)
  private String dateClosed;

  public static final String SERIALIZED_NAME_CUSTOMER_NEED = "customerNeed";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_NEED)
  private String customerNeed;

  public static final String SERIALIZED_NAME_PROPOSED_SOLUTION = "proposedSolution";
  @SerializedName(SERIALIZED_NAME_PROPOSED_SOLUTION)
  private String proposedSolution;

  public static final String SERIALIZED_NAME_INTRO_PREAMBLE = "introPreamble";
  @SerializedName(SERIALIZED_NAME_INTRO_PREAMBLE)
  private String introPreamble;

  public static final String SERIALIZED_NAME_PURCHASE_INSTRUCTIONS = "purchaseInstructions";
  @SerializedName(SERIALIZED_NAME_PURCHASE_INSTRUCTIONS)
  private String purchaseInstructions;

  public static final String SERIALIZED_NAME_LEGAL_TERMS = "legalTerms";
  @SerializedName(SERIALIZED_NAME_LEGAL_TERMS)
  private String legalTerms;

  public static final String SERIALIZED_NAME_QUOTE_TYPE = "quoteType";
  @SerializedName(SERIALIZED_NAME_QUOTE_TYPE)
  private String quoteType;

  public static final String SERIALIZED_NAME_LEASE_INFO = "leaseInfo";
  @SerializedName(SERIALIZED_NAME_LEASE_INFO)
  private String leaseInfo;

  public static final String SERIALIZED_NAME_LEASING_INSTRUCTIONS = "leasingInstructions";
  @SerializedName(SERIALIZED_NAME_LEASING_INSTRUCTIONS)
  private String leasingInstructions;

  public static final String SERIALIZED_NAME_IM_WAREHOUSE = "imWarehouse";
  @SerializedName(SERIALIZED_NAME_IM_WAREHOUSE)
  private String imWarehouse;

  public static final String SERIALIZED_NAME_IM_WAREHOUSE_GST_NUMBER = "imWarehouseGstNumber";
  @SerializedName(SERIALIZED_NAME_IM_WAREHOUSE_GST_NUMBER)
  private String imWarehouseGstNumber;

  public static final String SERIALIZED_NAME_PAYMENT_TERMS_NAME = "paymentTermsName";
  @SerializedName(SERIALIZED_NAME_PAYMENT_TERMS_NAME)
  private String paymentTermsName;

  public static final String SERIALIZED_NAME_RESELLER_INFO = "resellerInfo";
  @SerializedName(SERIALIZED_NAME_RESELLER_INFO)
  private QuoteDetailsResponseResellerInfo resellerInfo;

  public static final String SERIALIZED_NAME_END_USER_INFO = "endUserInfo";
  @SerializedName(SERIALIZED_NAME_END_USER_INFO)
  private QuoteDetailsResponseEndUserInfo endUserInfo;

  public static final String SERIALIZED_NAME_SHIPPING_INFO = "shippingInfo";
  @SerializedName(SERIALIZED_NAME_SHIPPING_INFO)
  private QuoteDetailsResponseShippingInfo shippingInfo;

  public static final String SERIALIZED_NAME_PRODUCTS = "products";
  @SerializedName(SERIALIZED_NAME_PRODUCTS)
  private List<QuoteDetailsResponseProductsInner> products = new ArrayList<>();

  public static final String SERIALIZED_NAME_PRODUCTS_COUNT = "productsCount";
  @SerializedName(SERIALIZED_NAME_PRODUCTS_COUNT)
  private Integer productsCount;

  public static final String SERIALIZED_NAME_EXTENDED_MSRP_TOTAL = "extendedMsrpTotal";
  @SerializedName(SERIALIZED_NAME_EXTENDED_MSRP_TOTAL)
  private BigDecimal extendedMsrpTotal;

  public static final String SERIALIZED_NAME_QUANTITY_TOTAL = "quantityTotal";
  @SerializedName(SERIALIZED_NAME_QUANTITY_TOTAL)
  private Integer quantityTotal;

  public static final String SERIALIZED_NAME_EXTRA_FEES_TOTAL = "extraFeesTotal";
  @SerializedName(SERIALIZED_NAME_EXTRA_FEES_TOTAL)
  private BigDecimal extraFeesTotal;

  public static final String SERIALIZED_NAME_EXTRA_FEES_TOTAL_DETAILS = "extraFeesTotalDetails";
  @SerializedName(SERIALIZED_NAME_EXTRA_FEES_TOTAL_DETAILS)
  private List<QuoteDetailsResponseProductsInnerPriceExtraFeesDetailsInner> extraFeesTotalDetails = new ArrayList<>();

  public static final String SERIALIZED_NAME_TAX_TOTAL = "taxTotal";
  @SerializedName(SERIALIZED_NAME_TAX_TOTAL)
  private BigDecimal taxTotal;

  public static final String SERIALIZED_NAME_EXTENDED_QUOTE_PRICE_TOTAL = "extendedQuotePriceTotal";
  @SerializedName(SERIALIZED_NAME_EXTENDED_QUOTE_PRICE_TOTAL)
  private BigDecimal extendedQuotePriceTotal;

  public static final String SERIALIZED_NAME_FREIGHT_AMOUNT = "freightAmount";
  @SerializedName(SERIALIZED_NAME_FREIGHT_AMOUNT)
  private BigDecimal freightAmount;

  public static final String SERIALIZED_NAME_TOTAL_QUOTE_AMOUNT = "totalQuoteAmount";
  @SerializedName(SERIALIZED_NAME_TOTAL_QUOTE_AMOUNT)
  private String totalQuoteAmount;

  public static final String SERIALIZED_NAME_ADDITIONAL_ATTRIBUTES = "additionalAttributes";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_ATTRIBUTES)
  private List<QuoteDetailsResponseAdditionalAttributesInner> additionalAttributes = new ArrayList<>();

  public QuoteDetailsResponse() {
  }

  public QuoteDetailsResponse quoteName(String quoteName) {
    this.quoteName = quoteName;
    return this;
  }

  /**
   * Quote Name given to quote by sales team or system generated.  Generally used as a reference to identify the quote.
   * @return quoteName
   */
  @javax.annotation.Nullable
  public String getQuoteName() {
    return quoteName;
  }

  public void setQuoteName(String quoteName) {
    this.quoteName = quoteName;
  }


  public QuoteDetailsResponse quoteNumber(String quoteNumber) {
    this.quoteNumber = quoteNumber;
    return this;
  }

  /**
   * Unique identifier generated by Ingram Micro&#39;s CRM specific to each quote.  When applying a filter to the quoteNumber and including a partial quote number in the filter, all quotes containing any information included in the filter can be retrieved as a subset of all available customer quotes.
   * @return quoteNumber
   */
  @javax.annotation.Nullable
  public String getQuoteNumber() {
    return quoteNumber;
  }

  public void setQuoteNumber(String quoteNumber) {
    this.quoteNumber = quoteNumber;
  }


  public QuoteDetailsResponse quoteGuid(String quoteGuid) {
    this.quoteGuid = quoteGuid;
    return this;
  }

  /**
   * Get quoteGuid
   * @return quoteGuid
   */
  @javax.annotation.Nullable
  public String getQuoteGuid() {
    return quoteGuid;
  }

  public void setQuoteGuid(String quoteGuid) {
    this.quoteGuid = quoteGuid;
  }


  public QuoteDetailsResponse revision(String revision) {
    this.revision = revision;
    return this;
  }

  /**
   * When a quote has been revised and updated, the quote number remains the same throughout the lifecycle of the quote, however, a Revision number is updated for each revision of the quote.  The revision numbers is associated with the Unique Quote Number.
   * @return revision
   */
  @javax.annotation.Nullable
  public String getRevision() {
    return revision;
  }

  public void setRevision(String revision) {
    this.revision = revision;
  }


  public QuoteDetailsResponse ingramQuoteDate(String ingramQuoteDate) {
    this.ingramQuoteDate = ingramQuoteDate;
    return this;
  }

  /**
   * Date the Quote was initially Created.
   * @return ingramQuoteDate
   */
  @javax.annotation.Nullable
  public String getIngramQuoteDate() {
    return ingramQuoteDate;
  }

  public void setIngramQuoteDate(String ingramQuoteDate) {
    this.ingramQuoteDate = ingramQuoteDate;
  }


  public QuoteDetailsResponse lastModifiedDate(String lastModifiedDate) {
    this.lastModifiedDate = lastModifiedDate;
    return this;
  }

  /**
   * Date the Quote was last updated or modified.
   * @return lastModifiedDate
   */
  @javax.annotation.Nullable
  public String getLastModifiedDate() {
    return lastModifiedDate;
  }

  public void setLastModifiedDate(String lastModifiedDate) {
    this.lastModifiedDate = lastModifiedDate;
  }


  public QuoteDetailsResponse ingramQuoteExpiryDate(String ingramQuoteExpiryDate) {
    this.ingramQuoteExpiryDate = ingramQuoteExpiryDate;
    return this;
  }

  /**
   * Quote expiration date.
   * @return ingramQuoteExpiryDate
   */
  @javax.annotation.Nullable
  public String getIngramQuoteExpiryDate() {
    return ingramQuoteExpiryDate;
  }

  public void setIngramQuoteExpiryDate(String ingramQuoteExpiryDate) {
    this.ingramQuoteExpiryDate = ingramQuoteExpiryDate;
  }


  public QuoteDetailsResponse currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

  /**
   * Three letter currency code.
   * @return currencyCode
   */
  @javax.annotation.Nullable
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }


  public QuoteDetailsResponse specialBidId(String specialBidId) {
    this.specialBidId = specialBidId;
    return this;
  }

  /**
   * Price discount identifyer to specify  a pricing discount that has been applied to the quote. If present - the priceDeviationStartDate and priceDeviationExpiryDate must be presented. Cisco refers to this as a Dart
   * @return specialBidId
   */
  @javax.annotation.Nullable
  public String getSpecialBidId() {
    return specialBidId;
  }

  public void setSpecialBidId(String specialBidId) {
    this.specialBidId = specialBidId;
  }


  public QuoteDetailsResponse specialBidEffectiveDate(String specialBidEffectiveDate) {
    this.specialBidEffectiveDate = specialBidEffectiveDate;
    return this;
  }

  /**
   * If price discount has been applied to the quote - the starting date the discount begins.
   * @return specialBidEffectiveDate
   */
  @javax.annotation.Nullable
  public String getSpecialBidEffectiveDate() {
    return specialBidEffectiveDate;
  }

  public void setSpecialBidEffectiveDate(String specialBidEffectiveDate) {
    this.specialBidEffectiveDate = specialBidEffectiveDate;
  }


  public QuoteDetailsResponse specialBidExpirationDate(String specialBidExpirationDate) {
    this.specialBidExpirationDate = specialBidExpirationDate;
    return this;
  }

  /**
   * If a price discount has been applied to the quote - The date the discount expires and will no longer be applicable.
   * @return specialBidExpirationDate
   */
  @javax.annotation.Nullable
  public String getSpecialBidExpirationDate() {
    return specialBidExpirationDate;
  }

  public void setSpecialBidExpirationDate(String specialBidExpirationDate) {
    this.specialBidExpirationDate = specialBidExpirationDate;
  }


  public QuoteDetailsResponse vendorQuoteNumber(String vendorQuoteNumber) {
    this.vendorQuoteNumber = vendorQuoteNumber;
    return this;
  }

  /**
   * Get vendorQuoteNumber
   * @return vendorQuoteNumber
   */
  @javax.annotation.Nullable
  public String getVendorQuoteNumber() {
    return vendorQuoteNumber;
  }

  public void setVendorQuoteNumber(String vendorQuoteNumber) {
    this.vendorQuoteNumber = vendorQuoteNumber;
  }


  public QuoteDetailsResponse isPartialOrderAllowed(Boolean isPartialOrderAllowed) {
    this.isPartialOrderAllowed = isPartialOrderAllowed;
    return this;
  }

  /**
   * Get isPartialOrderAllowed
   * @return isPartialOrderAllowed
   */
  @javax.annotation.Nullable
  public Boolean getIsPartialOrderAllowed() {
    return isPartialOrderAllowed;
  }

  public void setIsPartialOrderAllowed(Boolean isPartialOrderAllowed) {
    this.isPartialOrderAllowed = isPartialOrderAllowed;
  }


  public QuoteDetailsResponse status(String status) {
    this.status = status;
    return this;
  }

  /**
   * This refers to the primary status of the quote.  API responses will return
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public QuoteDetailsResponse statusReason(String statusReason) {
    this.statusReason = statusReason;
    return this;
  }

  /**
   * Get statusReason
   * @return statusReason
   */
  @javax.annotation.Nullable
  public String getStatusReason() {
    return statusReason;
  }

  public void setStatusReason(String statusReason) {
    this.statusReason = statusReason;
  }


  public QuoteDetailsResponse closingReason(String closingReason) {
    this.closingReason = closingReason;
    return this;
  }

  /**
   * Closing Reason for quote.
   * @return closingReason
   */
  @javax.annotation.Nullable
  public String getClosingReason() {
    return closingReason;
  }

  public void setClosingReason(String closingReason) {
    this.closingReason = closingReason;
  }


  public QuoteDetailsResponse dateClosed(String dateClosed) {
    this.dateClosed = dateClosed;
    return this;
  }

  /**
   * Get dateClosed
   * @return dateClosed
   */
  @javax.annotation.Nullable
  public String getDateClosed() {
    return dateClosed;
  }

  public void setDateClosed(String dateClosed) {
    this.dateClosed = dateClosed;
  }


  public QuoteDetailsResponse customerNeed(String customerNeed) {
    this.customerNeed = customerNeed;
    return this;
  }

  /**
   * Details related to the customer&#39;s request for the quote entered by the sales representative or system generated.
   * @return customerNeed
   */
  @javax.annotation.Nullable
  public String getCustomerNeed() {
    return customerNeed;
  }

  public void setCustomerNeed(String customerNeed) {
    this.customerNeed = customerNeed;
  }


  public QuoteDetailsResponse proposedSolution(String proposedSolution) {
    this.proposedSolution = proposedSolution;
    return this;
  }

  /**
   * Ingram Micro proposed solution and summary of quote.
   * @return proposedSolution
   */
  @javax.annotation.Nullable
  public String getProposedSolution() {
    return proposedSolution;
  }

  public void setProposedSolution(String proposedSolution) {
    this.proposedSolution = proposedSolution;
  }


  public QuoteDetailsResponse introPreamble(String introPreamble) {
    this.introPreamble = introPreamble;
    return this;
  }

  /**
   * Introductory paragraph included in each quote.  Legally required - must be included when presenting the quote details.
   * @return introPreamble
   */
  @javax.annotation.Nullable
  public String getIntroPreamble() {
    return introPreamble;
  }

  public void setIntroPreamble(String introPreamble) {
    this.introPreamble = introPreamble;
  }


  public QuoteDetailsResponse purchaseInstructions(String purchaseInstructions) {
    this.purchaseInstructions = purchaseInstructions;
    return this;
  }

  /**
   * Purchase instructions.  Legally required - must be included when presenting the quote details.
   * @return purchaseInstructions
   */
  @javax.annotation.Nullable
  public String getPurchaseInstructions() {
    return purchaseInstructions;
  }

  public void setPurchaseInstructions(String purchaseInstructions) {
    this.purchaseInstructions = purchaseInstructions;
  }


  public QuoteDetailsResponse legalTerms(String legalTerms) {
    this.legalTerms = legalTerms;
    return this;
  }

  /**
   * Legal terms -  Legally required - must be included when presenting the quote details.
   * @return legalTerms
   */
  @javax.annotation.Nullable
  public String getLegalTerms() {
    return legalTerms;
  }

  public void setLegalTerms(String legalTerms) {
    this.legalTerms = legalTerms;
  }


  public QuoteDetailsResponse quoteType(String quoteType) {
    this.quoteType = quoteType;
    return this;
  }

  /**
   * Get quoteType
   * @return quoteType
   */
  @javax.annotation.Nullable
  public String getQuoteType() {
    return quoteType;
  }

  public void setQuoteType(String quoteType) {
    this.quoteType = quoteType;
  }


  public QuoteDetailsResponse leaseInfo(String leaseInfo) {
    this.leaseInfo = leaseInfo;
    return this;
  }

  /**
   * Lease information.
   * @return leaseInfo
   */
  @javax.annotation.Nullable
  public String getLeaseInfo() {
    return leaseInfo;
  }

  public void setLeaseInfo(String leaseInfo) {
    this.leaseInfo = leaseInfo;
  }


  public QuoteDetailsResponse leasingInstructions(String leasingInstructions) {
    this.leasingInstructions = leasingInstructions;
    return this;
  }

  /**
   * Leasing information
   * @return leasingInstructions
   */
  @javax.annotation.Nullable
  public String getLeasingInstructions() {
    return leasingInstructions;
  }

  public void setLeasingInstructions(String leasingInstructions) {
    this.leasingInstructions = leasingInstructions;
  }


  public QuoteDetailsResponse imWarehouse(String imWarehouse) {
    this.imWarehouse = imWarehouse;
    return this;
  }

  /**
   * Warehouse name and Address
   * @return imWarehouse
   */
  @javax.annotation.Nullable
  public String getImWarehouse() {
    return imWarehouse;
  }

  public void setImWarehouse(String imWarehouse) {
    this.imWarehouse = imWarehouse;
  }


  public QuoteDetailsResponse imWarehouseGstNumber(String imWarehouseGstNumber) {
    this.imWarehouseGstNumber = imWarehouseGstNumber;
    return this;
  }

  /**
   * Warehouse GST Number
   * @return imWarehouseGstNumber
   */
  @javax.annotation.Nullable
  public String getImWarehouseGstNumber() {
    return imWarehouseGstNumber;
  }

  public void setImWarehouseGstNumber(String imWarehouseGstNumber) {
    this.imWarehouseGstNumber = imWarehouseGstNumber;
  }


  public QuoteDetailsResponse paymentTermsName(String paymentTermsName) {
    this.paymentTermsName = paymentTermsName;
    return this;
  }

  /**
   * Get paymentTermsName
   * @return paymentTermsName
   */
  @javax.annotation.Nullable
  public String getPaymentTermsName() {
    return paymentTermsName;
  }

  public void setPaymentTermsName(String paymentTermsName) {
    this.paymentTermsName = paymentTermsName;
  }


  public QuoteDetailsResponse resellerInfo(QuoteDetailsResponseResellerInfo resellerInfo) {
    this.resellerInfo = resellerInfo;
    return this;
  }

  /**
   * Get resellerInfo
   * @return resellerInfo
   */
  @javax.annotation.Nullable
  public QuoteDetailsResponseResellerInfo getResellerInfo() {
    return resellerInfo;
  }

  public void setResellerInfo(QuoteDetailsResponseResellerInfo resellerInfo) {
    this.resellerInfo = resellerInfo;
  }


  public QuoteDetailsResponse endUserInfo(QuoteDetailsResponseEndUserInfo endUserInfo) {
    this.endUserInfo = endUserInfo;
    return this;
  }

  /**
   * Get endUserInfo
   * @return endUserInfo
   */
  @javax.annotation.Nullable
  public QuoteDetailsResponseEndUserInfo getEndUserInfo() {
    return endUserInfo;
  }

  public void setEndUserInfo(QuoteDetailsResponseEndUserInfo endUserInfo) {
    this.endUserInfo = endUserInfo;
  }


  public QuoteDetailsResponse shippingInfo(QuoteDetailsResponseShippingInfo shippingInfo) {
    this.shippingInfo = shippingInfo;
    return this;
  }

  /**
   * Get shippingInfo
   * @return shippingInfo
   */
  @javax.annotation.Nullable
  public QuoteDetailsResponseShippingInfo getShippingInfo() {
    return shippingInfo;
  }

  public void setShippingInfo(QuoteDetailsResponseShippingInfo shippingInfo) {
    this.shippingInfo = shippingInfo;
  }


  public QuoteDetailsResponse products(List<QuoteDetailsResponseProductsInner> products) {
    this.products = products;
    return this;
  }

  public QuoteDetailsResponse addProductsItem(QuoteDetailsResponseProductsInner productsItem) {
    if (this.products == null) {
      this.products = new ArrayList<>();
    }
    this.products.add(productsItem);
    return this;
  }

  /**
   * Get products
   * @return products
   */
  @javax.annotation.Nullable
  public List<QuoteDetailsResponseProductsInner> getProducts() {
    return products;
  }

  public void setProducts(List<QuoteDetailsResponseProductsInner> products) {
    this.products = products;
  }


  public QuoteDetailsResponse productsCount(Integer productsCount) {
    this.productsCount = productsCount;
    return this;
  }

  /**
   * Total number of products included in the quote
   * @return productsCount
   */
  @javax.annotation.Nullable
  public Integer getProductsCount() {
    return productsCount;
  }

  public void setProductsCount(Integer productsCount) {
    this.productsCount = productsCount;
  }


  public QuoteDetailsResponse extendedMsrpTotal(BigDecimal extendedMsrpTotal) {
    this.extendedMsrpTotal = extendedMsrpTotal;
    return this;
  }

  /**
   * Total extended MSRP for all products included in the quote
   * @return extendedMsrpTotal
   */
  @javax.annotation.Nullable
  public BigDecimal getExtendedMsrpTotal() {
    return extendedMsrpTotal;
  }

  public void setExtendedMsrpTotal(BigDecimal extendedMsrpTotal) {
    this.extendedMsrpTotal = extendedMsrpTotal;
  }


  public QuoteDetailsResponse quantityTotal(Integer quantityTotal) {
    this.quantityTotal = quantityTotal;
    return this;
  }

  /**
   * Total quantity of all items in the quote.
   * @return quantityTotal
   */
  @javax.annotation.Nullable
  public Integer getQuantityTotal() {
    return quantityTotal;
  }

  public void setQuantityTotal(Integer quantityTotal) {
    this.quantityTotal = quantityTotal;
  }


  public QuoteDetailsResponse extraFeesTotal(BigDecimal extraFeesTotal) {
    this.extraFeesTotal = extraFeesTotal;
    return this;
  }

  /**
   * Get extraFeesTotal
   * @return extraFeesTotal
   */
  @javax.annotation.Nullable
  public BigDecimal getExtraFeesTotal() {
    return extraFeesTotal;
  }

  public void setExtraFeesTotal(BigDecimal extraFeesTotal) {
    this.extraFeesTotal = extraFeesTotal;
  }


  public QuoteDetailsResponse extraFeesTotalDetails(List<QuoteDetailsResponseProductsInnerPriceExtraFeesDetailsInner> extraFeesTotalDetails) {
    this.extraFeesTotalDetails = extraFeesTotalDetails;
    return this;
  }

  public QuoteDetailsResponse addExtraFeesTotalDetailsItem(QuoteDetailsResponseProductsInnerPriceExtraFeesDetailsInner extraFeesTotalDetailsItem) {
    if (this.extraFeesTotalDetails == null) {
      this.extraFeesTotalDetails = new ArrayList<>();
    }
    this.extraFeesTotalDetails.add(extraFeesTotalDetailsItem);
    return this;
  }

  /**
   * Get extraFeesTotalDetails
   * @return extraFeesTotalDetails
   */
  @javax.annotation.Nullable
  public List<QuoteDetailsResponseProductsInnerPriceExtraFeesDetailsInner> getExtraFeesTotalDetails() {
    return extraFeesTotalDetails;
  }

  public void setExtraFeesTotalDetails(List<QuoteDetailsResponseProductsInnerPriceExtraFeesDetailsInner> extraFeesTotalDetails) {
    this.extraFeesTotalDetails = extraFeesTotalDetails;
  }


  public QuoteDetailsResponse taxTotal(BigDecimal taxTotal) {
    this.taxTotal = taxTotal;
    return this;
  }

  /**
   * Get taxTotal
   * @return taxTotal
   */
  @javax.annotation.Nullable
  public BigDecimal getTaxTotal() {
    return taxTotal;
  }

  public void setTaxTotal(BigDecimal taxTotal) {
    this.taxTotal = taxTotal;
  }


  public QuoteDetailsResponse extendedQuotePriceTotal(BigDecimal extendedQuotePriceTotal) {
    this.extendedQuotePriceTotal = extendedQuotePriceTotal;
    return this;
  }

  /**
   * Total amount of quoted price for all products in the quote including both solution products and suggested products.
   * @return extendedQuotePriceTotal
   */
  @javax.annotation.Nullable
  public BigDecimal getExtendedQuotePriceTotal() {
    return extendedQuotePriceTotal;
  }

  public void setExtendedQuotePriceTotal(BigDecimal extendedQuotePriceTotal) {
    this.extendedQuotePriceTotal = extendedQuotePriceTotal;
  }


  public QuoteDetailsResponse freightAmount(BigDecimal freightAmount) {
    this.freightAmount = freightAmount;
    return this;
  }

  /**
   * Get freightAmount
   * @return freightAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getFreightAmount() {
    return freightAmount;
  }

  public void setFreightAmount(BigDecimal freightAmount) {
    this.freightAmount = freightAmount;
  }


  public QuoteDetailsResponse totalQuoteAmount(String totalQuoteAmount) {
    this.totalQuoteAmount = totalQuoteAmount;
    return this;
  }

  /**
   * Get totalQuoteAmount
   * @return totalQuoteAmount
   */
  @javax.annotation.Nullable
  public String getTotalQuoteAmount() {
    return totalQuoteAmount;
  }

  public void setTotalQuoteAmount(String totalQuoteAmount) {
    this.totalQuoteAmount = totalQuoteAmount;
  }


  public QuoteDetailsResponse additionalAttributes(List<QuoteDetailsResponseAdditionalAttributesInner> additionalAttributes) {
    this.additionalAttributes = additionalAttributes;
    return this;
  }

  public QuoteDetailsResponse addAdditionalAttributesItem(QuoteDetailsResponseAdditionalAttributesInner additionalAttributesItem) {
    if (this.additionalAttributes == null) {
      this.additionalAttributes = new ArrayList<>();
    }
    this.additionalAttributes.add(additionalAttributesItem);
    return this;
  }

  /**
   * Get additionalAttributes
   * @return additionalAttributes
   */
  @javax.annotation.Nullable
  public List<QuoteDetailsResponseAdditionalAttributesInner> getAdditionalAttributes() {
    return additionalAttributes;
  }

  public void setAdditionalAttributes(List<QuoteDetailsResponseAdditionalAttributesInner> additionalAttributes) {
    this.additionalAttributes = additionalAttributes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QuoteDetailsResponse quoteDetailsResponse = (QuoteDetailsResponse) o;
    return Objects.equals(this.quoteName, quoteDetailsResponse.quoteName) &&
        Objects.equals(this.quoteNumber, quoteDetailsResponse.quoteNumber) &&
        Objects.equals(this.quoteGuid, quoteDetailsResponse.quoteGuid) &&
        Objects.equals(this.revision, quoteDetailsResponse.revision) &&
        Objects.equals(this.ingramQuoteDate, quoteDetailsResponse.ingramQuoteDate) &&
        Objects.equals(this.lastModifiedDate, quoteDetailsResponse.lastModifiedDate) &&
        Objects.equals(this.ingramQuoteExpiryDate, quoteDetailsResponse.ingramQuoteExpiryDate) &&
        Objects.equals(this.currencyCode, quoteDetailsResponse.currencyCode) &&
        Objects.equals(this.specialBidId, quoteDetailsResponse.specialBidId) &&
        Objects.equals(this.specialBidEffectiveDate, quoteDetailsResponse.specialBidEffectiveDate) &&
        Objects.equals(this.specialBidExpirationDate, quoteDetailsResponse.specialBidExpirationDate) &&
        Objects.equals(this.vendorQuoteNumber, quoteDetailsResponse.vendorQuoteNumber) &&
        Objects.equals(this.isPartialOrderAllowed, quoteDetailsResponse.isPartialOrderAllowed) &&
        Objects.equals(this.status, quoteDetailsResponse.status) &&
        Objects.equals(this.statusReason, quoteDetailsResponse.statusReason) &&
        Objects.equals(this.closingReason, quoteDetailsResponse.closingReason) &&
        Objects.equals(this.dateClosed, quoteDetailsResponse.dateClosed) &&
        Objects.equals(this.customerNeed, quoteDetailsResponse.customerNeed) &&
        Objects.equals(this.proposedSolution, quoteDetailsResponse.proposedSolution) &&
        Objects.equals(this.introPreamble, quoteDetailsResponse.introPreamble) &&
        Objects.equals(this.purchaseInstructions, quoteDetailsResponse.purchaseInstructions) &&
        Objects.equals(this.legalTerms, quoteDetailsResponse.legalTerms) &&
        Objects.equals(this.quoteType, quoteDetailsResponse.quoteType) &&
        Objects.equals(this.leaseInfo, quoteDetailsResponse.leaseInfo) &&
        Objects.equals(this.leasingInstructions, quoteDetailsResponse.leasingInstructions) &&
        Objects.equals(this.imWarehouse, quoteDetailsResponse.imWarehouse) &&
        Objects.equals(this.imWarehouseGstNumber, quoteDetailsResponse.imWarehouseGstNumber) &&
        Objects.equals(this.paymentTermsName, quoteDetailsResponse.paymentTermsName) &&
        Objects.equals(this.resellerInfo, quoteDetailsResponse.resellerInfo) &&
        Objects.equals(this.endUserInfo, quoteDetailsResponse.endUserInfo) &&
        Objects.equals(this.shippingInfo, quoteDetailsResponse.shippingInfo) &&
        Objects.equals(this.products, quoteDetailsResponse.products) &&
        Objects.equals(this.productsCount, quoteDetailsResponse.productsCount) &&
        Objects.equals(this.extendedMsrpTotal, quoteDetailsResponse.extendedMsrpTotal) &&
        Objects.equals(this.quantityTotal, quoteDetailsResponse.quantityTotal) &&
        Objects.equals(this.extraFeesTotal, quoteDetailsResponse.extraFeesTotal) &&
        Objects.equals(this.extraFeesTotalDetails, quoteDetailsResponse.extraFeesTotalDetails) &&
        Objects.equals(this.taxTotal, quoteDetailsResponse.taxTotal) &&
        Objects.equals(this.extendedQuotePriceTotal, quoteDetailsResponse.extendedQuotePriceTotal) &&
        Objects.equals(this.freightAmount, quoteDetailsResponse.freightAmount) &&
        Objects.equals(this.totalQuoteAmount, quoteDetailsResponse.totalQuoteAmount) &&
        Objects.equals(this.additionalAttributes, quoteDetailsResponse.additionalAttributes);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(quoteName, quoteNumber, quoteGuid, revision, ingramQuoteDate, lastModifiedDate, ingramQuoteExpiryDate, currencyCode, specialBidId, specialBidEffectiveDate, specialBidExpirationDate, vendorQuoteNumber, isPartialOrderAllowed, status, statusReason, closingReason, dateClosed, customerNeed, proposedSolution, introPreamble, purchaseInstructions, legalTerms, quoteType, leaseInfo, leasingInstructions, imWarehouse, imWarehouseGstNumber, paymentTermsName, resellerInfo, endUserInfo, shippingInfo, products, productsCount, extendedMsrpTotal, quantityTotal, extraFeesTotal, extraFeesTotalDetails, taxTotal, extendedQuotePriceTotal, freightAmount, totalQuoteAmount, additionalAttributes);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuoteDetailsResponse {\n");
    sb.append("    quoteName: ").append(toIndentedString(quoteName)).append("\n");
    sb.append("    quoteNumber: ").append(toIndentedString(quoteNumber)).append("\n");
    sb.append("    quoteGuid: ").append(toIndentedString(quoteGuid)).append("\n");
    sb.append("    revision: ").append(toIndentedString(revision)).append("\n");
    sb.append("    ingramQuoteDate: ").append(toIndentedString(ingramQuoteDate)).append("\n");
    sb.append("    lastModifiedDate: ").append(toIndentedString(lastModifiedDate)).append("\n");
    sb.append("    ingramQuoteExpiryDate: ").append(toIndentedString(ingramQuoteExpiryDate)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    specialBidId: ").append(toIndentedString(specialBidId)).append("\n");
    sb.append("    specialBidEffectiveDate: ").append(toIndentedString(specialBidEffectiveDate)).append("\n");
    sb.append("    specialBidExpirationDate: ").append(toIndentedString(specialBidExpirationDate)).append("\n");
    sb.append("    vendorQuoteNumber: ").append(toIndentedString(vendorQuoteNumber)).append("\n");
    sb.append("    isPartialOrderAllowed: ").append(toIndentedString(isPartialOrderAllowed)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusReason: ").append(toIndentedString(statusReason)).append("\n");
    sb.append("    closingReason: ").append(toIndentedString(closingReason)).append("\n");
    sb.append("    dateClosed: ").append(toIndentedString(dateClosed)).append("\n");
    sb.append("    customerNeed: ").append(toIndentedString(customerNeed)).append("\n");
    sb.append("    proposedSolution: ").append(toIndentedString(proposedSolution)).append("\n");
    sb.append("    introPreamble: ").append(toIndentedString(introPreamble)).append("\n");
    sb.append("    purchaseInstructions: ").append(toIndentedString(purchaseInstructions)).append("\n");
    sb.append("    legalTerms: ").append(toIndentedString(legalTerms)).append("\n");
    sb.append("    quoteType: ").append(toIndentedString(quoteType)).append("\n");
    sb.append("    leaseInfo: ").append(toIndentedString(leaseInfo)).append("\n");
    sb.append("    leasingInstructions: ").append(toIndentedString(leasingInstructions)).append("\n");
    sb.append("    imWarehouse: ").append(toIndentedString(imWarehouse)).append("\n");
    sb.append("    imWarehouseGstNumber: ").append(toIndentedString(imWarehouseGstNumber)).append("\n");
    sb.append("    paymentTermsName: ").append(toIndentedString(paymentTermsName)).append("\n");
    sb.append("    resellerInfo: ").append(toIndentedString(resellerInfo)).append("\n");
    sb.append("    endUserInfo: ").append(toIndentedString(endUserInfo)).append("\n");
    sb.append("    shippingInfo: ").append(toIndentedString(shippingInfo)).append("\n");
    sb.append("    products: ").append(toIndentedString(products)).append("\n");
    sb.append("    productsCount: ").append(toIndentedString(productsCount)).append("\n");
    sb.append("    extendedMsrpTotal: ").append(toIndentedString(extendedMsrpTotal)).append("\n");
    sb.append("    quantityTotal: ").append(toIndentedString(quantityTotal)).append("\n");
    sb.append("    extraFeesTotal: ").append(toIndentedString(extraFeesTotal)).append("\n");
    sb.append("    extraFeesTotalDetails: ").append(toIndentedString(extraFeesTotalDetails)).append("\n");
    sb.append("    taxTotal: ").append(toIndentedString(taxTotal)).append("\n");
    sb.append("    extendedQuotePriceTotal: ").append(toIndentedString(extendedQuotePriceTotal)).append("\n");
    sb.append("    freightAmount: ").append(toIndentedString(freightAmount)).append("\n");
    sb.append("    totalQuoteAmount: ").append(toIndentedString(totalQuoteAmount)).append("\n");
    sb.append("    additionalAttributes: ").append(toIndentedString(additionalAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("quoteName");
    openapiFields.add("quoteNumber");
    openapiFields.add("quoteGuid");
    openapiFields.add("revision");
    openapiFields.add("ingramQuoteDate");
    openapiFields.add("lastModifiedDate");
    openapiFields.add("ingramQuoteExpiryDate");
    openapiFields.add("currencyCode");
    openapiFields.add("specialBidId");
    openapiFields.add("specialBidEffectiveDate");
    openapiFields.add("specialBidExpirationDate");
    openapiFields.add("vendorQuoteNumber");
    openapiFields.add("isPartialOrderAllowed");
    openapiFields.add("status");
    openapiFields.add("statusReason");
    openapiFields.add("closingReason");
    openapiFields.add("dateClosed");
    openapiFields.add("customerNeed");
    openapiFields.add("proposedSolution");
    openapiFields.add("introPreamble");
    openapiFields.add("purchaseInstructions");
    openapiFields.add("legalTerms");
    openapiFields.add("quoteType");
    openapiFields.add("leaseInfo");
    openapiFields.add("leasingInstructions");
    openapiFields.add("imWarehouse");
    openapiFields.add("imWarehouseGstNumber");
    openapiFields.add("paymentTermsName");
    openapiFields.add("resellerInfo");
    openapiFields.add("endUserInfo");
    openapiFields.add("shippingInfo");
    openapiFields.add("products");
    openapiFields.add("productsCount");
    openapiFields.add("extendedMsrpTotal");
    openapiFields.add("quantityTotal");
    openapiFields.add("extraFeesTotal");
    openapiFields.add("extraFeesTotalDetails");
    openapiFields.add("taxTotal");
    openapiFields.add("extendedQuotePriceTotal");
    openapiFields.add("freightAmount");
    openapiFields.add("totalQuoteAmount");
    openapiFields.add("additionalAttributes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to QuoteDetailsResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!QuoteDetailsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in QuoteDetailsResponse is not found in the empty JSON string", QuoteDetailsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!QuoteDetailsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `QuoteDetailsResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("quoteName") != null && !jsonObj.get("quoteName").isJsonNull()) && !jsonObj.get("quoteName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `quoteName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("quoteName").toString()));
      }
      if ((jsonObj.get("quoteNumber") != null && !jsonObj.get("quoteNumber").isJsonNull()) && !jsonObj.get("quoteNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `quoteNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("quoteNumber").toString()));
      }
      if ((jsonObj.get("quoteGuid") != null && !jsonObj.get("quoteGuid").isJsonNull()) && !jsonObj.get("quoteGuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `quoteGuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("quoteGuid").toString()));
      }
      if ((jsonObj.get("revision") != null && !jsonObj.get("revision").isJsonNull()) && !jsonObj.get("revision").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `revision` to be a primitive type in the JSON string but got `%s`", jsonObj.get("revision").toString()));
      }
      if ((jsonObj.get("ingramQuoteDate") != null && !jsonObj.get("ingramQuoteDate").isJsonNull()) && !jsonObj.get("ingramQuoteDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ingramQuoteDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ingramQuoteDate").toString()));
      }
      if ((jsonObj.get("lastModifiedDate") != null && !jsonObj.get("lastModifiedDate").isJsonNull()) && !jsonObj.get("lastModifiedDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastModifiedDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastModifiedDate").toString()));
      }
      if ((jsonObj.get("ingramQuoteExpiryDate") != null && !jsonObj.get("ingramQuoteExpiryDate").isJsonNull()) && !jsonObj.get("ingramQuoteExpiryDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ingramQuoteExpiryDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ingramQuoteExpiryDate").toString()));
      }
      if ((jsonObj.get("currencyCode") != null && !jsonObj.get("currencyCode").isJsonNull()) && !jsonObj.get("currencyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyCode").toString()));
      }
      if ((jsonObj.get("specialBidId") != null && !jsonObj.get("specialBidId").isJsonNull()) && !jsonObj.get("specialBidId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `specialBidId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("specialBidId").toString()));
      }
      if ((jsonObj.get("specialBidEffectiveDate") != null && !jsonObj.get("specialBidEffectiveDate").isJsonNull()) && !jsonObj.get("specialBidEffectiveDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `specialBidEffectiveDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("specialBidEffectiveDate").toString()));
      }
      if ((jsonObj.get("specialBidExpirationDate") != null && !jsonObj.get("specialBidExpirationDate").isJsonNull()) && !jsonObj.get("specialBidExpirationDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `specialBidExpirationDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("specialBidExpirationDate").toString()));
      }
      if ((jsonObj.get("vendorQuoteNumber") != null && !jsonObj.get("vendorQuoteNumber").isJsonNull()) && !jsonObj.get("vendorQuoteNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vendorQuoteNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vendorQuoteNumber").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("statusReason") != null && !jsonObj.get("statusReason").isJsonNull()) && !jsonObj.get("statusReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `statusReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("statusReason").toString()));
      }
      if ((jsonObj.get("closingReason") != null && !jsonObj.get("closingReason").isJsonNull()) && !jsonObj.get("closingReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `closingReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("closingReason").toString()));
      }
      if ((jsonObj.get("dateClosed") != null && !jsonObj.get("dateClosed").isJsonNull()) && !jsonObj.get("dateClosed").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dateClosed` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dateClosed").toString()));
      }
      if ((jsonObj.get("customerNeed") != null && !jsonObj.get("customerNeed").isJsonNull()) && !jsonObj.get("customerNeed").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerNeed` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerNeed").toString()));
      }
      if ((jsonObj.get("proposedSolution") != null && !jsonObj.get("proposedSolution").isJsonNull()) && !jsonObj.get("proposedSolution").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `proposedSolution` to be a primitive type in the JSON string but got `%s`", jsonObj.get("proposedSolution").toString()));
      }
      if ((jsonObj.get("introPreamble") != null && !jsonObj.get("introPreamble").isJsonNull()) && !jsonObj.get("introPreamble").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `introPreamble` to be a primitive type in the JSON string but got `%s`", jsonObj.get("introPreamble").toString()));
      }
      if ((jsonObj.get("purchaseInstructions") != null && !jsonObj.get("purchaseInstructions").isJsonNull()) && !jsonObj.get("purchaseInstructions").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `purchaseInstructions` to be a primitive type in the JSON string but got `%s`", jsonObj.get("purchaseInstructions").toString()));
      }
      if ((jsonObj.get("legalTerms") != null && !jsonObj.get("legalTerms").isJsonNull()) && !jsonObj.get("legalTerms").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legalTerms` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legalTerms").toString()));
      }
      if ((jsonObj.get("quoteType") != null && !jsonObj.get("quoteType").isJsonNull()) && !jsonObj.get("quoteType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `quoteType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("quoteType").toString()));
      }
      if ((jsonObj.get("leaseInfo") != null && !jsonObj.get("leaseInfo").isJsonNull()) && !jsonObj.get("leaseInfo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `leaseInfo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("leaseInfo").toString()));
      }
      if ((jsonObj.get("leasingInstructions") != null && !jsonObj.get("leasingInstructions").isJsonNull()) && !jsonObj.get("leasingInstructions").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `leasingInstructions` to be a primitive type in the JSON string but got `%s`", jsonObj.get("leasingInstructions").toString()));
      }
      if ((jsonObj.get("imWarehouse") != null && !jsonObj.get("imWarehouse").isJsonNull()) && !jsonObj.get("imWarehouse").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `imWarehouse` to be a primitive type in the JSON string but got `%s`", jsonObj.get("imWarehouse").toString()));
      }
      if ((jsonObj.get("imWarehouseGstNumber") != null && !jsonObj.get("imWarehouseGstNumber").isJsonNull()) && !jsonObj.get("imWarehouseGstNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `imWarehouseGstNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("imWarehouseGstNumber").toString()));
      }
      if ((jsonObj.get("paymentTermsName") != null && !jsonObj.get("paymentTermsName").isJsonNull()) && !jsonObj.get("paymentTermsName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paymentTermsName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paymentTermsName").toString()));
      }
      // validate the optional field `resellerInfo`
      if (jsonObj.get("resellerInfo") != null && !jsonObj.get("resellerInfo").isJsonNull()) {
        QuoteDetailsResponseResellerInfo.validateJsonElement(jsonObj.get("resellerInfo"));
      }
      // validate the optional field `endUserInfo`
      if (jsonObj.get("endUserInfo") != null && !jsonObj.get("endUserInfo").isJsonNull()) {
        QuoteDetailsResponseEndUserInfo.validateJsonElement(jsonObj.get("endUserInfo"));
      }
      // validate the optional field `shippingInfo`
      if (jsonObj.get("shippingInfo") != null && !jsonObj.get("shippingInfo").isJsonNull()) {
        QuoteDetailsResponseShippingInfo.validateJsonElement(jsonObj.get("shippingInfo"));
      }
      if (jsonObj.get("products") != null && !jsonObj.get("products").isJsonNull()) {
        JsonArray jsonArrayproducts = jsonObj.getAsJsonArray("products");
        if (jsonArrayproducts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("products").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `products` to be an array in the JSON string but got `%s`", jsonObj.get("products").toString()));
          }

          // validate the optional field `products` (array)
          for (int i = 0; i < jsonArrayproducts.size(); i++) {
            QuoteDetailsResponseProductsInner.validateJsonElement(jsonArrayproducts.get(i));
          };
        }
      }
      if (jsonObj.get("extraFeesTotalDetails") != null && !jsonObj.get("extraFeesTotalDetails").isJsonNull()) {
        JsonArray jsonArrayextraFeesTotalDetails = jsonObj.getAsJsonArray("extraFeesTotalDetails");
        if (jsonArrayextraFeesTotalDetails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("extraFeesTotalDetails").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `extraFeesTotalDetails` to be an array in the JSON string but got `%s`", jsonObj.get("extraFeesTotalDetails").toString()));
          }

          // validate the optional field `extraFeesTotalDetails` (array)
          for (int i = 0; i < jsonArrayextraFeesTotalDetails.size(); i++) {
            QuoteDetailsResponseProductsInnerPriceExtraFeesDetailsInner.validateJsonElement(jsonArrayextraFeesTotalDetails.get(i));
          };
        }
      }
      if ((jsonObj.get("totalQuoteAmount") != null && !jsonObj.get("totalQuoteAmount").isJsonNull()) && !jsonObj.get("totalQuoteAmount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `totalQuoteAmount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("totalQuoteAmount").toString()));
      }
      if (jsonObj.get("additionalAttributes") != null && !jsonObj.get("additionalAttributes").isJsonNull()) {
        JsonArray jsonArrayadditionalAttributes = jsonObj.getAsJsonArray("additionalAttributes");
        if (jsonArrayadditionalAttributes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("additionalAttributes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `additionalAttributes` to be an array in the JSON string but got `%s`", jsonObj.get("additionalAttributes").toString()));
          }

          // validate the optional field `additionalAttributes` (array)
          for (int i = 0; i < jsonArrayadditionalAttributes.size(); i++) {
            QuoteDetailsResponseAdditionalAttributesInner.validateJsonElement(jsonArrayadditionalAttributes.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!QuoteDetailsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'QuoteDetailsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<QuoteDetailsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(QuoteDetailsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<QuoteDetailsResponse>() {
           @Override
           public void write(JsonWriter out, QuoteDetailsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public QuoteDetailsResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of QuoteDetailsResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of QuoteDetailsResponse
   * @throws IOException if the JSON string is invalid with respect to QuoteDetailsResponse
   */
  public static QuoteDetailsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, QuoteDetailsResponse.class);
  }

  /**
   * Convert an instance of QuoteDetailsResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

