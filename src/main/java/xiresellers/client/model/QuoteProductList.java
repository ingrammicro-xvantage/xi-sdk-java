/*
 * XI SDK Resellers
 * For Resellers. Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package xiresellers.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import xiresellers.client.model.QuoteProductListPrice;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import xiresellers.client.JSON;

/**
 * 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-16T05:46:16.662413Z[Etc/UTC]")
public class QuoteProductList {
  public static final String SERIALIZED_NAME_QUOTE_PRODUCT_GUID = "quoteProductGuid";
  @SerializedName(SERIALIZED_NAME_QUOTE_PRODUCT_GUID)
  private String quoteProductGuid;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private String quantity;

  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private String comments;

  public static final String SERIALIZED_NAME_BID_START_DATE = "bidStartDate";
  @SerializedName(SERIALIZED_NAME_BID_START_DATE)
  private String bidStartDate;

  public static final String SERIALIZED_NAME_BID_EXPIRY_DATE = "bidExpiryDate";
  @SerializedName(SERIALIZED_NAME_BID_EXPIRY_DATE)
  private String bidExpiryDate;

  public static final String SERIALIZED_NAME_SKU = "sku";
  @SerializedName(SERIALIZED_NAME_SKU)
  private String sku;

  public static final String SERIALIZED_NAME_LINE_NUMBER = "lineNumber";
  @SerializedName(SERIALIZED_NAME_LINE_NUMBER)
  private String lineNumber;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_VENDOR_PART_NUMBER = "vendorPartNumber";
  @SerializedName(SERIALIZED_NAME_VENDOR_PART_NUMBER)
  private String vendorPartNumber;

  public static final String SERIALIZED_NAME_WEIGHT = "weight";
  @SerializedName(SERIALIZED_NAME_WEIGHT)
  private String weight;

  public static final String SERIALIZED_NAME_IS_SUGGESTION_PRODUCT = "isSuggestionProduct";
  @SerializedName(SERIALIZED_NAME_IS_SUGGESTION_PRODUCT)
  private String isSuggestionProduct;

  public static final String SERIALIZED_NAME_VPN_CATEGORY = "vpnCategory";
  @SerializedName(SERIALIZED_NAME_VPN_CATEGORY)
  private String vpnCategory;

  public static final String SERIALIZED_NAME_QUOTE_PRODUCTS_SUPPLIER_PART_AUXILIARY_ID = "quoteProductsSupplierPartAuxiliaryId";
  @SerializedName(SERIALIZED_NAME_QUOTE_PRODUCTS_SUPPLIER_PART_AUXILIARY_ID)
  private String quoteProductsSupplierPartAuxiliaryId;

  public static final String SERIALIZED_NAME_QUOTE_PRODUCTS_VENDOR = "quoteProductsVendor";
  @SerializedName(SERIALIZED_NAME_QUOTE_PRODUCTS_VENDOR)
  private String quoteProductsVendor;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private QuoteProductListPrice price;

  public QuoteProductList() {
  }

  public QuoteProductList quoteProductGuid(String quoteProductGuid) {
    this.quoteProductGuid = quoteProductGuid;
    return this;
  }

   /**
   * Get quoteProductGuid
   * @return quoteProductGuid
  **/
  @javax.annotation.Nullable
  public String getQuoteProductGuid() {
    return quoteProductGuid;
  }

  public void setQuoteProductGuid(String quoteProductGuid) {
    this.quoteProductGuid = quoteProductGuid;
  }


  public QuoteProductList quantity(String quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @javax.annotation.Nullable
  public String getQuantity() {
    return quantity;
  }

  public void setQuantity(String quantity) {
    this.quantity = quantity;
  }


  public QuoteProductList comments(String comments) {
    this.comments = comments;
    return this;
  }

   /**
   * Get comments
   * @return comments
  **/
  @javax.annotation.Nullable
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }


  public QuoteProductList bidStartDate(String bidStartDate) {
    this.bidStartDate = bidStartDate;
    return this;
  }

   /**
   * Get bidStartDate
   * @return bidStartDate
  **/
  @javax.annotation.Nullable
  public String getBidStartDate() {
    return bidStartDate;
  }

  public void setBidStartDate(String bidStartDate) {
    this.bidStartDate = bidStartDate;
  }


  public QuoteProductList bidExpiryDate(String bidExpiryDate) {
    this.bidExpiryDate = bidExpiryDate;
    return this;
  }

   /**
   * Get bidExpiryDate
   * @return bidExpiryDate
  **/
  @javax.annotation.Nullable
  public String getBidExpiryDate() {
    return bidExpiryDate;
  }

  public void setBidExpiryDate(String bidExpiryDate) {
    this.bidExpiryDate = bidExpiryDate;
  }


  public QuoteProductList sku(String sku) {
    this.sku = sku;
    return this;
  }

   /**
   * Get sku
   * @return sku
  **/
  @javax.annotation.Nullable
  public String getSku() {
    return sku;
  }

  public void setSku(String sku) {
    this.sku = sku;
  }


  public QuoteProductList lineNumber(String lineNumber) {
    this.lineNumber = lineNumber;
    return this;
  }

   /**
   * Get lineNumber
   * @return lineNumber
  **/
  @javax.annotation.Nullable
  public String getLineNumber() {
    return lineNumber;
  }

  public void setLineNumber(String lineNumber) {
    this.lineNumber = lineNumber;
  }


  public QuoteProductList description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public QuoteProductList vendorPartNumber(String vendorPartNumber) {
    this.vendorPartNumber = vendorPartNumber;
    return this;
  }

   /**
   * Get vendorPartNumber
   * @return vendorPartNumber
  **/
  @javax.annotation.Nullable
  public String getVendorPartNumber() {
    return vendorPartNumber;
  }

  public void setVendorPartNumber(String vendorPartNumber) {
    this.vendorPartNumber = vendorPartNumber;
  }


  public QuoteProductList weight(String weight) {
    this.weight = weight;
    return this;
  }

   /**
   * Get weight
   * @return weight
  **/
  @javax.annotation.Nullable
  public String getWeight() {
    return weight;
  }

  public void setWeight(String weight) {
    this.weight = weight;
  }


  public QuoteProductList isSuggestionProduct(String isSuggestionProduct) {
    this.isSuggestionProduct = isSuggestionProduct;
    return this;
  }

   /**
   * Get isSuggestionProduct
   * @return isSuggestionProduct
  **/
  @javax.annotation.Nullable
  public String getIsSuggestionProduct() {
    return isSuggestionProduct;
  }

  public void setIsSuggestionProduct(String isSuggestionProduct) {
    this.isSuggestionProduct = isSuggestionProduct;
  }


  public QuoteProductList vpnCategory(String vpnCategory) {
    this.vpnCategory = vpnCategory;
    return this;
  }

   /**
   * Get vpnCategory
   * @return vpnCategory
  **/
  @javax.annotation.Nullable
  public String getVpnCategory() {
    return vpnCategory;
  }

  public void setVpnCategory(String vpnCategory) {
    this.vpnCategory = vpnCategory;
  }


  public QuoteProductList quoteProductsSupplierPartAuxiliaryId(String quoteProductsSupplierPartAuxiliaryId) {
    this.quoteProductsSupplierPartAuxiliaryId = quoteProductsSupplierPartAuxiliaryId;
    return this;
  }

   /**
   * Get quoteProductsSupplierPartAuxiliaryId
   * @return quoteProductsSupplierPartAuxiliaryId
  **/
  @javax.annotation.Nullable
  public String getQuoteProductsSupplierPartAuxiliaryId() {
    return quoteProductsSupplierPartAuxiliaryId;
  }

  public void setQuoteProductsSupplierPartAuxiliaryId(String quoteProductsSupplierPartAuxiliaryId) {
    this.quoteProductsSupplierPartAuxiliaryId = quoteProductsSupplierPartAuxiliaryId;
  }


  public QuoteProductList quoteProductsVendor(String quoteProductsVendor) {
    this.quoteProductsVendor = quoteProductsVendor;
    return this;
  }

   /**
   * Get quoteProductsVendor
   * @return quoteProductsVendor
  **/
  @javax.annotation.Nullable
  public String getQuoteProductsVendor() {
    return quoteProductsVendor;
  }

  public void setQuoteProductsVendor(String quoteProductsVendor) {
    this.quoteProductsVendor = quoteProductsVendor;
  }


  public QuoteProductList price(QuoteProductListPrice price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @javax.annotation.Nullable
  public QuoteProductListPrice getPrice() {
    return price;
  }

  public void setPrice(QuoteProductListPrice price) {
    this.price = price;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QuoteProductList quoteProductList = (QuoteProductList) o;
    return Objects.equals(this.quoteProductGuid, quoteProductList.quoteProductGuid) &&
        Objects.equals(this.quantity, quoteProductList.quantity) &&
        Objects.equals(this.comments, quoteProductList.comments) &&
        Objects.equals(this.bidStartDate, quoteProductList.bidStartDate) &&
        Objects.equals(this.bidExpiryDate, quoteProductList.bidExpiryDate) &&
        Objects.equals(this.sku, quoteProductList.sku) &&
        Objects.equals(this.lineNumber, quoteProductList.lineNumber) &&
        Objects.equals(this.description, quoteProductList.description) &&
        Objects.equals(this.vendorPartNumber, quoteProductList.vendorPartNumber) &&
        Objects.equals(this.weight, quoteProductList.weight) &&
        Objects.equals(this.isSuggestionProduct, quoteProductList.isSuggestionProduct) &&
        Objects.equals(this.vpnCategory, quoteProductList.vpnCategory) &&
        Objects.equals(this.quoteProductsSupplierPartAuxiliaryId, quoteProductList.quoteProductsSupplierPartAuxiliaryId) &&
        Objects.equals(this.quoteProductsVendor, quoteProductList.quoteProductsVendor) &&
        Objects.equals(this.price, quoteProductList.price);
  }

  @Override
  public int hashCode() {
    return Objects.hash(quoteProductGuid, quantity, comments, bidStartDate, bidExpiryDate, sku, lineNumber, description, vendorPartNumber, weight, isSuggestionProduct, vpnCategory, quoteProductsSupplierPartAuxiliaryId, quoteProductsVendor, price);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuoteProductList {\n");
    sb.append("    quoteProductGuid: ").append(toIndentedString(quoteProductGuid)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    bidStartDate: ").append(toIndentedString(bidStartDate)).append("\n");
    sb.append("    bidExpiryDate: ").append(toIndentedString(bidExpiryDate)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    lineNumber: ").append(toIndentedString(lineNumber)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    vendorPartNumber: ").append(toIndentedString(vendorPartNumber)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    isSuggestionProduct: ").append(toIndentedString(isSuggestionProduct)).append("\n");
    sb.append("    vpnCategory: ").append(toIndentedString(vpnCategory)).append("\n");
    sb.append("    quoteProductsSupplierPartAuxiliaryId: ").append(toIndentedString(quoteProductsSupplierPartAuxiliaryId)).append("\n");
    sb.append("    quoteProductsVendor: ").append(toIndentedString(quoteProductsVendor)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("quoteProductGuid");
    openapiFields.add("quantity");
    openapiFields.add("comments");
    openapiFields.add("bidStartDate");
    openapiFields.add("bidExpiryDate");
    openapiFields.add("sku");
    openapiFields.add("lineNumber");
    openapiFields.add("description");
    openapiFields.add("vendorPartNumber");
    openapiFields.add("weight");
    openapiFields.add("isSuggestionProduct");
    openapiFields.add("vpnCategory");
    openapiFields.add("quoteProductsSupplierPartAuxiliaryId");
    openapiFields.add("quoteProductsVendor");
    openapiFields.add("price");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to QuoteProductList
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!QuoteProductList.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in QuoteProductList is not found in the empty JSON string", QuoteProductList.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!QuoteProductList.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `QuoteProductList` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("quoteProductGuid") != null && !jsonObj.get("quoteProductGuid").isJsonNull()) && !jsonObj.get("quoteProductGuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `quoteProductGuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("quoteProductGuid").toString()));
      }
      if ((jsonObj.get("quantity") != null && !jsonObj.get("quantity").isJsonNull()) && !jsonObj.get("quantity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `quantity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("quantity").toString()));
      }
      if ((jsonObj.get("comments") != null && !jsonObj.get("comments").isJsonNull()) && !jsonObj.get("comments").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comments` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comments").toString()));
      }
      if ((jsonObj.get("bidStartDate") != null && !jsonObj.get("bidStartDate").isJsonNull()) && !jsonObj.get("bidStartDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bidStartDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bidStartDate").toString()));
      }
      if ((jsonObj.get("bidExpiryDate") != null && !jsonObj.get("bidExpiryDate").isJsonNull()) && !jsonObj.get("bidExpiryDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bidExpiryDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bidExpiryDate").toString()));
      }
      if ((jsonObj.get("sku") != null && !jsonObj.get("sku").isJsonNull()) && !jsonObj.get("sku").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sku` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sku").toString()));
      }
      if ((jsonObj.get("lineNumber") != null && !jsonObj.get("lineNumber").isJsonNull()) && !jsonObj.get("lineNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lineNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lineNumber").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("vendorPartNumber") != null && !jsonObj.get("vendorPartNumber").isJsonNull()) && !jsonObj.get("vendorPartNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vendorPartNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vendorPartNumber").toString()));
      }
      if ((jsonObj.get("weight") != null && !jsonObj.get("weight").isJsonNull()) && !jsonObj.get("weight").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `weight` to be a primitive type in the JSON string but got `%s`", jsonObj.get("weight").toString()));
      }
      if ((jsonObj.get("isSuggestionProduct") != null && !jsonObj.get("isSuggestionProduct").isJsonNull()) && !jsonObj.get("isSuggestionProduct").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `isSuggestionProduct` to be a primitive type in the JSON string but got `%s`", jsonObj.get("isSuggestionProduct").toString()));
      }
      if ((jsonObj.get("vpnCategory") != null && !jsonObj.get("vpnCategory").isJsonNull()) && !jsonObj.get("vpnCategory").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vpnCategory` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vpnCategory").toString()));
      }
      if ((jsonObj.get("quoteProductsSupplierPartAuxiliaryId") != null && !jsonObj.get("quoteProductsSupplierPartAuxiliaryId").isJsonNull()) && !jsonObj.get("quoteProductsSupplierPartAuxiliaryId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `quoteProductsSupplierPartAuxiliaryId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("quoteProductsSupplierPartAuxiliaryId").toString()));
      }
      if ((jsonObj.get("quoteProductsVendor") != null && !jsonObj.get("quoteProductsVendor").isJsonNull()) && !jsonObj.get("quoteProductsVendor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `quoteProductsVendor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("quoteProductsVendor").toString()));
      }
      // validate the optional field `price`
      if (jsonObj.get("price") != null && !jsonObj.get("price").isJsonNull()) {
        QuoteProductListPrice.validateJsonElement(jsonObj.get("price"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!QuoteProductList.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'QuoteProductList' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<QuoteProductList> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(QuoteProductList.class));

       return (TypeAdapter<T>) new TypeAdapter<QuoteProductList>() {
           @Override
           public void write(JsonWriter out, QuoteProductList value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public QuoteProductList read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of QuoteProductList given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of QuoteProductList
  * @throws IOException if the JSON string is invalid with respect to QuoteProductList
  */
  public static QuoteProductList fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, QuoteProductList.class);
  }

 /**
  * Convert an instance of QuoteProductList to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

