/*
 * XI Sdk Resellers
 * For resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of API's and webhooks to craft a seamless journey for your customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package xiresellers.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import xiresellers.client.model.OrderDetailB2BLinesInnerAdditionalAttributesInner;
import xiresellers.client.model.OrderDetailB2BLinesInnerEstimatedDatesInner;
import xiresellers.client.model.OrderDetailB2BLinesInnerLinksInner;
import xiresellers.client.model.OrderDetailB2BLinesInnerMultipleShipmentsInner;
import xiresellers.client.model.OrderDetailB2BLinesInnerScheduleLinesInner;
import xiresellers.client.model.OrderDetailB2BLinesInnerServiceContractInfo;
import xiresellers.client.model.OrderDetailB2BLinesInnerShipmentDetailsInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import xiresellers.client.JSON;

/**
 * OrderDetailB2BLinesInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-28T07:33:14.592758Z[Etc/UTC]", comments = "Generator version: 7.9.0")
public class OrderDetailB2BLinesInner {
  public static final String SERIALIZED_NAME_SUB_ORDER_NUMBER = "subOrderNumber";
  @SerializedName(SERIALIZED_NAME_SUB_ORDER_NUMBER)
  private String subOrderNumber;

  public static final String SERIALIZED_NAME_INGRAM_ORDER_LINE_NUMBER = "ingramOrderLineNumber";
  @SerializedName(SERIALIZED_NAME_INGRAM_ORDER_LINE_NUMBER)
  private String ingramOrderLineNumber;

  public static final String SERIALIZED_NAME_VENDOR_SALES_ORDER_LINE_NUMBER = "vendorSalesOrderLineNumber";
  @SerializedName(SERIALIZED_NAME_VENDOR_SALES_ORDER_LINE_NUMBER)
  private String vendorSalesOrderLineNumber;

  public static final String SERIALIZED_NAME_CUSTOMER_LINE_NUMBER = "customerLineNumber";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_LINE_NUMBER)
  private String customerLineNumber;

  public static final String SERIALIZED_NAME_LINE_STATUS = "lineStatus";
  @SerializedName(SERIALIZED_NAME_LINE_STATUS)
  private String lineStatus;

  public static final String SERIALIZED_NAME_INGRAM_PART_NUMBER = "ingramPartNumber";
  @SerializedName(SERIALIZED_NAME_INGRAM_PART_NUMBER)
  private String ingramPartNumber;

  public static final String SERIALIZED_NAME_VENDOR_PART_NUMBER = "vendorPartNumber";
  @SerializedName(SERIALIZED_NAME_VENDOR_PART_NUMBER)
  private String vendorPartNumber;

  public static final String SERIALIZED_NAME_VENDOR_NAME = "vendorName";
  @SerializedName(SERIALIZED_NAME_VENDOR_NAME)
  private String vendorName;

  public static final String SERIALIZED_NAME_PART_DESCRIPTION = "partDescription";
  @SerializedName(SERIALIZED_NAME_PART_DESCRIPTION)
  private String partDescription;

  public static final String SERIALIZED_NAME_UNIT_WEIGHT = "unitWeight";
  @SerializedName(SERIALIZED_NAME_UNIT_WEIGHT)
  private Double unitWeight;

  public static final String SERIALIZED_NAME_WEIGHT_UOM = "weightUom";
  @SerializedName(SERIALIZED_NAME_WEIGHT_UOM)
  private String weightUom;

  public static final String SERIALIZED_NAME_UNIT_PRICE = "unitPrice";
  @SerializedName(SERIALIZED_NAME_UNIT_PRICE)
  private Double unitPrice;

  public static final String SERIALIZED_NAME_UPC_CODE = "upcCode";
  @SerializedName(SERIALIZED_NAME_UPC_CODE)
  private String upcCode;

  public static final String SERIALIZED_NAME_EXTENDED_PRICE = "extendedPrice";
  @SerializedName(SERIALIZED_NAME_EXTENDED_PRICE)
  private Double extendedPrice;

  public static final String SERIALIZED_NAME_TAX_AMOUNT = "taxAmount";
  @SerializedName(SERIALIZED_NAME_TAX_AMOUNT)
  private Double taxAmount;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currencyCode";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_QUANTITY_ORDERED = "quantityOrdered";
  @SerializedName(SERIALIZED_NAME_QUANTITY_ORDERED)
  private Integer quantityOrdered;

  public static final String SERIALIZED_NAME_QUANTITY_CONFIRMED = "quantityConfirmed";
  @SerializedName(SERIALIZED_NAME_QUANTITY_CONFIRMED)
  private Integer quantityConfirmed;

  public static final String SERIALIZED_NAME_QUANTITY_BACK_ORDERED = "quantityBackOrdered";
  @SerializedName(SERIALIZED_NAME_QUANTITY_BACK_ORDERED)
  private Integer quantityBackOrdered;

  public static final String SERIALIZED_NAME_SPECIAL_BID_NUMBER = "specialBidNumber";
  @SerializedName(SERIALIZED_NAME_SPECIAL_BID_NUMBER)
  private String specialBidNumber;

  public static final String SERIALIZED_NAME_REQUESTED_DELIVERYDATE = "requestedDeliverydate";
  @SerializedName(SERIALIZED_NAME_REQUESTED_DELIVERYDATE)
  private String requestedDeliverydate;

  public static final String SERIALIZED_NAME_PROMISED_DELIVERY_DATE = "promisedDeliveryDate";
  @SerializedName(SERIALIZED_NAME_PROMISED_DELIVERY_DATE)
  private String promisedDeliveryDate;

  public static final String SERIALIZED_NAME_BACK_ORDER_E_T_A_DATE = "backOrderETADate";
  @SerializedName(SERIALIZED_NAME_BACK_ORDER_E_T_A_DATE)
  private String backOrderETADate;

  public static final String SERIALIZED_NAME_LINE_NOTES = "lineNotes";
  @SerializedName(SERIALIZED_NAME_LINE_NOTES)
  private String lineNotes;

  public static final String SERIALIZED_NAME_SHIPMENT_DETAILS = "shipmentDetails";
  @SerializedName(SERIALIZED_NAME_SHIPMENT_DETAILS)
  private List<OrderDetailB2BLinesInnerShipmentDetailsInner> shipmentDetails;

  public static final String SERIALIZED_NAME_SERVICE_CONTRACT_INFO = "serviceContractInfo";
  @SerializedName(SERIALIZED_NAME_SERVICE_CONTRACT_INFO)
  private OrderDetailB2BLinesInnerServiceContractInfo serviceContractInfo;

  public static final String SERIALIZED_NAME_ADDITIONAL_ATTRIBUTES = "additionalAttributes";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_ATTRIBUTES)
  private List<OrderDetailB2BLinesInnerAdditionalAttributesInner> additionalAttributes;

  public static final String SERIALIZED_NAME_LINKS = "links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private List<OrderDetailB2BLinesInnerLinksInner> links;

  public static final String SERIALIZED_NAME_ESTIMATED_DATES = "estimatedDates";
  @SerializedName(SERIALIZED_NAME_ESTIMATED_DATES)
  private List<OrderDetailB2BLinesInnerEstimatedDatesInner> estimatedDates = new ArrayList<>();

  public static final String SERIALIZED_NAME_SCHEDULE_LINES = "scheduleLines";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_LINES)
  private List<OrderDetailB2BLinesInnerScheduleLinesInner> scheduleLines = new ArrayList<>();

  public static final String SERIALIZED_NAME_MULTIPLE_SHIPMENTS = "multipleShipments";
  @SerializedName(SERIALIZED_NAME_MULTIPLE_SHIPMENTS)
  private List<OrderDetailB2BLinesInnerMultipleShipmentsInner> multipleShipments = new ArrayList<>();

  public static final String SERIALIZED_NAME_DEFAULT_CARRIER_NAME = "defaultCarrierName";
  @SerializedName(SERIALIZED_NAME_DEFAULT_CARRIER_NAME)
  private String defaultCarrierName;

  public OrderDetailB2BLinesInner() {
  }

  public OrderDetailB2BLinesInner subOrderNumber(String subOrderNumber) {
    this.subOrderNumber = subOrderNumber;
    return this;
  }

  /**
   * The sub order number. The two-digit prefix is the warehouse code of the warehouse nearest the reseller. The middle number is the order number. The two-digit suffix is the sub order number.
   * @return subOrderNumber
   */
  @javax.annotation.Nullable
  public String getSubOrderNumber() {
    return subOrderNumber;
  }

  public void setSubOrderNumber(String subOrderNumber) {
    this.subOrderNumber = subOrderNumber;
  }


  public OrderDetailB2BLinesInner ingramOrderLineNumber(String ingramOrderLineNumber) {
    this.ingramOrderLineNumber = ingramOrderLineNumber;
    return this;
  }

  /**
   * Unique Ingram Micro line number. Starts with 001.
   * @return ingramOrderLineNumber
   */
  @javax.annotation.Nullable
  public String getIngramOrderLineNumber() {
    return ingramOrderLineNumber;
  }

  public void setIngramOrderLineNumber(String ingramOrderLineNumber) {
    this.ingramOrderLineNumber = ingramOrderLineNumber;
  }


  public OrderDetailB2BLinesInner vendorSalesOrderLineNumber(String vendorSalesOrderLineNumber) {
    this.vendorSalesOrderLineNumber = vendorSalesOrderLineNumber;
    return this;
  }

  /**
   * The vendor&#39;s sales order line number.
   * @return vendorSalesOrderLineNumber
   */
  @javax.annotation.Nullable
  public String getVendorSalesOrderLineNumber() {
    return vendorSalesOrderLineNumber;
  }

  public void setVendorSalesOrderLineNumber(String vendorSalesOrderLineNumber) {
    this.vendorSalesOrderLineNumber = vendorSalesOrderLineNumber;
  }


  public OrderDetailB2BLinesInner customerLineNumber(String customerLineNumber) {
    this.customerLineNumber = customerLineNumber;
    return this;
  }

  /**
   * The reseller&#39;s line item number for reference in their system.
   * @return customerLineNumber
   */
  @javax.annotation.Nullable
  public String getCustomerLineNumber() {
    return customerLineNumber;
  }

  public void setCustomerLineNumber(String customerLineNumber) {
    this.customerLineNumber = customerLineNumber;
  }


  public OrderDetailB2BLinesInner lineStatus(String lineStatus) {
    this.lineStatus = lineStatus;
    return this;
  }

  /**
   * The status for the line item in the order. One of- Backordered, In Progress, Shipped, Delivered, Canceled, On Hold.
   * @return lineStatus
   */
  @javax.annotation.Nullable
  public String getLineStatus() {
    return lineStatus;
  }

  public void setLineStatus(String lineStatus) {
    this.lineStatus = lineStatus;
  }


  public OrderDetailB2BLinesInner ingramPartNumber(String ingramPartNumber) {
    this.ingramPartNumber = ingramPartNumber;
    return this;
  }

  /**
   * Unique IngramMicro part number.
   * @return ingramPartNumber
   */
  @javax.annotation.Nullable
  public String getIngramPartNumber() {
    return ingramPartNumber;
  }

  public void setIngramPartNumber(String ingramPartNumber) {
    this.ingramPartNumber = ingramPartNumber;
  }


  public OrderDetailB2BLinesInner vendorPartNumber(String vendorPartNumber) {
    this.vendorPartNumber = vendorPartNumber;
    return this;
  }

  /**
   * The vendor&#39;s part number for the line item.
   * @return vendorPartNumber
   */
  @javax.annotation.Nullable
  public String getVendorPartNumber() {
    return vendorPartNumber;
  }

  public void setVendorPartNumber(String vendorPartNumber) {
    this.vendorPartNumber = vendorPartNumber;
  }


  public OrderDetailB2BLinesInner vendorName(String vendorName) {
    this.vendorName = vendorName;
    return this;
  }

  /**
   * The vendor&#39;s name for the part in their system.
   * @return vendorName
   */
  @javax.annotation.Nullable
  public String getVendorName() {
    return vendorName;
  }

  public void setVendorName(String vendorName) {
    this.vendorName = vendorName;
  }


  public OrderDetailB2BLinesInner partDescription(String partDescription) {
    this.partDescription = partDescription;
    return this;
  }

  /**
   * The vendor&#39;s description of the part in their system.
   * @return partDescription
   */
  @javax.annotation.Nullable
  public String getPartDescription() {
    return partDescription;
  }

  public void setPartDescription(String partDescription) {
    this.partDescription = partDescription;
  }


  public OrderDetailB2BLinesInner unitWeight(Double unitWeight) {
    this.unitWeight = unitWeight;
    return this;
  }

  /**
   * The unit weight of the line item.
   * @return unitWeight
   */
  @javax.annotation.Nullable
  public Double getUnitWeight() {
    return unitWeight;
  }

  public void setUnitWeight(Double unitWeight) {
    this.unitWeight = unitWeight;
  }


  public OrderDetailB2BLinesInner weightUom(String weightUom) {
    this.weightUom = weightUom;
    return this;
  }

  /**
   * The unit of measure for the line item.
   * @return weightUom
   */
  @javax.annotation.Nullable
  public String getWeightUom() {
    return weightUom;
  }

  public void setWeightUom(String weightUom) {
    this.weightUom = weightUom;
  }


  public OrderDetailB2BLinesInner unitPrice(Double unitPrice) {
    this.unitPrice = unitPrice;
    return this;
  }

  /**
   * The unit price of the line item.
   * @return unitPrice
   */
  @javax.annotation.Nullable
  public Double getUnitPrice() {
    return unitPrice;
  }

  public void setUnitPrice(Double unitPrice) {
    this.unitPrice = unitPrice;
  }


  public OrderDetailB2BLinesInner upcCode(String upcCode) {
    this.upcCode = upcCode;
    return this;
  }

  /**
   * The UPC code of a product.
   * @return upcCode
   */
  @javax.annotation.Nullable
  public String getUpcCode() {
    return upcCode;
  }

  public void setUpcCode(String upcCode) {
    this.upcCode = upcCode;
  }


  public OrderDetailB2BLinesInner extendedPrice(Double extendedPrice) {
    this.extendedPrice = extendedPrice;
    return this;
  }

  /**
   * Unit price X quantity for the line item.
   * @return extendedPrice
   */
  @javax.annotation.Nullable
  public Double getExtendedPrice() {
    return extendedPrice;
  }

  public void setExtendedPrice(Double extendedPrice) {
    this.extendedPrice = extendedPrice;
  }


  public OrderDetailB2BLinesInner taxAmount(Double taxAmount) {
    this.taxAmount = taxAmount;
    return this;
  }

  /**
   * The tax amount for the line item.
   * @return taxAmount
   */
  @javax.annotation.Nullable
  public Double getTaxAmount() {
    return taxAmount;
  }

  public void setTaxAmount(Double taxAmount) {
    this.taxAmount = taxAmount;
  }


  public OrderDetailB2BLinesInner currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

  /**
   * The country-specific three character ISO 4217 currency code for the line item.
   * @return currencyCode
   */
  @javax.annotation.Nullable
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }


  public OrderDetailB2BLinesInner quantityOrdered(Integer quantityOrdered) {
    this.quantityOrdered = quantityOrdered;
    return this;
  }

  /**
   * The quantity ordered of the line item.
   * @return quantityOrdered
   */
  @javax.annotation.Nullable
  public Integer getQuantityOrdered() {
    return quantityOrdered;
  }

  public void setQuantityOrdered(Integer quantityOrdered) {
    this.quantityOrdered = quantityOrdered;
  }


  public OrderDetailB2BLinesInner quantityConfirmed(Integer quantityConfirmed) {
    this.quantityConfirmed = quantityConfirmed;
    return this;
  }

  /**
   * The quantity confirmed for the line item.
   * @return quantityConfirmed
   */
  @javax.annotation.Nullable
  public Integer getQuantityConfirmed() {
    return quantityConfirmed;
  }

  public void setQuantityConfirmed(Integer quantityConfirmed) {
    this.quantityConfirmed = quantityConfirmed;
  }


  public OrderDetailB2BLinesInner quantityBackOrdered(Integer quantityBackOrdered) {
    this.quantityBackOrdered = quantityBackOrdered;
    return this;
  }

  /**
   * The quantity backordered for the line item.
   * @return quantityBackOrdered
   */
  @javax.annotation.Nullable
  public Integer getQuantityBackOrdered() {
    return quantityBackOrdered;
  }

  public void setQuantityBackOrdered(Integer quantityBackOrdered) {
    this.quantityBackOrdered = quantityBackOrdered;
  }


  public OrderDetailB2BLinesInner specialBidNumber(String specialBidNumber) {
    this.specialBidNumber = specialBidNumber;
    return this;
  }

  /**
   * The line-level bid number provided to the reseller by the vendor for special pricing and discounts. Used to track the bid number in the case of split orders or where different line items have different bid numbers. Line-level bid numbers take precedence over header-level bid numbers.
   * @return specialBidNumber
   */
  @javax.annotation.Nullable
  public String getSpecialBidNumber() {
    return specialBidNumber;
  }

  public void setSpecialBidNumber(String specialBidNumber) {
    this.specialBidNumber = specialBidNumber;
  }


  public OrderDetailB2BLinesInner requestedDeliverydate(String requestedDeliverydate) {
    this.requestedDeliverydate = requestedDeliverydate;
    return this;
  }

  /**
   * Reseller-requested delivery date. Delivery date is not guaranteed.
   * @return requestedDeliverydate
   */
  @javax.annotation.Nullable
  public String getRequestedDeliverydate() {
    return requestedDeliverydate;
  }

  public void setRequestedDeliverydate(String requestedDeliverydate) {
    this.requestedDeliverydate = requestedDeliverydate;
  }


  public OrderDetailB2BLinesInner promisedDeliveryDate(String promisedDeliveryDate) {
    this.promisedDeliveryDate = promisedDeliveryDate;
    return this;
  }

  /**
   * The delivery date promised by IngramMicro.
   * @return promisedDeliveryDate
   */
  @javax.annotation.Nullable
  public String getPromisedDeliveryDate() {
    return promisedDeliveryDate;
  }

  public void setPromisedDeliveryDate(String promisedDeliveryDate) {
    this.promisedDeliveryDate = promisedDeliveryDate;
  }


  public OrderDetailB2BLinesInner backOrderETADate(String backOrderETADate) {
    this.backOrderETADate = backOrderETADate;
    return this;
  }

  /**
   * Backorder ETA date
   * @return backOrderETADate
   */
  @javax.annotation.Nullable
  public String getBackOrderETADate() {
    return backOrderETADate;
  }

  public void setBackOrderETADate(String backOrderETADate) {
    this.backOrderETADate = backOrderETADate;
  }


  public OrderDetailB2BLinesInner lineNotes(String lineNotes) {
    this.lineNotes = lineNotes;
    return this;
  }

  /**
   * Line-level notes for the order.
   * @return lineNotes
   */
  @javax.annotation.Nullable
  public String getLineNotes() {
    return lineNotes;
  }

  public void setLineNotes(String lineNotes) {
    this.lineNotes = lineNotes;
  }


  public OrderDetailB2BLinesInner shipmentDetails(List<OrderDetailB2BLinesInnerShipmentDetailsInner> shipmentDetails) {
    this.shipmentDetails = shipmentDetails;
    return this;
  }

  public OrderDetailB2BLinesInner addShipmentDetailsItem(OrderDetailB2BLinesInnerShipmentDetailsInner shipmentDetailsItem) {
    if (this.shipmentDetails == null) {
      this.shipmentDetails = new ArrayList<>();
    }
    this.shipmentDetails.add(shipmentDetailsItem);
    return this;
  }

  /**
   * Shipping details for the line item.
   * @return shipmentDetails
   */
  @javax.annotation.Nullable
  public List<OrderDetailB2BLinesInnerShipmentDetailsInner> getShipmentDetails() {
    return shipmentDetails;
  }

  public void setShipmentDetails(List<OrderDetailB2BLinesInnerShipmentDetailsInner> shipmentDetails) {
    this.shipmentDetails = shipmentDetails;
  }


  public OrderDetailB2BLinesInner serviceContractInfo(OrderDetailB2BLinesInnerServiceContractInfo serviceContractInfo) {
    this.serviceContractInfo = serviceContractInfo;
    return this;
  }

  /**
   * Get serviceContractInfo
   * @return serviceContractInfo
   */
  @javax.annotation.Nullable
  public OrderDetailB2BLinesInnerServiceContractInfo getServiceContractInfo() {
    return serviceContractInfo;
  }

  public void setServiceContractInfo(OrderDetailB2BLinesInnerServiceContractInfo serviceContractInfo) {
    this.serviceContractInfo = serviceContractInfo;
  }


  public OrderDetailB2BLinesInner additionalAttributes(List<OrderDetailB2BLinesInnerAdditionalAttributesInner> additionalAttributes) {
    this.additionalAttributes = additionalAttributes;
    return this;
  }

  public OrderDetailB2BLinesInner addAdditionalAttributesItem(OrderDetailB2BLinesInnerAdditionalAttributesInner additionalAttributesItem) {
    if (this.additionalAttributes == null) {
      this.additionalAttributes = new ArrayList<>();
    }
    this.additionalAttributes.add(additionalAttributesItem);
    return this;
  }

  /**
   * Get additionalAttributes
   * @return additionalAttributes
   */
  @javax.annotation.Nullable
  public List<OrderDetailB2BLinesInnerAdditionalAttributesInner> getAdditionalAttributes() {
    return additionalAttributes;
  }

  public void setAdditionalAttributes(List<OrderDetailB2BLinesInnerAdditionalAttributesInner> additionalAttributes) {
    this.additionalAttributes = additionalAttributes;
  }


  public OrderDetailB2BLinesInner links(List<OrderDetailB2BLinesInnerLinksInner> links) {
    this.links = links;
    return this;
  }

  public OrderDetailB2BLinesInner addLinksItem(OrderDetailB2BLinesInnerLinksInner linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<>();
    }
    this.links.add(linksItem);
    return this;
  }

  /**
   * Get links
   * @return links
   */
  @javax.annotation.Nullable
  public List<OrderDetailB2BLinesInnerLinksInner> getLinks() {
    return links;
  }

  public void setLinks(List<OrderDetailB2BLinesInnerLinksInner> links) {
    this.links = links;
  }


  public OrderDetailB2BLinesInner estimatedDates(List<OrderDetailB2BLinesInnerEstimatedDatesInner> estimatedDates) {
    this.estimatedDates = estimatedDates;
    return this;
  }

  public OrderDetailB2BLinesInner addEstimatedDatesItem(OrderDetailB2BLinesInnerEstimatedDatesInner estimatedDatesItem) {
    if (this.estimatedDates == null) {
      this.estimatedDates = new ArrayList<>();
    }
    this.estimatedDates.add(estimatedDatesItem);
    return this;
  }

  /**
   * Get estimatedDates
   * @return estimatedDates
   */
  @javax.annotation.Nullable
  public List<OrderDetailB2BLinesInnerEstimatedDatesInner> getEstimatedDates() {
    return estimatedDates;
  }

  public void setEstimatedDates(List<OrderDetailB2BLinesInnerEstimatedDatesInner> estimatedDates) {
    this.estimatedDates = estimatedDates;
  }


  public OrderDetailB2BLinesInner scheduleLines(List<OrderDetailB2BLinesInnerScheduleLinesInner> scheduleLines) {
    this.scheduleLines = scheduleLines;
    return this;
  }

  public OrderDetailB2BLinesInner addScheduleLinesItem(OrderDetailB2BLinesInnerScheduleLinesInner scheduleLinesItem) {
    if (this.scheduleLines == null) {
      this.scheduleLines = new ArrayList<>();
    }
    this.scheduleLines.add(scheduleLinesItem);
    return this;
  }

  /**
   * Get scheduleLines
   * @return scheduleLines
   */
  @javax.annotation.Nullable
  public List<OrderDetailB2BLinesInnerScheduleLinesInner> getScheduleLines() {
    return scheduleLines;
  }

  public void setScheduleLines(List<OrderDetailB2BLinesInnerScheduleLinesInner> scheduleLines) {
    this.scheduleLines = scheduleLines;
  }


  public OrderDetailB2BLinesInner multipleShipments(List<OrderDetailB2BLinesInnerMultipleShipmentsInner> multipleShipments) {
    this.multipleShipments = multipleShipments;
    return this;
  }

  public OrderDetailB2BLinesInner addMultipleShipmentsItem(OrderDetailB2BLinesInnerMultipleShipmentsInner multipleShipmentsItem) {
    if (this.multipleShipments == null) {
      this.multipleShipments = new ArrayList<>();
    }
    this.multipleShipments.add(multipleShipmentsItem);
    return this;
  }

  /**
   * Get multipleShipments
   * @return multipleShipments
   */
  @javax.annotation.Nullable
  public List<OrderDetailB2BLinesInnerMultipleShipmentsInner> getMultipleShipments() {
    return multipleShipments;
  }

  public void setMultipleShipments(List<OrderDetailB2BLinesInnerMultipleShipmentsInner> multipleShipments) {
    this.multipleShipments = multipleShipments;
  }


  public OrderDetailB2BLinesInner defaultCarrierName(String defaultCarrierName) {
    this.defaultCarrierName = defaultCarrierName;
    return this;
  }

  /**
   * Get defaultCarrierName
   * @return defaultCarrierName
   */
  @javax.annotation.Nullable
  public String getDefaultCarrierName() {
    return defaultCarrierName;
  }

  public void setDefaultCarrierName(String defaultCarrierName) {
    this.defaultCarrierName = defaultCarrierName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderDetailB2BLinesInner orderDetailB2BLinesInner = (OrderDetailB2BLinesInner) o;
    return Objects.equals(this.subOrderNumber, orderDetailB2BLinesInner.subOrderNumber) &&
        Objects.equals(this.ingramOrderLineNumber, orderDetailB2BLinesInner.ingramOrderLineNumber) &&
        Objects.equals(this.vendorSalesOrderLineNumber, orderDetailB2BLinesInner.vendorSalesOrderLineNumber) &&
        Objects.equals(this.customerLineNumber, orderDetailB2BLinesInner.customerLineNumber) &&
        Objects.equals(this.lineStatus, orderDetailB2BLinesInner.lineStatus) &&
        Objects.equals(this.ingramPartNumber, orderDetailB2BLinesInner.ingramPartNumber) &&
        Objects.equals(this.vendorPartNumber, orderDetailB2BLinesInner.vendorPartNumber) &&
        Objects.equals(this.vendorName, orderDetailB2BLinesInner.vendorName) &&
        Objects.equals(this.partDescription, orderDetailB2BLinesInner.partDescription) &&
        Objects.equals(this.unitWeight, orderDetailB2BLinesInner.unitWeight) &&
        Objects.equals(this.weightUom, orderDetailB2BLinesInner.weightUom) &&
        Objects.equals(this.unitPrice, orderDetailB2BLinesInner.unitPrice) &&
        Objects.equals(this.upcCode, orderDetailB2BLinesInner.upcCode) &&
        Objects.equals(this.extendedPrice, orderDetailB2BLinesInner.extendedPrice) &&
        Objects.equals(this.taxAmount, orderDetailB2BLinesInner.taxAmount) &&
        Objects.equals(this.currencyCode, orderDetailB2BLinesInner.currencyCode) &&
        Objects.equals(this.quantityOrdered, orderDetailB2BLinesInner.quantityOrdered) &&
        Objects.equals(this.quantityConfirmed, orderDetailB2BLinesInner.quantityConfirmed) &&
        Objects.equals(this.quantityBackOrdered, orderDetailB2BLinesInner.quantityBackOrdered) &&
        Objects.equals(this.specialBidNumber, orderDetailB2BLinesInner.specialBidNumber) &&
        Objects.equals(this.requestedDeliverydate, orderDetailB2BLinesInner.requestedDeliverydate) &&
        Objects.equals(this.promisedDeliveryDate, orderDetailB2BLinesInner.promisedDeliveryDate) &&
        Objects.equals(this.backOrderETADate, orderDetailB2BLinesInner.backOrderETADate) &&
        Objects.equals(this.lineNotes, orderDetailB2BLinesInner.lineNotes) &&
        Objects.equals(this.shipmentDetails, orderDetailB2BLinesInner.shipmentDetails) &&
        Objects.equals(this.serviceContractInfo, orderDetailB2BLinesInner.serviceContractInfo) &&
        Objects.equals(this.additionalAttributes, orderDetailB2BLinesInner.additionalAttributes) &&
        Objects.equals(this.links, orderDetailB2BLinesInner.links) &&
        Objects.equals(this.estimatedDates, orderDetailB2BLinesInner.estimatedDates) &&
        Objects.equals(this.scheduleLines, orderDetailB2BLinesInner.scheduleLines) &&
        Objects.equals(this.multipleShipments, orderDetailB2BLinesInner.multipleShipments) &&
        Objects.equals(this.defaultCarrierName, orderDetailB2BLinesInner.defaultCarrierName);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(subOrderNumber, ingramOrderLineNumber, vendorSalesOrderLineNumber, customerLineNumber, lineStatus, ingramPartNumber, vendorPartNumber, vendorName, partDescription, unitWeight, weightUom, unitPrice, upcCode, extendedPrice, taxAmount, currencyCode, quantityOrdered, quantityConfirmed, quantityBackOrdered, specialBidNumber, requestedDeliverydate, promisedDeliveryDate, backOrderETADate, lineNotes, shipmentDetails, serviceContractInfo, additionalAttributes, links, estimatedDates, scheduleLines, multipleShipments, defaultCarrierName);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderDetailB2BLinesInner {\n");
    sb.append("    subOrderNumber: ").append(toIndentedString(subOrderNumber)).append("\n");
    sb.append("    ingramOrderLineNumber: ").append(toIndentedString(ingramOrderLineNumber)).append("\n");
    sb.append("    vendorSalesOrderLineNumber: ").append(toIndentedString(vendorSalesOrderLineNumber)).append("\n");
    sb.append("    customerLineNumber: ").append(toIndentedString(customerLineNumber)).append("\n");
    sb.append("    lineStatus: ").append(toIndentedString(lineStatus)).append("\n");
    sb.append("    ingramPartNumber: ").append(toIndentedString(ingramPartNumber)).append("\n");
    sb.append("    vendorPartNumber: ").append(toIndentedString(vendorPartNumber)).append("\n");
    sb.append("    vendorName: ").append(toIndentedString(vendorName)).append("\n");
    sb.append("    partDescription: ").append(toIndentedString(partDescription)).append("\n");
    sb.append("    unitWeight: ").append(toIndentedString(unitWeight)).append("\n");
    sb.append("    weightUom: ").append(toIndentedString(weightUom)).append("\n");
    sb.append("    unitPrice: ").append(toIndentedString(unitPrice)).append("\n");
    sb.append("    upcCode: ").append(toIndentedString(upcCode)).append("\n");
    sb.append("    extendedPrice: ").append(toIndentedString(extendedPrice)).append("\n");
    sb.append("    taxAmount: ").append(toIndentedString(taxAmount)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    quantityOrdered: ").append(toIndentedString(quantityOrdered)).append("\n");
    sb.append("    quantityConfirmed: ").append(toIndentedString(quantityConfirmed)).append("\n");
    sb.append("    quantityBackOrdered: ").append(toIndentedString(quantityBackOrdered)).append("\n");
    sb.append("    specialBidNumber: ").append(toIndentedString(specialBidNumber)).append("\n");
    sb.append("    requestedDeliverydate: ").append(toIndentedString(requestedDeliverydate)).append("\n");
    sb.append("    promisedDeliveryDate: ").append(toIndentedString(promisedDeliveryDate)).append("\n");
    sb.append("    backOrderETADate: ").append(toIndentedString(backOrderETADate)).append("\n");
    sb.append("    lineNotes: ").append(toIndentedString(lineNotes)).append("\n");
    sb.append("    shipmentDetails: ").append(toIndentedString(shipmentDetails)).append("\n");
    sb.append("    serviceContractInfo: ").append(toIndentedString(serviceContractInfo)).append("\n");
    sb.append("    additionalAttributes: ").append(toIndentedString(additionalAttributes)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    estimatedDates: ").append(toIndentedString(estimatedDates)).append("\n");
    sb.append("    scheduleLines: ").append(toIndentedString(scheduleLines)).append("\n");
    sb.append("    multipleShipments: ").append(toIndentedString(multipleShipments)).append("\n");
    sb.append("    defaultCarrierName: ").append(toIndentedString(defaultCarrierName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("subOrderNumber");
    openapiFields.add("ingramOrderLineNumber");
    openapiFields.add("vendorSalesOrderLineNumber");
    openapiFields.add("customerLineNumber");
    openapiFields.add("lineStatus");
    openapiFields.add("ingramPartNumber");
    openapiFields.add("vendorPartNumber");
    openapiFields.add("vendorName");
    openapiFields.add("partDescription");
    openapiFields.add("unitWeight");
    openapiFields.add("weightUom");
    openapiFields.add("unitPrice");
    openapiFields.add("upcCode");
    openapiFields.add("extendedPrice");
    openapiFields.add("taxAmount");
    openapiFields.add("currencyCode");
    openapiFields.add("quantityOrdered");
    openapiFields.add("quantityConfirmed");
    openapiFields.add("quantityBackOrdered");
    openapiFields.add("specialBidNumber");
    openapiFields.add("requestedDeliverydate");
    openapiFields.add("promisedDeliveryDate");
    openapiFields.add("backOrderETADate");
    openapiFields.add("lineNotes");
    openapiFields.add("shipmentDetails");
    openapiFields.add("serviceContractInfo");
    openapiFields.add("additionalAttributes");
    openapiFields.add("links");
    openapiFields.add("estimatedDates");
    openapiFields.add("scheduleLines");
    openapiFields.add("multipleShipments");
    openapiFields.add("defaultCarrierName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OrderDetailB2BLinesInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrderDetailB2BLinesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderDetailB2BLinesInner is not found in the empty JSON string", OrderDetailB2BLinesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrderDetailB2BLinesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderDetailB2BLinesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("subOrderNumber") != null && !jsonObj.get("subOrderNumber").isJsonNull()) && !jsonObj.get("subOrderNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subOrderNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subOrderNumber").toString()));
      }
      if ((jsonObj.get("ingramOrderLineNumber") != null && !jsonObj.get("ingramOrderLineNumber").isJsonNull()) && !jsonObj.get("ingramOrderLineNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ingramOrderLineNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ingramOrderLineNumber").toString()));
      }
      if ((jsonObj.get("vendorSalesOrderLineNumber") != null && !jsonObj.get("vendorSalesOrderLineNumber").isJsonNull()) && !jsonObj.get("vendorSalesOrderLineNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vendorSalesOrderLineNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vendorSalesOrderLineNumber").toString()));
      }
      if ((jsonObj.get("customerLineNumber") != null && !jsonObj.get("customerLineNumber").isJsonNull()) && !jsonObj.get("customerLineNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerLineNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerLineNumber").toString()));
      }
      if ((jsonObj.get("lineStatus") != null && !jsonObj.get("lineStatus").isJsonNull()) && !jsonObj.get("lineStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lineStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lineStatus").toString()));
      }
      if ((jsonObj.get("ingramPartNumber") != null && !jsonObj.get("ingramPartNumber").isJsonNull()) && !jsonObj.get("ingramPartNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ingramPartNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ingramPartNumber").toString()));
      }
      if ((jsonObj.get("vendorPartNumber") != null && !jsonObj.get("vendorPartNumber").isJsonNull()) && !jsonObj.get("vendorPartNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vendorPartNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vendorPartNumber").toString()));
      }
      if ((jsonObj.get("vendorName") != null && !jsonObj.get("vendorName").isJsonNull()) && !jsonObj.get("vendorName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vendorName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vendorName").toString()));
      }
      if ((jsonObj.get("partDescription") != null && !jsonObj.get("partDescription").isJsonNull()) && !jsonObj.get("partDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `partDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("partDescription").toString()));
      }
      if ((jsonObj.get("weightUom") != null && !jsonObj.get("weightUom").isJsonNull()) && !jsonObj.get("weightUom").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `weightUom` to be a primitive type in the JSON string but got `%s`", jsonObj.get("weightUom").toString()));
      }
      if ((jsonObj.get("upcCode") != null && !jsonObj.get("upcCode").isJsonNull()) && !jsonObj.get("upcCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `upcCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("upcCode").toString()));
      }
      if ((jsonObj.get("currencyCode") != null && !jsonObj.get("currencyCode").isJsonNull()) && !jsonObj.get("currencyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyCode").toString()));
      }
      if ((jsonObj.get("specialBidNumber") != null && !jsonObj.get("specialBidNumber").isJsonNull()) && !jsonObj.get("specialBidNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `specialBidNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("specialBidNumber").toString()));
      }
      if ((jsonObj.get("requestedDeliverydate") != null && !jsonObj.get("requestedDeliverydate").isJsonNull()) && !jsonObj.get("requestedDeliverydate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `requestedDeliverydate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("requestedDeliverydate").toString()));
      }
      if ((jsonObj.get("promisedDeliveryDate") != null && !jsonObj.get("promisedDeliveryDate").isJsonNull()) && !jsonObj.get("promisedDeliveryDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `promisedDeliveryDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("promisedDeliveryDate").toString()));
      }
      if ((jsonObj.get("backOrderETADate") != null && !jsonObj.get("backOrderETADate").isJsonNull()) && !jsonObj.get("backOrderETADate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `backOrderETADate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("backOrderETADate").toString()));
      }
      if ((jsonObj.get("lineNotes") != null && !jsonObj.get("lineNotes").isJsonNull()) && !jsonObj.get("lineNotes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lineNotes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lineNotes").toString()));
      }
      if (jsonObj.get("shipmentDetails") != null && !jsonObj.get("shipmentDetails").isJsonNull()) {
        JsonArray jsonArrayshipmentDetails = jsonObj.getAsJsonArray("shipmentDetails");
        if (jsonArrayshipmentDetails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("shipmentDetails").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `shipmentDetails` to be an array in the JSON string but got `%s`", jsonObj.get("shipmentDetails").toString()));
          }

          // validate the optional field `shipmentDetails` (array)
          for (int i = 0; i < jsonArrayshipmentDetails.size(); i++) {
            OrderDetailB2BLinesInnerShipmentDetailsInner.validateJsonElement(jsonArrayshipmentDetails.get(i));
          };
        }
      }
      // validate the optional field `serviceContractInfo`
      if (jsonObj.get("serviceContractInfo") != null && !jsonObj.get("serviceContractInfo").isJsonNull()) {
        OrderDetailB2BLinesInnerServiceContractInfo.validateJsonElement(jsonObj.get("serviceContractInfo"));
      }
      if (jsonObj.get("additionalAttributes") != null && !jsonObj.get("additionalAttributes").isJsonNull()) {
        JsonArray jsonArrayadditionalAttributes = jsonObj.getAsJsonArray("additionalAttributes");
        if (jsonArrayadditionalAttributes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("additionalAttributes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `additionalAttributes` to be an array in the JSON string but got `%s`", jsonObj.get("additionalAttributes").toString()));
          }

          // validate the optional field `additionalAttributes` (array)
          for (int i = 0; i < jsonArrayadditionalAttributes.size(); i++) {
            OrderDetailB2BLinesInnerAdditionalAttributesInner.validateJsonElement(jsonArrayadditionalAttributes.get(i));
          };
        }
      }
      if (jsonObj.get("links") != null && !jsonObj.get("links").isJsonNull()) {
        JsonArray jsonArraylinks = jsonObj.getAsJsonArray("links");
        if (jsonArraylinks != null) {
          // ensure the json data is an array
          if (!jsonObj.get("links").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `links` to be an array in the JSON string but got `%s`", jsonObj.get("links").toString()));
          }

          // validate the optional field `links` (array)
          for (int i = 0; i < jsonArraylinks.size(); i++) {
            OrderDetailB2BLinesInnerLinksInner.validateJsonElement(jsonArraylinks.get(i));
          };
        }
      }
      if (jsonObj.get("estimatedDates") != null && !jsonObj.get("estimatedDates").isJsonNull()) {
        JsonArray jsonArrayestimatedDates = jsonObj.getAsJsonArray("estimatedDates");
        if (jsonArrayestimatedDates != null) {
          // ensure the json data is an array
          if (!jsonObj.get("estimatedDates").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `estimatedDates` to be an array in the JSON string but got `%s`", jsonObj.get("estimatedDates").toString()));
          }

          // validate the optional field `estimatedDates` (array)
          for (int i = 0; i < jsonArrayestimatedDates.size(); i++) {
            OrderDetailB2BLinesInnerEstimatedDatesInner.validateJsonElement(jsonArrayestimatedDates.get(i));
          };
        }
      }
      if (jsonObj.get("scheduleLines") != null && !jsonObj.get("scheduleLines").isJsonNull()) {
        JsonArray jsonArrayscheduleLines = jsonObj.getAsJsonArray("scheduleLines");
        if (jsonArrayscheduleLines != null) {
          // ensure the json data is an array
          if (!jsonObj.get("scheduleLines").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `scheduleLines` to be an array in the JSON string but got `%s`", jsonObj.get("scheduleLines").toString()));
          }

          // validate the optional field `scheduleLines` (array)
          for (int i = 0; i < jsonArrayscheduleLines.size(); i++) {
            OrderDetailB2BLinesInnerScheduleLinesInner.validateJsonElement(jsonArrayscheduleLines.get(i));
          };
        }
      }
      if (jsonObj.get("multipleShipments") != null && !jsonObj.get("multipleShipments").isJsonNull()) {
        JsonArray jsonArraymultipleShipments = jsonObj.getAsJsonArray("multipleShipments");
        if (jsonArraymultipleShipments != null) {
          // ensure the json data is an array
          if (!jsonObj.get("multipleShipments").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `multipleShipments` to be an array in the JSON string but got `%s`", jsonObj.get("multipleShipments").toString()));
          }

          // validate the optional field `multipleShipments` (array)
          for (int i = 0; i < jsonArraymultipleShipments.size(); i++) {
            OrderDetailB2BLinesInnerMultipleShipmentsInner.validateJsonElement(jsonArraymultipleShipments.get(i));
          };
        }
      }
      if ((jsonObj.get("defaultCarrierName") != null && !jsonObj.get("defaultCarrierName").isJsonNull()) && !jsonObj.get("defaultCarrierName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultCarrierName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultCarrierName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderDetailB2BLinesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderDetailB2BLinesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderDetailB2BLinesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderDetailB2BLinesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderDetailB2BLinesInner>() {
           @Override
           public void write(JsonWriter out, OrderDetailB2BLinesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderDetailB2BLinesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OrderDetailB2BLinesInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OrderDetailB2BLinesInner
   * @throws IOException if the JSON string is invalid with respect to OrderDetailB2BLinesInner
   */
  public static OrderDetailB2BLinesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderDetailB2BLinesInner.class);
  }

  /**
   * Convert an instance of OrderDetailB2BLinesInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

