/*
 * XI Sdk Resellers
 * For resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of API's and webhooks to craft a seamless journey for your customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package xiresellers.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import xiresellers.client.model.PriceAndAvailabilityResponseInnerAvailability;
import xiresellers.client.model.PriceAndAvailabilityResponseInnerDiscountsInner;
import xiresellers.client.model.PriceAndAvailabilityResponseInnerPricing;
import xiresellers.client.model.PriceAndAvailabilityResponseInnerReserveInventoryDetailsInner;
import xiresellers.client.model.PriceAndAvailabilityResponseInnerServiceFeesInner;
import xiresellers.client.model.PriceAndAvailabilityResponseInnerSubscriptionPriceInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import xiresellers.client.JSON;

/**
 * PriceAndAvailabilityResponseInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-11T10:16:59.765249Z[Etc/UTC]", comments = "Generator version: 7.9.0")
public class PriceAndAvailabilityResponseInner {
  public static final String SERIALIZED_NAME_INDEX = "index";
  @SerializedName(SERIALIZED_NAME_INDEX)
  private BigDecimal index;

  public static final String SERIALIZED_NAME_PRODUCT_STATUS_CODE = "productStatusCode";
  @SerializedName(SERIALIZED_NAME_PRODUCT_STATUS_CODE)
  private String productStatusCode;

  public static final String SERIALIZED_NAME_PRODUCT_STATUS_MESSAGE = "productStatusMessage";
  @SerializedName(SERIALIZED_NAME_PRODUCT_STATUS_MESSAGE)
  private String productStatusMessage;

  public static final String SERIALIZED_NAME_INGRAM_PART_NUMBER = "ingramPartNumber";
  @SerializedName(SERIALIZED_NAME_INGRAM_PART_NUMBER)
  private String ingramPartNumber;

  public static final String SERIALIZED_NAME_VENDOR_PART_NUMBER = "vendorPartNumber";
  @SerializedName(SERIALIZED_NAME_VENDOR_PART_NUMBER)
  private String vendorPartNumber;

  public static final String SERIALIZED_NAME_EXTENDED_VENDOR_PART_NUMBER = "extendedVendorPartNumber";
  @SerializedName(SERIALIZED_NAME_EXTENDED_VENDOR_PART_NUMBER)
  private String extendedVendorPartNumber;

  public static final String SERIALIZED_NAME_CUSTOMER_PART_NUMBER = "customerPartNumber";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_PART_NUMBER)
  private String customerPartNumber;

  public static final String SERIALIZED_NAME_UPC = "upc";
  @SerializedName(SERIALIZED_NAME_UPC)
  private String upc;

  public static final String SERIALIZED_NAME_PART_NUMBER_TYPE = "partNumberType";
  @SerializedName(SERIALIZED_NAME_PART_NUMBER_TYPE)
  private String partNumberType;

  public static final String SERIALIZED_NAME_VENDOR_NUMBER = "vendorNumber";
  @SerializedName(SERIALIZED_NAME_VENDOR_NUMBER)
  private String vendorNumber;

  public static final String SERIALIZED_NAME_VENDOR_NAME = "vendorName";
  @SerializedName(SERIALIZED_NAME_VENDOR_NAME)
  private String vendorName;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_PRODUCT_CLASS = "productClass";
  @SerializedName(SERIALIZED_NAME_PRODUCT_CLASS)
  private String productClass;

  public static final String SERIALIZED_NAME_UOM = "uom";
  @SerializedName(SERIALIZED_NAME_UOM)
  private String uom;

  public static final String SERIALIZED_NAME_PRODUCT_STATUS = "productStatus";
  @SerializedName(SERIALIZED_NAME_PRODUCT_STATUS)
  private String productStatus;

  public static final String SERIALIZED_NAME_ACCEPT_BACK_ORDER = "acceptBackOrder";
  @SerializedName(SERIALIZED_NAME_ACCEPT_BACK_ORDER)
  private Boolean acceptBackOrder;

  public static final String SERIALIZED_NAME_PRODUCT_AUTHORIZED = "productAuthorized";
  @SerializedName(SERIALIZED_NAME_PRODUCT_AUTHORIZED)
  private Boolean productAuthorized;

  public static final String SERIALIZED_NAME_RETURNABLE_PRODUCT = "returnableProduct";
  @SerializedName(SERIALIZED_NAME_RETURNABLE_PRODUCT)
  private Boolean returnableProduct;

  public static final String SERIALIZED_NAME_END_USER_INFO_REQUIRED = "endUserInfoRequired";
  @SerializedName(SERIALIZED_NAME_END_USER_INFO_REQUIRED)
  private Boolean endUserInfoRequired;

  public static final String SERIALIZED_NAME_GOVT_SPECIAL_PRICE_AVAILABLE = "govtSpecialPriceAvailable";
  @SerializedName(SERIALIZED_NAME_GOVT_SPECIAL_PRICE_AVAILABLE)
  private Boolean govtSpecialPriceAvailable;

  public static final String SERIALIZED_NAME_GOVT_PROGRAM_TYPE = "govtProgramType";
  @SerializedName(SERIALIZED_NAME_GOVT_PROGRAM_TYPE)
  private String govtProgramType;

  public static final String SERIALIZED_NAME_GOVT_END_USER_TYPE = "govtEndUserType";
  @SerializedName(SERIALIZED_NAME_GOVT_END_USER_TYPE)
  private String govtEndUserType;

  public static final String SERIALIZED_NAME_AVAILABILITY = "availability";
  @SerializedName(SERIALIZED_NAME_AVAILABILITY)
  private PriceAndAvailabilityResponseInnerAvailability availability;

  public static final String SERIALIZED_NAME_RESERVE_INVENTORY_DETAILS = "reserveInventoryDetails";
  @SerializedName(SERIALIZED_NAME_RESERVE_INVENTORY_DETAILS)
  private List<PriceAndAvailabilityResponseInnerReserveInventoryDetailsInner> reserveInventoryDetails = new ArrayList<>();

  public static final String SERIALIZED_NAME_PRICING = "pricing";
  @SerializedName(SERIALIZED_NAME_PRICING)
  private PriceAndAvailabilityResponseInnerPricing pricing;

  public static final String SERIALIZED_NAME_DISCOUNTS = "discounts";
  @SerializedName(SERIALIZED_NAME_DISCOUNTS)
  private List<PriceAndAvailabilityResponseInnerDiscountsInner> discounts;

  public static final String SERIALIZED_NAME_BUNDLE_PART_INDICATOR = "bundlePartIndicator";
  @SerializedName(SERIALIZED_NAME_BUNDLE_PART_INDICATOR)
  private Boolean bundlePartIndicator;

  public static final String SERIALIZED_NAME_SERVICE_FEES = "serviceFees";
  @SerializedName(SERIALIZED_NAME_SERVICE_FEES)
  private List<PriceAndAvailabilityResponseInnerServiceFeesInner> serviceFees;

  public static final String SERIALIZED_NAME_SUBSCRIPTION_PRICE = "subscriptionPrice";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_PRICE)
  private List<PriceAndAvailabilityResponseInnerSubscriptionPriceInner> subscriptionPrice = new ArrayList<>();

  public PriceAndAvailabilityResponseInner() {
  }

  public PriceAndAvailabilityResponseInner index(BigDecimal index) {
    this.index = index;
    return this;
  }

  /**
   * Get index
   * @return index
   */
  @javax.annotation.Nullable
  public BigDecimal getIndex() {
    return index;
  }

  public void setIndex(BigDecimal index) {
    this.index = index;
  }


  public PriceAndAvailabilityResponseInner productStatusCode(String productStatusCode) {
    this.productStatusCode = productStatusCode;
    return this;
  }

  /**
   * Codes signifying whether the sku is active or not.
   * @return productStatusCode
   */
  @javax.annotation.Nullable
  public String getProductStatusCode() {
    return productStatusCode;
  }

  public void setProductStatusCode(String productStatusCode) {
    this.productStatusCode = productStatusCode;
  }


  public PriceAndAvailabilityResponseInner productStatusMessage(String productStatusMessage) {
    this.productStatusMessage = productStatusMessage;
    return this;
  }

  /**
   * Message returned saying whether sku is active.
   * @return productStatusMessage
   */
  @javax.annotation.Nullable
  public String getProductStatusMessage() {
    return productStatusMessage;
  }

  public void setProductStatusMessage(String productStatusMessage) {
    this.productStatusMessage = productStatusMessage;
  }


  public PriceAndAvailabilityResponseInner ingramPartNumber(String ingramPartNumber) {
    this.ingramPartNumber = ingramPartNumber;
    return this;
  }

  /**
   * Ingram Micro unique part number for the product.
   * @return ingramPartNumber
   */
  @javax.annotation.Nullable
  public String getIngramPartNumber() {
    return ingramPartNumber;
  }

  public void setIngramPartNumber(String ingramPartNumber) {
    this.ingramPartNumber = ingramPartNumber;
  }


  public PriceAndAvailabilityResponseInner vendorPartNumber(String vendorPartNumber) {
    this.vendorPartNumber = vendorPartNumber;
    return this;
  }

  /**
   * Vendor’s part number for the product.
   * @return vendorPartNumber
   */
  @javax.annotation.Nullable
  public String getVendorPartNumber() {
    return vendorPartNumber;
  }

  public void setVendorPartNumber(String vendorPartNumber) {
    this.vendorPartNumber = vendorPartNumber;
  }


  public PriceAndAvailabilityResponseInner extendedVendorPartNumber(String extendedVendorPartNumber) {
    this.extendedVendorPartNumber = extendedVendorPartNumber;
    return this;
  }

  /**
   * Extended Vendor Part Number. *Currently, this feature is not available in these countries (Mexico, Turkey, New Zealand, Colombia, Chile, Brazil, Peru, Western Sahara).
   * @return extendedVendorPartNumber
   */
  @javax.annotation.Nullable
  public String getExtendedVendorPartNumber() {
    return extendedVendorPartNumber;
  }

  public void setExtendedVendorPartNumber(String extendedVendorPartNumber) {
    this.extendedVendorPartNumber = extendedVendorPartNumber;
  }


  public PriceAndAvailabilityResponseInner customerPartNumber(String customerPartNumber) {
    this.customerPartNumber = customerPartNumber;
    return this;
  }

  /**
   * Reseller / end-user’s part number for the product.
   * @return customerPartNumber
   */
  @javax.annotation.Nullable
  public String getCustomerPartNumber() {
    return customerPartNumber;
  }

  public void setCustomerPartNumber(String customerPartNumber) {
    this.customerPartNumber = customerPartNumber;
  }


  public PriceAndAvailabilityResponseInner upc(String upc) {
    this.upc = upc;
    return this;
  }

  /**
   * The UPC code for the product. Consists of 12 numeric digits that are uniquely assigned to each trade item.
   * @return upc
   */
  @javax.annotation.Nullable
  public String getUpc() {
    return upc;
  }

  public void setUpc(String upc) {
    this.upc = upc;
  }


  public PriceAndAvailabilityResponseInner partNumberType(String partNumberType) {
    this.partNumberType = partNumberType;
    return this;
  }

  /**
   * Number type of the part.
   * @return partNumberType
   */
  @javax.annotation.Nullable
  public String getPartNumberType() {
    return partNumberType;
  }

  public void setPartNumberType(String partNumberType) {
    this.partNumberType = partNumberType;
  }


  public PriceAndAvailabilityResponseInner vendorNumber(String vendorNumber) {
    this.vendorNumber = vendorNumber;
    return this;
  }

  /**
   * Vendor number that identifies the product.
   * @return vendorNumber
   */
  @javax.annotation.Nullable
  public String getVendorNumber() {
    return vendorNumber;
  }

  public void setVendorNumber(String vendorNumber) {
    this.vendorNumber = vendorNumber;
  }


  public PriceAndAvailabilityResponseInner vendorName(String vendorName) {
    this.vendorName = vendorName;
    return this;
  }

  /**
   * Vendor name for the order.
   * @return vendorName
   */
  @javax.annotation.Nullable
  public String getVendorName() {
    return vendorName;
  }

  public void setVendorName(String vendorName) {
    this.vendorName = vendorName;
  }


  public PriceAndAvailabilityResponseInner description(String description) {
    this.description = description;
    return this;
  }

  /**
   * The description given for the product.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public PriceAndAvailabilityResponseInner productClass(String productClass) {
    this.productClass = productClass;
    return this;
  }

  /**
   * Indicates whether the product is directly shipped from the vendor’s warehouse or if the product ships from Ingram Micro’s warehouse. Class Codes are Ingram classifications on how skus are stocked A &#x3D; Product that is stocked usually in all IM warehouses and replenished on a regular basis. B &#x3D; Product that is stocked in limited IM warehouses and replenished on a regular basis C &#x3D; Product that is stocked in fewer IM warehouses and replenished on a regular basis. D &#x3D; Product that Ingram Micro has elected to discontinue. E &#x3D; Product that will be phased out later, according to the vendor. You may not want to replenish this product, but instead sell down what is in stock. F &#x3D; Product that we carry for a specific customer or supplier under a contractual agreement. N &#x3D; New Sku. Classification before first receipt O &#x3D; Discontinued product to be liquidated S&#x3D; Order for Specialized Demand (Order to backorder) X&#x3D; direct ship from Vendor V &#x3D; product that vendor has elected to discontinue.
   * @return productClass
   */
  @javax.annotation.Nullable
  public String getProductClass() {
    return productClass;
  }

  public void setProductClass(String productClass) {
    this.productClass = productClass;
  }


  public PriceAndAvailabilityResponseInner uom(String uom) {
    this.uom = uom;
    return this;
  }

  /**
   * The description given for the product.
   * @return uom
   */
  @javax.annotation.Nullable
  public String getUom() {
    return uom;
  }

  public void setUom(String uom) {
    this.uom = uom;
  }


  public PriceAndAvailabilityResponseInner productStatus(String productStatus) {
    this.productStatus = productStatus;
    return this;
  }

  /**
   * Status that gives whether the product is Active.
   * @return productStatus
   */
  @javax.annotation.Nullable
  public String getProductStatus() {
    return productStatus;
  }

  public void setProductStatus(String productStatus) {
    this.productStatus = productStatus;
  }


  public PriceAndAvailabilityResponseInner acceptBackOrder(Boolean acceptBackOrder) {
    this.acceptBackOrder = acceptBackOrder;
    return this;
  }

  /**
   * Boolean that indicates if the product accepts backorder.
   * @return acceptBackOrder
   */
  @javax.annotation.Nullable
  public Boolean getAcceptBackOrder() {
    return acceptBackOrder;
  }

  public void setAcceptBackOrder(Boolean acceptBackOrder) {
    this.acceptBackOrder = acceptBackOrder;
  }


  public PriceAndAvailabilityResponseInner productAuthorized(Boolean productAuthorized) {
    this.productAuthorized = productAuthorized;
    return this;
  }

  /**
   * Boolean that indicates whether a product is authorized.
   * @return productAuthorized
   */
  @javax.annotation.Nullable
  public Boolean getProductAuthorized() {
    return productAuthorized;
  }

  public void setProductAuthorized(Boolean productAuthorized) {
    this.productAuthorized = productAuthorized;
  }


  public PriceAndAvailabilityResponseInner returnableProduct(Boolean returnableProduct) {
    this.returnableProduct = returnableProduct;
    return this;
  }

  /**
   * Boolean that indicates if the product can be returned.
   * @return returnableProduct
   */
  @javax.annotation.Nullable
  public Boolean getReturnableProduct() {
    return returnableProduct;
  }

  public void setReturnableProduct(Boolean returnableProduct) {
    this.returnableProduct = returnableProduct;
  }


  public PriceAndAvailabilityResponseInner endUserInfoRequired(Boolean endUserInfoRequired) {
    this.endUserInfoRequired = endUserInfoRequired;
    return this;
  }

  /**
   * Boolean that indicates  if end user information is required.
   * @return endUserInfoRequired
   */
  @javax.annotation.Nullable
  public Boolean getEndUserInfoRequired() {
    return endUserInfoRequired;
  }

  public void setEndUserInfoRequired(Boolean endUserInfoRequired) {
    this.endUserInfoRequired = endUserInfoRequired;
  }


  public PriceAndAvailabilityResponseInner govtSpecialPriceAvailable(Boolean govtSpecialPriceAvailable) {
    this.govtSpecialPriceAvailable = govtSpecialPriceAvailable;
    return this;
  }

  /**
   * Boolean that indicates if special pricing is available for the product.
   * @return govtSpecialPriceAvailable
   */
  @javax.annotation.Nullable
  public Boolean getGovtSpecialPriceAvailable() {
    return govtSpecialPriceAvailable;
  }

  public void setGovtSpecialPriceAvailable(Boolean govtSpecialPriceAvailable) {
    this.govtSpecialPriceAvailable = govtSpecialPriceAvailable;
  }


  public PriceAndAvailabilityResponseInner govtProgramType(String govtProgramType) {
    this.govtProgramType = govtProgramType;
    return this;
  }

  /**
   * Program type, “PA” for government orders, “ED” for education order.
   * @return govtProgramType
   */
  @javax.annotation.Nullable
  public String getGovtProgramType() {
    return govtProgramType;
  }

  public void setGovtProgramType(String govtProgramType) {
    this.govtProgramType = govtProgramType;
  }


  public PriceAndAvailabilityResponseInner govtEndUserType(String govtEndUserType) {
    this.govtEndUserType = govtEndUserType;
    return this;
  }

  /**
   * Type of end user of the program. F &#x3D; Federal, S &#x3D; State, E &#x3D; Local, K &#x3D; K-12 school, and H &#x3D; Higher Education.
   * @return govtEndUserType
   */
  @javax.annotation.Nullable
  public String getGovtEndUserType() {
    return govtEndUserType;
  }

  public void setGovtEndUserType(String govtEndUserType) {
    this.govtEndUserType = govtEndUserType;
  }


  public PriceAndAvailabilityResponseInner availability(PriceAndAvailabilityResponseInnerAvailability availability) {
    this.availability = availability;
    return this;
  }

  /**
   * Get availability
   * @return availability
   */
  @javax.annotation.Nullable
  public PriceAndAvailabilityResponseInnerAvailability getAvailability() {
    return availability;
  }

  public void setAvailability(PriceAndAvailabilityResponseInnerAvailability availability) {
    this.availability = availability;
  }


  public PriceAndAvailabilityResponseInner reserveInventoryDetails(List<PriceAndAvailabilityResponseInnerReserveInventoryDetailsInner> reserveInventoryDetails) {
    this.reserveInventoryDetails = reserveInventoryDetails;
    return this;
  }

  public PriceAndAvailabilityResponseInner addReserveInventoryDetailsItem(PriceAndAvailabilityResponseInnerReserveInventoryDetailsInner reserveInventoryDetailsItem) {
    if (this.reserveInventoryDetails == null) {
      this.reserveInventoryDetails = new ArrayList<>();
    }
    this.reserveInventoryDetails.add(reserveInventoryDetailsItem);
    return this;
  }

  /**
   * Get reserveInventoryDetails
   * @return reserveInventoryDetails
   */
  @javax.annotation.Nullable
  public List<PriceAndAvailabilityResponseInnerReserveInventoryDetailsInner> getReserveInventoryDetails() {
    return reserveInventoryDetails;
  }

  public void setReserveInventoryDetails(List<PriceAndAvailabilityResponseInnerReserveInventoryDetailsInner> reserveInventoryDetails) {
    this.reserveInventoryDetails = reserveInventoryDetails;
  }


  public PriceAndAvailabilityResponseInner pricing(PriceAndAvailabilityResponseInnerPricing pricing) {
    this.pricing = pricing;
    return this;
  }

  /**
   * Get pricing
   * @return pricing
   */
  @javax.annotation.Nullable
  public PriceAndAvailabilityResponseInnerPricing getPricing() {
    return pricing;
  }

  public void setPricing(PriceAndAvailabilityResponseInnerPricing pricing) {
    this.pricing = pricing;
  }


  public PriceAndAvailabilityResponseInner discounts(List<PriceAndAvailabilityResponseInnerDiscountsInner> discounts) {
    this.discounts = discounts;
    return this;
  }

  public PriceAndAvailabilityResponseInner addDiscountsItem(PriceAndAvailabilityResponseInnerDiscountsInner discountsItem) {
    if (this.discounts == null) {
      this.discounts = new ArrayList<>();
    }
    this.discounts.add(discountsItem);
    return this;
  }

  /**
   * Get discounts
   * @return discounts
   */
  @javax.annotation.Nullable
  public List<PriceAndAvailabilityResponseInnerDiscountsInner> getDiscounts() {
    return discounts;
  }

  public void setDiscounts(List<PriceAndAvailabilityResponseInnerDiscountsInner> discounts) {
    this.discounts = discounts;
  }


  public PriceAndAvailabilityResponseInner bundlePartIndicator(Boolean bundlePartIndicator) {
    this.bundlePartIndicator = bundlePartIndicator;
    return this;
  }

  /**
   * True of false value to indicate whether it’s bundle part. *Currently, this feature is not available in these countries (Mexico, Turkey, New Zealand, Colombia, Chile, Brazil, Peru, Western Sahara).
   * @return bundlePartIndicator
   */
  @javax.annotation.Nullable
  public Boolean getBundlePartIndicator() {
    return bundlePartIndicator;
  }

  public void setBundlePartIndicator(Boolean bundlePartIndicator) {
    this.bundlePartIndicator = bundlePartIndicator;
  }


  public PriceAndAvailabilityResponseInner serviceFees(List<PriceAndAvailabilityResponseInnerServiceFeesInner> serviceFees) {
    this.serviceFees = serviceFees;
    return this;
  }

  public PriceAndAvailabilityResponseInner addServiceFeesItem(PriceAndAvailabilityResponseInnerServiceFeesInner serviceFeesItem) {
    if (this.serviceFees == null) {
      this.serviceFees = new ArrayList<>();
    }
    this.serviceFees.add(serviceFeesItem);
    return this;
  }

  /**
   * *Currently, this feature is not available in these countries (Mexico, Turkey, New Zealand, Colombia, Chile, Brazil, Peru, Western Sahara).
   * @return serviceFees
   */
  @javax.annotation.Nullable
  public List<PriceAndAvailabilityResponseInnerServiceFeesInner> getServiceFees() {
    return serviceFees;
  }

  public void setServiceFees(List<PriceAndAvailabilityResponseInnerServiceFeesInner> serviceFees) {
    this.serviceFees = serviceFees;
  }


  public PriceAndAvailabilityResponseInner subscriptionPrice(List<PriceAndAvailabilityResponseInnerSubscriptionPriceInner> subscriptionPrice) {
    this.subscriptionPrice = subscriptionPrice;
    return this;
  }

  public PriceAndAvailabilityResponseInner addSubscriptionPriceItem(PriceAndAvailabilityResponseInnerSubscriptionPriceInner subscriptionPriceItem) {
    if (this.subscriptionPrice == null) {
      this.subscriptionPrice = new ArrayList<>();
    }
    this.subscriptionPrice.add(subscriptionPriceItem);
    return this;
  }

  /**
   * Get subscriptionPrice
   * @return subscriptionPrice
   */
  @javax.annotation.Nullable
  public List<PriceAndAvailabilityResponseInnerSubscriptionPriceInner> getSubscriptionPrice() {
    return subscriptionPrice;
  }

  public void setSubscriptionPrice(List<PriceAndAvailabilityResponseInnerSubscriptionPriceInner> subscriptionPrice) {
    this.subscriptionPrice = subscriptionPrice;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PriceAndAvailabilityResponseInner priceAndAvailabilityResponseInner = (PriceAndAvailabilityResponseInner) o;
    return Objects.equals(this.index, priceAndAvailabilityResponseInner.index) &&
        Objects.equals(this.productStatusCode, priceAndAvailabilityResponseInner.productStatusCode) &&
        Objects.equals(this.productStatusMessage, priceAndAvailabilityResponseInner.productStatusMessage) &&
        Objects.equals(this.ingramPartNumber, priceAndAvailabilityResponseInner.ingramPartNumber) &&
        Objects.equals(this.vendorPartNumber, priceAndAvailabilityResponseInner.vendorPartNumber) &&
        Objects.equals(this.extendedVendorPartNumber, priceAndAvailabilityResponseInner.extendedVendorPartNumber) &&
        Objects.equals(this.customerPartNumber, priceAndAvailabilityResponseInner.customerPartNumber) &&
        Objects.equals(this.upc, priceAndAvailabilityResponseInner.upc) &&
        Objects.equals(this.partNumberType, priceAndAvailabilityResponseInner.partNumberType) &&
        Objects.equals(this.vendorNumber, priceAndAvailabilityResponseInner.vendorNumber) &&
        Objects.equals(this.vendorName, priceAndAvailabilityResponseInner.vendorName) &&
        Objects.equals(this.description, priceAndAvailabilityResponseInner.description) &&
        Objects.equals(this.productClass, priceAndAvailabilityResponseInner.productClass) &&
        Objects.equals(this.uom, priceAndAvailabilityResponseInner.uom) &&
        Objects.equals(this.productStatus, priceAndAvailabilityResponseInner.productStatus) &&
        Objects.equals(this.acceptBackOrder, priceAndAvailabilityResponseInner.acceptBackOrder) &&
        Objects.equals(this.productAuthorized, priceAndAvailabilityResponseInner.productAuthorized) &&
        Objects.equals(this.returnableProduct, priceAndAvailabilityResponseInner.returnableProduct) &&
        Objects.equals(this.endUserInfoRequired, priceAndAvailabilityResponseInner.endUserInfoRequired) &&
        Objects.equals(this.govtSpecialPriceAvailable, priceAndAvailabilityResponseInner.govtSpecialPriceAvailable) &&
        Objects.equals(this.govtProgramType, priceAndAvailabilityResponseInner.govtProgramType) &&
        Objects.equals(this.govtEndUserType, priceAndAvailabilityResponseInner.govtEndUserType) &&
        Objects.equals(this.availability, priceAndAvailabilityResponseInner.availability) &&
        Objects.equals(this.reserveInventoryDetails, priceAndAvailabilityResponseInner.reserveInventoryDetails) &&
        Objects.equals(this.pricing, priceAndAvailabilityResponseInner.pricing) &&
        Objects.equals(this.discounts, priceAndAvailabilityResponseInner.discounts) &&
        Objects.equals(this.bundlePartIndicator, priceAndAvailabilityResponseInner.bundlePartIndicator) &&
        Objects.equals(this.serviceFees, priceAndAvailabilityResponseInner.serviceFees) &&
        Objects.equals(this.subscriptionPrice, priceAndAvailabilityResponseInner.subscriptionPrice);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(index, productStatusCode, productStatusMessage, ingramPartNumber, vendorPartNumber, extendedVendorPartNumber, customerPartNumber, upc, partNumberType, vendorNumber, vendorName, description, productClass, uom, productStatus, acceptBackOrder, productAuthorized, returnableProduct, endUserInfoRequired, govtSpecialPriceAvailable, govtProgramType, govtEndUserType, availability, reserveInventoryDetails, pricing, discounts, bundlePartIndicator, serviceFees, subscriptionPrice);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PriceAndAvailabilityResponseInner {\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    productStatusCode: ").append(toIndentedString(productStatusCode)).append("\n");
    sb.append("    productStatusMessage: ").append(toIndentedString(productStatusMessage)).append("\n");
    sb.append("    ingramPartNumber: ").append(toIndentedString(ingramPartNumber)).append("\n");
    sb.append("    vendorPartNumber: ").append(toIndentedString(vendorPartNumber)).append("\n");
    sb.append("    extendedVendorPartNumber: ").append(toIndentedString(extendedVendorPartNumber)).append("\n");
    sb.append("    customerPartNumber: ").append(toIndentedString(customerPartNumber)).append("\n");
    sb.append("    upc: ").append(toIndentedString(upc)).append("\n");
    sb.append("    partNumberType: ").append(toIndentedString(partNumberType)).append("\n");
    sb.append("    vendorNumber: ").append(toIndentedString(vendorNumber)).append("\n");
    sb.append("    vendorName: ").append(toIndentedString(vendorName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    productClass: ").append(toIndentedString(productClass)).append("\n");
    sb.append("    uom: ").append(toIndentedString(uom)).append("\n");
    sb.append("    productStatus: ").append(toIndentedString(productStatus)).append("\n");
    sb.append("    acceptBackOrder: ").append(toIndentedString(acceptBackOrder)).append("\n");
    sb.append("    productAuthorized: ").append(toIndentedString(productAuthorized)).append("\n");
    sb.append("    returnableProduct: ").append(toIndentedString(returnableProduct)).append("\n");
    sb.append("    endUserInfoRequired: ").append(toIndentedString(endUserInfoRequired)).append("\n");
    sb.append("    govtSpecialPriceAvailable: ").append(toIndentedString(govtSpecialPriceAvailable)).append("\n");
    sb.append("    govtProgramType: ").append(toIndentedString(govtProgramType)).append("\n");
    sb.append("    govtEndUserType: ").append(toIndentedString(govtEndUserType)).append("\n");
    sb.append("    availability: ").append(toIndentedString(availability)).append("\n");
    sb.append("    reserveInventoryDetails: ").append(toIndentedString(reserveInventoryDetails)).append("\n");
    sb.append("    pricing: ").append(toIndentedString(pricing)).append("\n");
    sb.append("    discounts: ").append(toIndentedString(discounts)).append("\n");
    sb.append("    bundlePartIndicator: ").append(toIndentedString(bundlePartIndicator)).append("\n");
    sb.append("    serviceFees: ").append(toIndentedString(serviceFees)).append("\n");
    sb.append("    subscriptionPrice: ").append(toIndentedString(subscriptionPrice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("index");
    openapiFields.add("productStatusCode");
    openapiFields.add("productStatusMessage");
    openapiFields.add("ingramPartNumber");
    openapiFields.add("vendorPartNumber");
    openapiFields.add("extendedVendorPartNumber");
    openapiFields.add("customerPartNumber");
    openapiFields.add("upc");
    openapiFields.add("partNumberType");
    openapiFields.add("vendorNumber");
    openapiFields.add("vendorName");
    openapiFields.add("description");
    openapiFields.add("productClass");
    openapiFields.add("uom");
    openapiFields.add("productStatus");
    openapiFields.add("acceptBackOrder");
    openapiFields.add("productAuthorized");
    openapiFields.add("returnableProduct");
    openapiFields.add("endUserInfoRequired");
    openapiFields.add("govtSpecialPriceAvailable");
    openapiFields.add("govtProgramType");
    openapiFields.add("govtEndUserType");
    openapiFields.add("availability");
    openapiFields.add("reserveInventoryDetails");
    openapiFields.add("pricing");
    openapiFields.add("discounts");
    openapiFields.add("bundlePartIndicator");
    openapiFields.add("serviceFees");
    openapiFields.add("subscriptionPrice");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PriceAndAvailabilityResponseInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PriceAndAvailabilityResponseInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PriceAndAvailabilityResponseInner is not found in the empty JSON string", PriceAndAvailabilityResponseInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PriceAndAvailabilityResponseInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PriceAndAvailabilityResponseInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("productStatusCode") != null && !jsonObj.get("productStatusCode").isJsonNull()) && !jsonObj.get("productStatusCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productStatusCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productStatusCode").toString()));
      }
      if ((jsonObj.get("productStatusMessage") != null && !jsonObj.get("productStatusMessage").isJsonNull()) && !jsonObj.get("productStatusMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productStatusMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productStatusMessage").toString()));
      }
      if ((jsonObj.get("ingramPartNumber") != null && !jsonObj.get("ingramPartNumber").isJsonNull()) && !jsonObj.get("ingramPartNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ingramPartNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ingramPartNumber").toString()));
      }
      if ((jsonObj.get("vendorPartNumber") != null && !jsonObj.get("vendorPartNumber").isJsonNull()) && !jsonObj.get("vendorPartNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vendorPartNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vendorPartNumber").toString()));
      }
      if ((jsonObj.get("extendedVendorPartNumber") != null && !jsonObj.get("extendedVendorPartNumber").isJsonNull()) && !jsonObj.get("extendedVendorPartNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `extendedVendorPartNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("extendedVendorPartNumber").toString()));
      }
      if ((jsonObj.get("customerPartNumber") != null && !jsonObj.get("customerPartNumber").isJsonNull()) && !jsonObj.get("customerPartNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerPartNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerPartNumber").toString()));
      }
      if ((jsonObj.get("upc") != null && !jsonObj.get("upc").isJsonNull()) && !jsonObj.get("upc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `upc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("upc").toString()));
      }
      if ((jsonObj.get("partNumberType") != null && !jsonObj.get("partNumberType").isJsonNull()) && !jsonObj.get("partNumberType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `partNumberType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("partNumberType").toString()));
      }
      if ((jsonObj.get("vendorNumber") != null && !jsonObj.get("vendorNumber").isJsonNull()) && !jsonObj.get("vendorNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vendorNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vendorNumber").toString()));
      }
      if ((jsonObj.get("vendorName") != null && !jsonObj.get("vendorName").isJsonNull()) && !jsonObj.get("vendorName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vendorName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vendorName").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("productClass") != null && !jsonObj.get("productClass").isJsonNull()) && !jsonObj.get("productClass").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productClass` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productClass").toString()));
      }
      if ((jsonObj.get("uom") != null && !jsonObj.get("uom").isJsonNull()) && !jsonObj.get("uom").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uom` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uom").toString()));
      }
      if ((jsonObj.get("productStatus") != null && !jsonObj.get("productStatus").isJsonNull()) && !jsonObj.get("productStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productStatus").toString()));
      }
      if ((jsonObj.get("govtProgramType") != null && !jsonObj.get("govtProgramType").isJsonNull()) && !jsonObj.get("govtProgramType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `govtProgramType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("govtProgramType").toString()));
      }
      if ((jsonObj.get("govtEndUserType") != null && !jsonObj.get("govtEndUserType").isJsonNull()) && !jsonObj.get("govtEndUserType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `govtEndUserType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("govtEndUserType").toString()));
      }
      // validate the optional field `availability`
      if (jsonObj.get("availability") != null && !jsonObj.get("availability").isJsonNull()) {
        PriceAndAvailabilityResponseInnerAvailability.validateJsonElement(jsonObj.get("availability"));
      }
      if (jsonObj.get("reserveInventoryDetails") != null && !jsonObj.get("reserveInventoryDetails").isJsonNull()) {
        JsonArray jsonArrayreserveInventoryDetails = jsonObj.getAsJsonArray("reserveInventoryDetails");
        if (jsonArrayreserveInventoryDetails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("reserveInventoryDetails").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `reserveInventoryDetails` to be an array in the JSON string but got `%s`", jsonObj.get("reserveInventoryDetails").toString()));
          }

          // validate the optional field `reserveInventoryDetails` (array)
          for (int i = 0; i < jsonArrayreserveInventoryDetails.size(); i++) {
            PriceAndAvailabilityResponseInnerReserveInventoryDetailsInner.validateJsonElement(jsonArrayreserveInventoryDetails.get(i));
          };
        }
      }
      // validate the optional field `pricing`
      if (jsonObj.get("pricing") != null && !jsonObj.get("pricing").isJsonNull()) {
        PriceAndAvailabilityResponseInnerPricing.validateJsonElement(jsonObj.get("pricing"));
      }
      if (jsonObj.get("discounts") != null && !jsonObj.get("discounts").isJsonNull()) {
        JsonArray jsonArraydiscounts = jsonObj.getAsJsonArray("discounts");
        if (jsonArraydiscounts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("discounts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `discounts` to be an array in the JSON string but got `%s`", jsonObj.get("discounts").toString()));
          }

          // validate the optional field `discounts` (array)
          for (int i = 0; i < jsonArraydiscounts.size(); i++) {
            PriceAndAvailabilityResponseInnerDiscountsInner.validateJsonElement(jsonArraydiscounts.get(i));
          };
        }
      }
      if (jsonObj.get("serviceFees") != null && !jsonObj.get("serviceFees").isJsonNull()) {
        JsonArray jsonArrayserviceFees = jsonObj.getAsJsonArray("serviceFees");
        if (jsonArrayserviceFees != null) {
          // ensure the json data is an array
          if (!jsonObj.get("serviceFees").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `serviceFees` to be an array in the JSON string but got `%s`", jsonObj.get("serviceFees").toString()));
          }

          // validate the optional field `serviceFees` (array)
          for (int i = 0; i < jsonArrayserviceFees.size(); i++) {
            PriceAndAvailabilityResponseInnerServiceFeesInner.validateJsonElement(jsonArrayserviceFees.get(i));
          };
        }
      }
      if (jsonObj.get("subscriptionPrice") != null && !jsonObj.get("subscriptionPrice").isJsonNull()) {
        JsonArray jsonArraysubscriptionPrice = jsonObj.getAsJsonArray("subscriptionPrice");
        if (jsonArraysubscriptionPrice != null) {
          // ensure the json data is an array
          if (!jsonObj.get("subscriptionPrice").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `subscriptionPrice` to be an array in the JSON string but got `%s`", jsonObj.get("subscriptionPrice").toString()));
          }

          // validate the optional field `subscriptionPrice` (array)
          for (int i = 0; i < jsonArraysubscriptionPrice.size(); i++) {
            PriceAndAvailabilityResponseInnerSubscriptionPriceInner.validateJsonElement(jsonArraysubscriptionPrice.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PriceAndAvailabilityResponseInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PriceAndAvailabilityResponseInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PriceAndAvailabilityResponseInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PriceAndAvailabilityResponseInner.class));

       return (TypeAdapter<T>) new TypeAdapter<PriceAndAvailabilityResponseInner>() {
           @Override
           public void write(JsonWriter out, PriceAndAvailabilityResponseInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PriceAndAvailabilityResponseInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PriceAndAvailabilityResponseInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PriceAndAvailabilityResponseInner
   * @throws IOException if the JSON string is invalid with respect to PriceAndAvailabilityResponseInner
   */
  public static PriceAndAvailabilityResponseInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PriceAndAvailabilityResponseInner.class);
  }

  /**
   * Convert an instance of PriceAndAvailabilityResponseInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

