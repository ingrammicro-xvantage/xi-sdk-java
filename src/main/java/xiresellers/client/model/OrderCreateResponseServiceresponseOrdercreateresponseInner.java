/*
 * XI Sdk Resellers
 * For Resellers. Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package xiresellers.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import xiresellers.client.model.OrderCreateResponseServiceresponseOrdercreateresponseInnerLinesInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import xiresellers.client.JSON;

/**
 * OrderCreateResponseServiceresponseOrdercreateresponseInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-14T10:07:36.431201Z[Etc/UTC]")
public class OrderCreateResponseServiceresponseOrdercreateresponseInner {
  public static final String SERIALIZED_NAME_NUMBEROFLINESWITHSUCCESS = "numberoflineswithsuccess";
  @SerializedName(SERIALIZED_NAME_NUMBEROFLINESWITHSUCCESS)
  private String numberoflineswithsuccess;

  public static final String SERIALIZED_NAME_NUMBEROFLINESWITHERROR = "numberoflineswitherror";
  @SerializedName(SERIALIZED_NAME_NUMBEROFLINESWITHERROR)
  private String numberoflineswitherror;

  public static final String SERIALIZED_NAME_NUMBEROFLINESWITHWARNING = "numberoflineswithwarning";
  @SerializedName(SERIALIZED_NAME_NUMBEROFLINESWITHWARNING)
  private String numberoflineswithwarning;

  public static final String SERIALIZED_NAME_GLOBALORDERID = "globalorderid";
  @SerializedName(SERIALIZED_NAME_GLOBALORDERID)
  private String globalorderid;

  /**
   * S&#x3D;Stocked PO D&#x3D;Direct Ship PO
   */
  @JsonAdapter(OrdertypeEnum.Adapter.class)
  public enum OrdertypeEnum {
    S("S"),
    
    D("D");

    private String value;

    OrdertypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OrdertypeEnum fromValue(String value) {
      for (OrdertypeEnum b : OrdertypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<OrdertypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OrdertypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OrdertypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return OrdertypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      OrdertypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ORDERTYPE = "ordertype";
  @SerializedName(SERIALIZED_NAME_ORDERTYPE)
  private OrdertypeEnum ordertype;

  public static final String SERIALIZED_NAME_ORDERTIMESTAMP = "ordertimestamp";
  @SerializedName(SERIALIZED_NAME_ORDERTIMESTAMP)
  private String ordertimestamp;

  public static final String SERIALIZED_NAME_INVOICINGSYSTEMORDERID = "invoicingsystemorderid";
  @SerializedName(SERIALIZED_NAME_INVOICINGSYSTEMORDERID)
  private String invoicingsystemorderid;

  public static final String SERIALIZED_NAME_TAXAMOUNT = "taxamount";
  @SerializedName(SERIALIZED_NAME_TAXAMOUNT)
  private BigDecimal taxamount;

  public static final String SERIALIZED_NAME_FREIGHTAMOUNT = "freightamount";
  @SerializedName(SERIALIZED_NAME_FREIGHTAMOUNT)
  private BigDecimal freightamount;

  public static final String SERIALIZED_NAME_ORDERAMOUNT = "orderamount";
  @SerializedName(SERIALIZED_NAME_ORDERAMOUNT)
  private BigDecimal orderamount;

  public static final String SERIALIZED_NAME_LINES = "Lines";
  @SerializedName(SERIALIZED_NAME_LINES)
  private List<OrderCreateResponseServiceresponseOrdercreateresponseInnerLinesInner> lines;

  public OrderCreateResponseServiceresponseOrdercreateresponseInner() {
  }

  public OrderCreateResponseServiceresponseOrdercreateresponseInner numberoflineswithsuccess(String numberoflineswithsuccess) {
    this.numberoflineswithsuccess = numberoflineswithsuccess;
    return this;
  }

   /**
   * Number of line items that were successful
   * @return numberoflineswithsuccess
  **/
  @javax.annotation.Nullable
  public String getNumberoflineswithsuccess() {
    return numberoflineswithsuccess;
  }

  public void setNumberoflineswithsuccess(String numberoflineswithsuccess) {
    this.numberoflineswithsuccess = numberoflineswithsuccess;
  }


  public OrderCreateResponseServiceresponseOrdercreateresponseInner numberoflineswitherror(String numberoflineswitherror) {
    this.numberoflineswitherror = numberoflineswitherror;
    return this;
  }

   /**
   * Number of line items with error
   * @return numberoflineswitherror
  **/
  @javax.annotation.Nullable
  public String getNumberoflineswitherror() {
    return numberoflineswitherror;
  }

  public void setNumberoflineswitherror(String numberoflineswitherror) {
    this.numberoflineswitherror = numberoflineswitherror;
  }


  public OrderCreateResponseServiceresponseOrdercreateresponseInner numberoflineswithwarning(String numberoflineswithwarning) {
    this.numberoflineswithwarning = numberoflineswithwarning;
    return this;
  }

   /**
   * Number of line items with warnings
   * @return numberoflineswithwarning
  **/
  @javax.annotation.Nullable
  public String getNumberoflineswithwarning() {
    return numberoflineswithwarning;
  }

  public void setNumberoflineswithwarning(String numberoflineswithwarning) {
    this.numberoflineswithwarning = numberoflineswithwarning;
  }


  public OrderCreateResponseServiceresponseOrdercreateresponseInner globalorderid(String globalorderid) {
    this.globalorderid = globalorderid;
    return this;
  }

   /**
   * Ingram sales order number
   * @return globalorderid
  **/
  @javax.annotation.Nullable
  public String getGlobalorderid() {
    return globalorderid;
  }

  public void setGlobalorderid(String globalorderid) {
    this.globalorderid = globalorderid;
  }


  public OrderCreateResponseServiceresponseOrdercreateresponseInner ordertype(OrdertypeEnum ordertype) {
    this.ordertype = ordertype;
    return this;
  }

   /**
   * S&#x3D;Stocked PO D&#x3D;Direct Ship PO
   * @return ordertype
  **/
  @javax.annotation.Nullable
  public OrdertypeEnum getOrdertype() {
    return ordertype;
  }

  public void setOrdertype(OrdertypeEnum ordertype) {
    this.ordertype = ordertype;
  }


  public OrderCreateResponseServiceresponseOrdercreateresponseInner ordertimestamp(String ordertimestamp) {
    this.ordertimestamp = ordertimestamp;
    return this;
  }

   /**
   * Time order received
   * @return ordertimestamp
  **/
  @javax.annotation.Nullable
  public String getOrdertimestamp() {
    return ordertimestamp;
  }

  public void setOrdertimestamp(String ordertimestamp) {
    this.ordertimestamp = ordertimestamp;
  }


  public OrderCreateResponseServiceresponseOrdercreateresponseInner invoicingsystemorderid(String invoicingsystemorderid) {
    this.invoicingsystemorderid = invoicingsystemorderid;
    return this;
  }

   /**
   * Ingram Micro generated order number
   * @return invoicingsystemorderid
  **/
  @javax.annotation.Nullable
  public String getInvoicingsystemorderid() {
    return invoicingsystemorderid;
  }

  public void setInvoicingsystemorderid(String invoicingsystemorderid) {
    this.invoicingsystemorderid = invoicingsystemorderid;
  }


  public OrderCreateResponseServiceresponseOrdercreateresponseInner taxamount(BigDecimal taxamount) {
    this.taxamount = taxamount;
    return this;
  }

   /**
   * Get taxamount
   * @return taxamount
  **/
  @javax.annotation.Nullable
  public BigDecimal getTaxamount() {
    return taxamount;
  }

  public void setTaxamount(BigDecimal taxamount) {
    this.taxamount = taxamount;
  }


  public OrderCreateResponseServiceresponseOrdercreateresponseInner freightamount(BigDecimal freightamount) {
    this.freightamount = freightamount;
    return this;
  }

   /**
   * Freight amount customer pays for freight
   * @return freightamount
  **/
  @javax.annotation.Nullable
  public BigDecimal getFreightamount() {
    return freightamount;
  }

  public void setFreightamount(BigDecimal freightamount) {
    this.freightamount = freightamount;
  }


  public OrderCreateResponseServiceresponseOrdercreateresponseInner orderamount(BigDecimal orderamount) {
    this.orderamount = orderamount;
    return this;
  }

   /**
   * Total amount of order with freight and taxes
   * @return orderamount
  **/
  @javax.annotation.Nullable
  public BigDecimal getOrderamount() {
    return orderamount;
  }

  public void setOrderamount(BigDecimal orderamount) {
    this.orderamount = orderamount;
  }


  public OrderCreateResponseServiceresponseOrdercreateresponseInner lines(List<OrderCreateResponseServiceresponseOrdercreateresponseInnerLinesInner> lines) {
    this.lines = lines;
    return this;
  }

  public OrderCreateResponseServiceresponseOrdercreateresponseInner addLinesItem(OrderCreateResponseServiceresponseOrdercreateresponseInnerLinesInner linesItem) {
    if (this.lines == null) {
      this.lines = new ArrayList<>();
    }
    this.lines.add(linesItem);
    return this;
  }

   /**
   * Collection of lines
   * @return lines
  **/
  @javax.annotation.Nullable
  public List<OrderCreateResponseServiceresponseOrdercreateresponseInnerLinesInner> getLines() {
    return lines;
  }

  public void setLines(List<OrderCreateResponseServiceresponseOrdercreateresponseInnerLinesInner> lines) {
    this.lines = lines;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderCreateResponseServiceresponseOrdercreateresponseInner orderCreateResponseServiceresponseOrdercreateresponseInner = (OrderCreateResponseServiceresponseOrdercreateresponseInner) o;
    return Objects.equals(this.numberoflineswithsuccess, orderCreateResponseServiceresponseOrdercreateresponseInner.numberoflineswithsuccess) &&
        Objects.equals(this.numberoflineswitherror, orderCreateResponseServiceresponseOrdercreateresponseInner.numberoflineswitherror) &&
        Objects.equals(this.numberoflineswithwarning, orderCreateResponseServiceresponseOrdercreateresponseInner.numberoflineswithwarning) &&
        Objects.equals(this.globalorderid, orderCreateResponseServiceresponseOrdercreateresponseInner.globalorderid) &&
        Objects.equals(this.ordertype, orderCreateResponseServiceresponseOrdercreateresponseInner.ordertype) &&
        Objects.equals(this.ordertimestamp, orderCreateResponseServiceresponseOrdercreateresponseInner.ordertimestamp) &&
        Objects.equals(this.invoicingsystemorderid, orderCreateResponseServiceresponseOrdercreateresponseInner.invoicingsystemorderid) &&
        Objects.equals(this.taxamount, orderCreateResponseServiceresponseOrdercreateresponseInner.taxamount) &&
        Objects.equals(this.freightamount, orderCreateResponseServiceresponseOrdercreateresponseInner.freightamount) &&
        Objects.equals(this.orderamount, orderCreateResponseServiceresponseOrdercreateresponseInner.orderamount) &&
        Objects.equals(this.lines, orderCreateResponseServiceresponseOrdercreateresponseInner.lines);
  }

  @Override
  public int hashCode() {
    return Objects.hash(numberoflineswithsuccess, numberoflineswitherror, numberoflineswithwarning, globalorderid, ordertype, ordertimestamp, invoicingsystemorderid, taxamount, freightamount, orderamount, lines);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderCreateResponseServiceresponseOrdercreateresponseInner {\n");
    sb.append("    numberoflineswithsuccess: ").append(toIndentedString(numberoflineswithsuccess)).append("\n");
    sb.append("    numberoflineswitherror: ").append(toIndentedString(numberoflineswitherror)).append("\n");
    sb.append("    numberoflineswithwarning: ").append(toIndentedString(numberoflineswithwarning)).append("\n");
    sb.append("    globalorderid: ").append(toIndentedString(globalorderid)).append("\n");
    sb.append("    ordertype: ").append(toIndentedString(ordertype)).append("\n");
    sb.append("    ordertimestamp: ").append(toIndentedString(ordertimestamp)).append("\n");
    sb.append("    invoicingsystemorderid: ").append(toIndentedString(invoicingsystemorderid)).append("\n");
    sb.append("    taxamount: ").append(toIndentedString(taxamount)).append("\n");
    sb.append("    freightamount: ").append(toIndentedString(freightamount)).append("\n");
    sb.append("    orderamount: ").append(toIndentedString(orderamount)).append("\n");
    sb.append("    lines: ").append(toIndentedString(lines)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("numberoflineswithsuccess");
    openapiFields.add("numberoflineswitherror");
    openapiFields.add("numberoflineswithwarning");
    openapiFields.add("globalorderid");
    openapiFields.add("ordertype");
    openapiFields.add("ordertimestamp");
    openapiFields.add("invoicingsystemorderid");
    openapiFields.add("taxamount");
    openapiFields.add("freightamount");
    openapiFields.add("orderamount");
    openapiFields.add("Lines");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to OrderCreateResponseServiceresponseOrdercreateresponseInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrderCreateResponseServiceresponseOrdercreateresponseInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderCreateResponseServiceresponseOrdercreateresponseInner is not found in the empty JSON string", OrderCreateResponseServiceresponseOrdercreateresponseInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrderCreateResponseServiceresponseOrdercreateresponseInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderCreateResponseServiceresponseOrdercreateresponseInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("numberoflineswithsuccess") != null && !jsonObj.get("numberoflineswithsuccess").isJsonNull()) && !jsonObj.get("numberoflineswithsuccess").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `numberoflineswithsuccess` to be a primitive type in the JSON string but got `%s`", jsonObj.get("numberoflineswithsuccess").toString()));
      }
      if ((jsonObj.get("numberoflineswitherror") != null && !jsonObj.get("numberoflineswitherror").isJsonNull()) && !jsonObj.get("numberoflineswitherror").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `numberoflineswitherror` to be a primitive type in the JSON string but got `%s`", jsonObj.get("numberoflineswitherror").toString()));
      }
      if ((jsonObj.get("numberoflineswithwarning") != null && !jsonObj.get("numberoflineswithwarning").isJsonNull()) && !jsonObj.get("numberoflineswithwarning").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `numberoflineswithwarning` to be a primitive type in the JSON string but got `%s`", jsonObj.get("numberoflineswithwarning").toString()));
      }
      if ((jsonObj.get("globalorderid") != null && !jsonObj.get("globalorderid").isJsonNull()) && !jsonObj.get("globalorderid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `globalorderid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("globalorderid").toString()));
      }
      if ((jsonObj.get("ordertype") != null && !jsonObj.get("ordertype").isJsonNull()) && !jsonObj.get("ordertype").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ordertype` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ordertype").toString()));
      }
      // validate the optional field `ordertype`
      if (jsonObj.get("ordertype") != null && !jsonObj.get("ordertype").isJsonNull()) {
        OrdertypeEnum.validateJsonElement(jsonObj.get("ordertype"));
      }
      if ((jsonObj.get("ordertimestamp") != null && !jsonObj.get("ordertimestamp").isJsonNull()) && !jsonObj.get("ordertimestamp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ordertimestamp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ordertimestamp").toString()));
      }
      if ((jsonObj.get("invoicingsystemorderid") != null && !jsonObj.get("invoicingsystemorderid").isJsonNull()) && !jsonObj.get("invoicingsystemorderid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `invoicingsystemorderid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("invoicingsystemorderid").toString()));
      }
      if (jsonObj.get("Lines") != null && !jsonObj.get("Lines").isJsonNull()) {
        JsonArray jsonArraylines = jsonObj.getAsJsonArray("Lines");
        if (jsonArraylines != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Lines").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Lines` to be an array in the JSON string but got `%s`", jsonObj.get("Lines").toString()));
          }

          // validate the optional field `Lines` (array)
          for (int i = 0; i < jsonArraylines.size(); i++) {
            OrderCreateResponseServiceresponseOrdercreateresponseInnerLinesInner.validateJsonElement(jsonArraylines.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderCreateResponseServiceresponseOrdercreateresponseInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderCreateResponseServiceresponseOrdercreateresponseInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderCreateResponseServiceresponseOrdercreateresponseInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderCreateResponseServiceresponseOrdercreateresponseInner.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderCreateResponseServiceresponseOrdercreateresponseInner>() {
           @Override
           public void write(JsonWriter out, OrderCreateResponseServiceresponseOrdercreateresponseInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderCreateResponseServiceresponseOrdercreateresponseInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OrderCreateResponseServiceresponseOrdercreateresponseInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OrderCreateResponseServiceresponseOrdercreateresponseInner
  * @throws IOException if the JSON string is invalid with respect to OrderCreateResponseServiceresponseOrdercreateresponseInner
  */
  public static OrderCreateResponseServiceresponseOrdercreateresponseInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderCreateResponseServiceresponseOrdercreateresponseInner.class);
  }

 /**
  * Convert an instance of OrderCreateResponseServiceresponseOrdercreateresponseInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

