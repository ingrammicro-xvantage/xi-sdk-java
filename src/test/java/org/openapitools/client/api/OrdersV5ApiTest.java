/*
 * Reseller API Documentation
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapitools.client.model.OrderCancelResponse;
import org.openapitools.client.model.OrderCreateRequest;
import org.openapitools.client.model.OrderCreateResponse;
import org.openapitools.client.model.OrderDetailResponse;
import org.openapitools.client.model.OrderSearchResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OrdersV5Api
 */
@Disabled
public class OrdersV5ApiTest {

    private final OrdersV5Api api = new OrdersV5Api();

    /**
     * Cancel an Existing Order
     *
     * This endpoint is a request to cancel a previously accepted order. Use your Ingram Micro sales order number to cancel an order.   The &lt;strong&gt;orderNumber, isoCountryCode, customerNumber&lt;/strong&gt; and &lt;strong&gt;entryDate&lt;/strong&gt; parameters are required.   This call must be submitted &lt;strong&gt;before&lt;/strong&gt; the order is released to Ingram Micro’s warehouse. The order cannot be canceled once it is released to the warehouse.   Direct ship orders cannot be canceled. Contact your Ingram Micro sales rep for assistance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteOrdersOrderNumberTest() throws ApiException {
        String ordernumber = null;
        String customerNumber = null;
        String isoCountryCode = null;
        String entryDate = null;
        OrderCancelResponse response = api.deleteOrdersOrderNumber(ordernumber, customerNumber, isoCountryCode, entryDate);
        // TODO: test validations
    }

    /**
     * Search your Orders
     *
     * Search your Ingram Micro orders. This endpoint searches by multiple order parameters and supports pagination of results. Search using one or more of the parameters below:   &lt;ul&gt;&lt;li&gt;ordernumber — Ingram Micro sales order number&lt;/li&gt;&lt;li&gt;customerordernumber — The PO or order number provided by you when creating an order&lt;/li&gt;&lt;li&gt;orderstatus — user order status codes for the search, default is set to \&quot;any\&quot;&lt;/li&gt;&lt;li&gt;startcreatetimestamp and endcreatetimestamp — Order create date range&lt;/li&gt;&lt;/ul&gt;   For pagination, please use these parameters:  &lt;ul&gt;&lt;li&gt;pagesize — default 25, max 100&lt;/li&gt;&lt;li&gt;pagenumber — default 1&lt;/li&gt;&lt;/ul&gt;   Order Status Values:  &lt;ul&gt;&lt;li&gt;P – PENDING&lt;/li&gt;&lt;li&gt;R – RELEASED&lt;/li&gt;&lt;li&gt;4 – SHIPPED&lt;/li&gt;&lt;li&gt;I – INVOICED&lt;/li&gt;&lt;li&gt;V – VOIDED&lt;/li&gt;&lt;/ul&gt;   The search endpoint also returns HATEOAS links for order details and invoice details, if applicable.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrdersSearchTest() throws ApiException {
        String customerNumber = null;
        String isocountrycode = null;
        String ordernumber = null;
        String customerordernumber = null;
        String orderstatus = null;
        OffsetDateTime startcreatetimestamp = null;
        OffsetDateTime endcreatetimestamp = null;
        Integer pagesize = null;
        Integer pagenumber = null;
        OrderSearchResponse response = api.getOrdersSearch(customerNumber, isocountrycode, ordernumber, customerordernumber, orderstatus, startcreatetimestamp, endcreatetimestamp, pagesize, pagenumber);
        // TODO: test validations
    }

    /**
     * Get Order Details
     *
     * Use your Ingram Micro sales order number to search for existing orders or retrieve existing order details.   &lt;b&gt;The sales order number, customer number and isoCountryCode are required parameters.&lt;/b&gt;   The sales order number is returned in the Order Create POST response. Ingram Micro recommends that you save this number for future uses.   The IM sales order number can also be retrieved by searching for your existing order using the Order Search GET endpoint. You will need the customer PO number or order number that was provided at the time of order creation.   In a case when the IM sales order number is repeated, you can refine the result by providing customer order number for additional filtering or using the date range to filter orders by creation date.   Use the \&quot;simulate\&quot; query parameter to test the GET order response for various order statuses. This parameter is only available in the sandbox to help with development and testing of the GET order endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getV5OrdersDetailsTest() throws ApiException {
        String ordernumber = null;
        String customernumber = null;
        String isocountrycode = null;
        String customerordernumber = null;
        LocalDate startcreatetimestamp = null;
        String endcreatetimestamp = null;
        String simulate = null;
        OrderDetailResponse response = api.getV5OrdersDetails(ordernumber, customernumber, isocountrycode, customerordernumber, startcreatetimestamp, endcreatetimestamp, simulate);
        // TODO: test validations
    }

    /**
     * Create a New Order
     *
     * Instantly create and place orders. The POST API supports stocked SKUs as well as licensing and warranties SKUs.   Every order to be created with this API must complete these validations to be placed and processed:&lt;ul&gt;&lt;li&gt;SKU, shipping address, product authorization and stock allocations must clear validation.&lt;/li&gt;&lt;li&gt;Ingram Micro Sales validates pricing, stock or other processing parameters. Ingram Micro sales may place an order a hold if revision is necessary.&lt;/li&gt;&lt;li&gt;Credit validation confirms available credit prior to processing an order. If an order does not clear credit validation, the Ingram Micro sales rep or accounts receivable manager will contact you for next steps.&lt;/li&gt;&lt;li&gt;Warehouse validation selects the location closest to the destination zip code. If the stock is not available in any of the warehouses, Ingram Micro places a backorder in the warehouse closest to the destination zip code.&lt;/li&gt;&lt;/ul&gt;   Ingram Micro recommends that you provide the &lt;strong&gt;ingrampartnumber&lt;/strong&gt; for each SKU contained in each order.   When using &lt;strong&gt;vendorpartnumber&lt;/strong&gt; to place an order, please use the product search endpoint to find the &lt;strong&gt;ingrampartnumber&lt;/strong&gt; for a specific &lt;strong&gt;vendorpartnumber&lt;/strong&gt;, and then supply the &lt;strong&gt;ingrampartnumber&lt;/strong&gt; to place an order.   &lt;strong&gt;NOTE:&lt;/strong&gt; You must have net terms to use the &lt;strong&gt;Ingram Micro Order Create API&lt;/strong&gt;. Ingram Micro offers trade credit when using our APIs, and repayment is based on net terms. For example, if your net terms agreement is net-30, you will have 30 days to make a full payment. Ingram Micro does not allow credit card transactions for API ordering.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postV5OrdersCreateTest() throws ApiException {
        OrderCreateRequest orderCreateRequest = null;
        OrderCreateResponse response = api.postV5OrdersCreate(orderCreateRequest);
        // TODO: test validations
    }

}
